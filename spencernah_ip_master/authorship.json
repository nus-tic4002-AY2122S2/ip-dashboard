[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"/*","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":" *","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":" * This is a general purpose Gradle build.","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":" * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.4/samples","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":" * This project uses @Incubating APIs which are subject to change.","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"plugins {","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"mainClassName \u003d \u0027Main\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"run {","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"repositories { mavenCentral() }","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"javafx {","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"checkstyle {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"dependencies {","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.7.0\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"spencernah":52}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"0;E;true;task3;2019-06-09;-1;-1;note note","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"1;T;false;test 1;;3;-1; this is a test","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"2;T;false;test 2;;-1;2;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"3;E;false;test ;2022-02-02;-1;-1;","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"4;E;false;test ;2022-02-22;-1;-1;","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"spencernah":5}},{"path":"docs/DeveloperGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"# Developer Guide","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"## Design \u0026 implementation","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"### AddCommand","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"AddCommand() is shared between all 3 task types; to-do, events and deadlines","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"\u003cimg src\u003d\"images/AddCommandSequenceDiagram.png\" alt\u003d\"add-command-uml\"/\u003e","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"## Product scope","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"### Target user profile","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"Students and working professional who needs to manage multiple timelines.","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"### Value proposition","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"Duke aims to improve time management of users and provide a seamless and intuitive experience.","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"## User Stories","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"|v1.0|user|be able to add a to-do|keep track memorising them|","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"|v1.0|user|be able to add an event|keep track without memorising them|","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"|v1.0|user|be able to add a deadline|keep track without memorising them|","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"|v1.0|user|view my entire task list|refer to the details whenever|","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"|v1.0|user|delete tasks|remove redundant ones|","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"|v1.0|user|mark tasks as completed|keep track of the progress without memorising them|","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"|v2.0|user|view my task list by status|review the incomplete tasks|","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"|v2.0|user|be reminded of my upcoming events and deadlines|will not forget them and work on them immediately, respectively|","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"|v2.0|user|filter my list by event dates and/or deadlines|review the tasks for the specified day|","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"|v3.0|user|associate a task to another|finish them sequentially|","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"|v3.0|user|add notes to a task|keep track of the details|","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"|v3.0|user|delete notes of a task|remove unnecessary ones|","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"|v3.0|user|update existing notes|it is up-to-date|","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"|v4.0|user|view tasks that has notes|review these tasks|","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"|v4.0|user|search tasks by keywords in notes|review tasks based on the keywords|","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"## Non-Functional Requirements","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"Reliability - Application should save any updates/work done by the user without fail.","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"## Glossary","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"* *tasks* - is a parent term used to group to-do, event and deadline.","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"spencernah":46}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"# Duke","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"Duke is a schedule tracker that allows users to plan their to-do tasks, deadlines and events. Duke aims ","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"to empower users with intuitive and helpful features that will improve user\u0027s experience.","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"Useful links:","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"spencernah":6,"-":2}},{"path":"docs/UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"# User Guide","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"## Features","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"### Create a task list that you can review anytime","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"To do, deadline or event tasks! Up to your choosing!","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"### Add notes to your tasks","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"Add notes to specific task and review them later!","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"### Different ways to view your list","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"View your task list in different ways; by date, status, notes, keywords or everything!","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"### Smarter search functionality","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"Duke returns tasks that contains keywords that you searched for! You do not need to input the exact description or notes anymore!","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"### Automatically saves your progress","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"There\u0027s no need to manually save your work, Duke does it automatically for you everytime you enter a command!","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"### Link tasks that are dependent on one another","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"Need to complete tasks in sequential order? No problem! You can associate tasks with one another!","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"## Usage","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"### todo - creates a to-do task","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"Adds a to-do task to your list!","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"Format:`todo \u003cdesc\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"Example of Usage: `todo Say Hello to World`","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"\u003eExpected outcome: A to-do task, named *\"Say Hello to World\"*, will be added to your task list","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"### event - creates an event","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"Adds an event task to your list! You can add a date to the event, if you\u0027d like to!","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"Format: `event \u003cdesc\u003e /\u003cdate\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"Example of Usage:`event Say Hello to World /2022-02-20`","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"\u003e Expected outcome: An event, named *\"Say Hello to World\"*, with a date of 20 Feb 2022 will be added to your task list","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"\u003e \u003e Note: Date has strict format of \"yyyy-mm-dd\" ","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"### deadline - creates a deadline","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"Adds a deadline task to your list! Like event, you can add a due date to it, if you\u0027d like to!","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"Format: `deadline \u003cdesc\u003e /\u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"Example of Usage: `deadline Say Hello to World /2022-02-20`","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"\u003e Expected outcome: An deadline, named *\"Say Hello to World\"*, with a due date of 20 Feb 2022 will be added to your task list","lastModifiedDate":"2022-02-21"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"\u003e \u003e Note: Date has strict format of \"yyyy-mm-dd\"","lastModifiedDate":"2022-02-21"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"### done - marks a task as completed","lastModifiedDate":"2022-02-21"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"Format: `done \u003ctask index\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"Example of Usage: `done 1`","lastModifiedDate":"2022-02-21"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"\u003e Expected outcome: The first task in your task list will be marked as completed!","lastModifiedDate":"2022-02-21"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"### delete - deletes a task","lastModifiedDate":"2022-02-21"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"Format: `delete \u003ctask index\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"Example of Usage: `delete 1`","lastModifiedDate":"2022-02-21"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"\u003e Expected outcome: The first task in your task list will be deleted!","lastModifiedDate":"2022-02-21"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"\u003e \u003e WARNING: Deletion is IRREVERSIBLE! Tread carefully!!!","lastModifiedDate":"2022-02-21"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"### list - display all task(s)","lastModifiedDate":"2022-02-21"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"View every single tasks in your tasks list!","lastModifiedDate":"2022-02-21"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"Format: `list`","lastModifiedDate":"2022-02-21"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":"\u003e Expected outcome: A list with every tasks will be displayed!","lastModifiedDate":"2022-02-21"},{"lineNumber":77,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":78,"author":{"gitId":"spencernah"},"content":"### list pending - display incomplete task(s)","lastModifiedDate":"2022-02-21"},{"lineNumber":79,"author":{"gitId":"spencernah"},"content":"View a list of incomplete tasks!","lastModifiedDate":"2022-02-21"},{"lineNumber":80,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":81,"author":{"gitId":"spencernah"},"content":"Format: `list pending`","lastModifiedDate":"2022-02-21"},{"lineNumber":82,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":83,"author":{"gitId":"spencernah"},"content":"\u003e Expected outcome: Only tasks that have not been marked as \"done\" will be displayed","lastModifiedDate":"2022-02-21"},{"lineNumber":84,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":85,"author":{"gitId":"spencernah"},"content":"### list completed - display completed task(s)","lastModifiedDate":"2022-02-21"},{"lineNumber":86,"author":{"gitId":"spencernah"},"content":"View a list of completed tasks!","lastModifiedDate":"2022-02-21"},{"lineNumber":87,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":88,"author":{"gitId":"spencernah"},"content":"Format: `list completed`","lastModifiedDate":"2022-02-21"},{"lineNumber":89,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":90,"author":{"gitId":"spencernah"},"content":"\u003e Expected outcome: Only tasks that have been marked as \"done\" will be displayed","lastModifiedDate":"2022-02-21"},{"lineNumber":91,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":92,"author":{"gitId":"spencernah"},"content":"### list date - filter task list by date","lastModifiedDate":"2022-02-21"},{"lineNumber":93,"author":{"gitId":"spencernah"},"content":"View a list of events and deadlines that falls on the specified date","lastModifiedDate":"2022-02-21"},{"lineNumber":94,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":95,"author":{"gitId":"spencernah"},"content":"Format: `list date /\u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":96,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":97,"author":{"gitId":"spencernah"},"content":"Example of Usage: `list date /2022-02-02`","lastModifiedDate":"2022-02-21"},{"lineNumber":98,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":99,"author":{"gitId":"spencernah"},"content":"\u003eExpected outcome: Only events and deadlines that coincides with the input date will be displayed","lastModifiedDate":"2022-02-21"},{"lineNumber":100,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":101,"author":{"gitId":"spencernah"},"content":"### find - search for a task based on keywords in the description","lastModifiedDate":"2022-02-21"},{"lineNumber":102,"author":{"gitId":"spencernah"},"content":"Filter the list by task description that matches your keyword(s)!","lastModifiedDate":"2022-02-21"},{"lineNumber":103,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":104,"author":{"gitId":"spencernah"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":105,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":106,"author":{"gitId":"spencernah"},"content":"Example of Usage: `find Hello World`","lastModifiedDate":"2022-02-21"},{"lineNumber":107,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":108,"author":{"gitId":"spencernah"},"content":"\u003e Expected outcome: Only tasks with keyword (partial or full match) in its name will be displayed.","lastModifiedDate":"2022-02-21"},{"lineNumber":109,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":110,"author":{"gitId":"spencernah"},"content":"### do after - assign a task to another","lastModifiedDate":"2022-02-21"},{"lineNumber":111,"author":{"gitId":"spencernah"},"content":"Complete your task in sequential order by associating one with another!","lastModifiedDate":"2022-02-21"},{"lineNumber":112,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":113,"author":{"gitId":"spencernah"},"content":"Format: `do after \u003ctask index\u003e /\u003ctask index\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":114,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":115,"author":{"gitId":"spencernah"},"content":"Example of Usage: `do after \u003cparent task index\u003e /\u003cchild task index\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":116,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":117,"author":{"gitId":"spencernah"},"content":"\u003e Expected outcome: Child task will be associated to parent task! ","lastModifiedDate":"2022-02-21"},{"lineNumber":118,"author":{"gitId":"spencernah"},"content":"\u003e \u003e Note: You cannot complete a child task before the parent task!","lastModifiedDate":"2022-02-21"},{"lineNumber":119,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":120,"author":{"gitId":"spencernah"},"content":"### note add - appends new notes to existing notes","lastModifiedDate":"2022-02-21"},{"lineNumber":121,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":122,"author":{"gitId":"spencernah"},"content":"Format: `note add \u003ctask index\u003e \u003cnotes\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":123,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":124,"author":{"gitId":"spencernah"},"content":"Example of Usage: `note add 1 Bye World!`","lastModifiedDate":"2022-02-21"},{"lineNumber":125,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":126,"author":{"gitId":"spencernah"},"content":"\u003e Expected outcome: *\"Bye World!\"* will be appended to the existing note of the first task","lastModifiedDate":"2022-02-21"},{"lineNumber":127,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":128,"author":{"gitId":"spencernah"},"content":"### note update - replace existing note with new note","lastModifiedDate":"2022-02-21"},{"lineNumber":129,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":130,"author":{"gitId":"spencernah"},"content":"Format: `note update \u003ctask index\u003e \u003cnotes\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":131,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":132,"author":{"gitId":"spencernah"},"content":"Example of Usage: `note update 1 Goodbye World!`","lastModifiedDate":"2022-02-21"},{"lineNumber":133,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":134,"author":{"gitId":"spencernah"},"content":"\u003e Expected outcome: *\"Goodbye World!\"* will replace any existing note in the first task","lastModifiedDate":"2022-02-21"},{"lineNumber":135,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":136,"author":{"gitId":"spencernah"},"content":"### note delete - delete any existing note","lastModifiedDate":"2022-02-21"},{"lineNumber":137,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":138,"author":{"gitId":"spencernah"},"content":"Format: `note delete \u003ctask index\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":139,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":140,"author":{"gitId":"spencernah"},"content":"Example of Usage: `note delete 1`","lastModifiedDate":"2022-02-21"},{"lineNumber":141,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":142,"author":{"gitId":"spencernah"},"content":"\u003e Expected outcome: No more notes in the first task!","lastModifiedDate":"2022-02-21"},{"lineNumber":143,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":144,"author":{"gitId":"spencernah"},"content":"### find note: - search for a task based on keywords in the notes","lastModifiedDate":"2022-02-21"},{"lineNumber":145,"author":{"gitId":"spencernah"},"content":"Filter the list by notes that matches your keyword(s)!","lastModifiedDate":"2022-02-21"},{"lineNumber":146,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":147,"author":{"gitId":"spencernah"},"content":"Format: `find note: \u003ckeyword\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":148,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":149,"author":{"gitId":"spencernah"},"content":"Example of Usage: `find note: Hello World!`","lastModifiedDate":"2022-02-21"},{"lineNumber":150,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":151,"author":{"gitId":"spencernah"},"content":"\u003e Expected outcome: Tasks with notes that contains *\"Hello World!\"* will be displayed!","lastModifiedDate":"2022-02-21"},{"lineNumber":152,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":153,"author":{"gitId":"spencernah"},"content":"### list note - view list of tasks with notes","lastModifiedDate":"2022-02-21"},{"lineNumber":154,"author":{"gitId":"spencernah"},"content":"Filter for tasks with notes only","lastModifiedDate":"2022-02-21"},{"lineNumber":155,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":156,"author":{"gitId":"spencernah"},"content":"Format: `list note`","lastModifiedDate":"2022-02-21"},{"lineNumber":157,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":158,"author":{"gitId":"spencernah"},"content":"\u003e Expected outcome: Tasks with notes will be displayed","lastModifiedDate":"2022-02-21"},{"lineNumber":159,"author":{"gitId":"spencernah"},"content":" ","lastModifiedDate":"2022-02-21"},{"lineNumber":160,"author":{"gitId":"spencernah"},"content":"## Command Summary","lastModifiedDate":"2022-02-21"},{"lineNumber":161,"author":{"gitId":"spencernah"},"content":"* Add todo `todo \u003cdesc\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":162,"author":{"gitId":"spencernah"},"content":"* Add event `event \u003cdesc\u003e /\u003cdate\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":163,"author":{"gitId":"spencernah"},"content":"* Add deadline `deadline \u003cdesc\u003e /\u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":164,"author":{"gitId":"spencernah"},"content":"* Marks task as completed `done \u003ctask index\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":165,"author":{"gitId":"spencernah"},"content":"* Delete task `delete \u003ctask index\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":166,"author":{"gitId":"spencernah"},"content":"* View all task(s) `list`","lastModifiedDate":"2022-02-21"},{"lineNumber":167,"author":{"gitId":"spencernah"},"content":"* View incomplete task(s) `list pending`","lastModifiedDate":"2022-02-21"},{"lineNumber":168,"author":{"gitId":"spencernah"},"content":"* View completed task(s) `list completed`","lastModifiedDate":"2022-02-21"},{"lineNumber":169,"author":{"gitId":"spencernah"},"content":"* View task(s) by date `list date /\u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":170,"author":{"gitId":"spencernah"},"content":"* Find tasks by description `find \u003ckeyword\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":171,"author":{"gitId":"spencernah"},"content":"* Set do after tasks `do after \u003ctask index\u003e /\u003ctask index\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":172,"author":{"gitId":"spencernah"},"content":"* Add new notes `note add \u003ctask index\u003e \u003cnotes\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":173,"author":{"gitId":"spencernah"},"content":"* Append to existing notes `note add \u003ctask index\u003e \u003cnotes\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":174,"author":{"gitId":"spencernah"},"content":"* Replace existing notes `note update \u003ctask index\u003e \u003cnotes\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":175,"author":{"gitId":"spencernah"},"content":"* Delete existing notes `note delete \u003ctask index\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":176,"author":{"gitId":"spencernah"},"content":"* Find tasks by notes `find note: \u003ckeyword\u003e`","lastModifiedDate":"2022-02-21"},{"lineNumber":177,"author":{"gitId":"spencernah"},"content":"* View tasks with notes `list note`","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"spencernah":177}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"@rem","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"@rem","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"@rem","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"@rem","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"@rem","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"@rem","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"@rem","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"@rem Find java.exe","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"echo.","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"echo.","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"goto fail","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"echo.","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"echo.","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"goto fail","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":":execute","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"@rem Setup the command line","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":":end","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"spencernah"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"spencernah"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"spencernah"},"content":":fail","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"spencernah"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"spencernah"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"spencernah"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"spencernah"},"content":"exit /b 1","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"spencernah"},"content":":mainEnd","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"spencernah"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"spencernah"},"content":":omega","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"spencernah":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"/*","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":" *","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":" *","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":" * in the user manual at https://docs.gradle.org/7.4/userguide/multi_project_builds.html","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":" * This project uses @Incubating APIs which are subject to change.","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"spencernah":11}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.others.DateFormat;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Entry point of the Duke application.","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Sets up the required objects, loads up the data from the storage file, and prints the welcome message.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param filePath argument is the directory where the data for the existing task list (if any) is stored.","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *                 The argument is hardcoded at the moment.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            ui.print(\"No existing To Do List. Generating a new one\");","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            ui.print(\"Unable to read specific lines in data.txt file\");","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            ui.print(\"Dates in the data.txt file is incompatible. Duke reads date in \" + DateFormat.STANDARD + \" only\");","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command c;","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"        try {","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"            c \u003d Parser.parse(input);","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"            return \"Line not found\";","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"            return \"Please enter the date in this format: \" + DateFormat.STANDARD;","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"spencernah":17,"-":43}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents an executable duke.command class to be inherited","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Represents the status of the application. If True, application will be terminated */","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    protected boolean isExit;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public Command() {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"        return null;","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":6,"-":18}},{"path":"src/main/java/duke/command/list/FilterByDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.list;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.others.Messages;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Display list of task based on a user input date.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"public class FilterByDateCommand extends Command {","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param date user input date","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    public FilterByDateCommand(LocalDate date) {","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     * Filter and list tasks by date (based on user\u0027s input).","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param tasks task list","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws DukeException if task list is empty or there are no tasks with date equals to the user input date.","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String input \u003d getListByDate(tasks, this.date);","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (tasks.isEmpty() || input.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        input \u003d Messages.LIST_HEADER + input;","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private String getListByDate(TaskList tasks, LocalDate date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"            if (tasks.get(i).getType().equals(\"T\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (tasks.get(i).getDate().equals(date)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"                input \u003d input.concat((i + 1) + \". \" + tasks.get(i).getTypeStatusDescNotes() + \"\\n\");","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":11,"-":43}},{"path":"src/main/java/duke/command/list/FilterByDescCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.list;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.others.Messages;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Display list of tasks based on user input task description.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"public class FilterByDescCommand extends Command {","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected String keyword;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param input user input task description.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    public FilterByDescCommand(String input) {","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.keyword \u003d input;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"     * Find the corresponding task in the task list.","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if task list is empty or there are no tasks with description that matches the keyword(s).","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String input \u003d getListByDesc(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (tasks.isEmpty() || input.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        input \u003d Messages.LIST_HEADER + input;","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private String getListByDesc (TaskList tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            if (tasks.get(i).getDesc().matches(\".*\" + this.keyword + \".*\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"                input \u003d input.concat(\"\\t\" + (i + 1) + \". \" + tasks.get(i).getTypeStatusDescNotes() + \"\\n\");","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":9,"-":40}},{"path":"src/main/java/duke/command/list/FilterByNotesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.list;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":" * Display list of tasks with notes that matches keyword(s).","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"public class FilterByNotesCommand extends Command {","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    protected String keyword;","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"     * @param input for note\u0027s keywords.","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    public FilterByNotesCommand(String input) {","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"        this.keyword \u003d input;","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"     * Find tasks with notes that matches the keyword(s)","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if task list is empty or there are no tasks with the matching keywords","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"        String input \u003d getListByNotes(tasks);","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"        if (tasks.isEmpty() || input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"        input \u003d Messages.LIST_HEADER + input;","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"    private String getListByNotes (TaskList tasks) {","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"        String input \u003d \"\";","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"            if (tasks.get(i).getNotes().matches(\".*\" + this.keyword + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"                input \u003d input.concat(\"\\t\" + (i + 1) + \". \" + tasks.get(i).getTypeStatusDescNotes() + \"\\n\");","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"spencernah":49}},{"path":"src/main/java/duke/command/list/FilterByStatusCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.list;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.others.Messages;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Display list of pending tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"public class FilterByStatusCommand extends Command {","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    private String status;","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"    public FilterByStatusCommand(String status) {","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the duke.command and display a list of tasks that are still not completed/done.","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param tasks task list","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws DukeException if task list is empty or there are no tasks with status (isDone) equals to false.","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"        String input \u003d \"\";","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"        if (this.status.equals(\"pending\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"            input \u003d getPending(tasks);","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"        } else if (this.status.equals(\"completed\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"            input \u003d getCompleted(tasks);","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (tasks.isEmpty() || input.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        input \u003d Messages.LIST_HEADER + input;","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private String getPending(TaskList tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            if (!tasks.get(i).getIsDone()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"                input \u003d input.concat((i + 1) + \". \" + tasks.get(i).getTypeStatusDescNotes() + \"\\n\");","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"    private String getCompleted(TaskList tasks) {","lastModifiedDate":"2022-02-21"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"        String input \u003d \"\";","lastModifiedDate":"2022-02-21"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2022-02-21"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"            if (tasks.get(i).getIsDone()) {","lastModifiedDate":"2022-02-21"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"                input \u003d input.concat((i + 1) + \". \" + tasks.get(i).getTypeStatusDescNotes() + \"\\n\");","lastModifiedDate":"2022-02-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":26,"-":35}},{"path":"src/main/java/duke/command/list/FilterByUpcomingCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.list;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import java.time.Period;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import duke.others.Messages;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Display list of upcoming tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"public class FilterByUpcomingCommand extends Command {","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    public FilterByUpcomingCommand() {","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"     * Display a list of deadlines and events that are due today, tomorrow and overdue.","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws DukeException if there are no tasks in the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String input \u003d getUpcoming(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private String getUpcoming(TaskList tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String dueToday \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String dueTmr \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String overdue \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"            if (task.getType().equals(\"T\") || task.getIsDone()) {","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            int dateDiff \u003d Period.between(today, task.getDate()).getDays();","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (dateDiff \u003d\u003d 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"                dueToday \u003d dueToday.concat((i + 1) + \". \" + task.getTypeStatusDescNotes() + \"\\n\");","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            } else if (dateDiff \u003d\u003d 1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"                dueTmr \u003d dueTmr.concat(\"\\t\" + (i + 1) + \". \" + task.getTypeStatusDescNotes() + \"\\n\");","lastModifiedDate":"2022-02-21"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"            } else if (dateDiff \u003c 0 \u0026\u0026 task.getType().equals(\"D\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"                overdue \u003d overdue.concat(\"\\t\" + (i + 1) + \". \" + task.getTypeStatusDescNotes() + \"\\n\");","lastModifiedDate":"2022-02-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (dueToday.length() \u003e 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            input +\u003d \"Today\u0027s deadline and events:\\n\" + dueToday;","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (dueTmr.length() \u003e 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            input +\u003d \"\\nTomorrow\u0027s deadline and events:\\n\" + dueTmr;","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (overdue.length() \u003e 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            input +\u003d \"\\nOverdue deadlines:\\n\" + overdue;","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            input \u003d \"YAY!! Nothing too urgent at the moment!\";","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":15,"-":56}},{"path":"src/main/java/duke/command/list/ListAllCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.list;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Display the list of tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"public class ListAllCommand extends Command {","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    public ListAllCommand() {","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the duke.command and display all tasks in the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tasks task list","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DukeException if task list is empty","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String input \u003d Messages.LIST_HEADER;","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        input +\u003d getAll(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"    private String getAll(TaskList list) {","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c list.size(); ++i) {","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"            input \u003d input.concat((i + 1) + \". \" + list.get(i).getTypeStatusDescNotes() + \"\\n\");","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":12,"-":29}},{"path":"src/main/java/duke/command/list/ListNotesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.list;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.others.DukeException;","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.others.Messages;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Display list of pending tasks.","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"public class ListNotesCommand extends Command {","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    public ListNotesCommand() {","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"     * Display a list of tasks that has notes.","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tasks task list","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param ui text ui.","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param storage storage file.","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if task list is empty or there are no tasks with notes.","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"        String input \u003d getListWithNotes(tasks);","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (tasks.isEmpty() || input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        input \u003d Messages.LIST_HEADER + input;","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"    private String getListWithNotes(TaskList tasks) {","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String input \u003d \"\";","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"            if (tasks.get(i).hasNotes()) {","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"                input \u003d input.concat((i + 1) + \". \" + tasks.get(i).getTypeStatusDescNotes() + \"\\n\");","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return input;","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"spencernah":14,"-":30}},{"path":"src/main/java/duke/command/notes/AddNotesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.notes;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.others.Utility;","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"public class AddNotesCommand extends Command {","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    protected String notes;","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    protected int index;","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"     * Update notes of a task","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"     * @param index of the task in the task list","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"     * @param notes to be associated with the task","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    public AddNotesCommand(int index, String notes) {","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     * Append user\u0027s input to an existing note","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"     * @throws IOException if there are errors appending the date to the storage file.","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        if (!task.hasNotes()) {","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"            new UpdateNotesCommand(index, notes);","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"        notes \u003d task.getNotes().trim() + \" \" + notes;","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"        task.setNotes(notes);","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"        String newData \u003d index + \";\" + Utility.constructInput(task);","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"        storage.updateLine(index, newData);","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"        return Messages.NOTES_ADD + \"\\n\\t\" + notes;","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"spencernah":46}},{"path":"src/main/java/duke/command/notes/DeleteNotesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.notes;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.others.Utility;","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"public class DeleteNotesCommand extends Command {","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    protected String notes;","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    protected int index;","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"     * Delete an existing note","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"     * @param index of the task in the task list","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    public DeleteNotesCommand(int index) {","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     * Delete an existing note and updating data afterwards","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"     * @throws IOException if there are errors appending the date to the storage file.","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"        task.deleteNotes();","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"        String newData \u003d index + \";\" + Utility.constructInput(task);","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        storage.updateLine(index, newData);","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"        return Messages.NOTES_DELETE;","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"spencernah":40}},{"path":"src/main/java/duke/command/notes/UpdateNotesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.notes;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.others.Utility;","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"public class UpdateNotesCommand extends Command {","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    protected String notes;","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    protected int index;","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"     * Append user\u0027s input to an existing note","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"     * @param index of the task in the task list","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"     * @param notes to be associated with the task","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    public UpdateNotesCommand(int index, String notes) {","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"     * Replace the entire existing note with a new one","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2022-02-21"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-02-21"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2022-02-21"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"     * @throws IOException if there are errors appending the date to the storage file.","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"        task.setNotes(notes);","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"        String newData \u003d index + \";\" + Utility.constructInput(task);","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"        storage.updateLine(index, newData);","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"        return Messages.NOTES_UPDATE + \"\\n\\t\" + notes;","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"spencernah":43}},{"path":"src/main/java/duke/command/task/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.task;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.others.Utility;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a task to the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    protected String type;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    protected String desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    protected String notes;","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"     * Add a Deadline or Event task.","lastModifiedDate":"2022-02-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param type task type.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param desc task description.","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"     * @param date date of event or due date of deadline.","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"    public AddCommand(String type, String desc, LocalDate date, String notes) {","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"     * Add a ToDo task.","lastModifiedDate":"2022-02-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param type task type.","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param desc task description.","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"    public AddCommand(String type, String desc, String notes) {","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors appending the date to the storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2022-02-20"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"        switch(this.type) {","lastModifiedDate":"2022-02-20"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"        case(\"todo\"):","lastModifiedDate":"2022-02-20"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"            tasks.add(new ToDo(this.desc, this.notes));","lastModifiedDate":"2022-02-20"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"            break;","lastModifiedDate":"2022-02-20"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"        case(\"event\"):","lastModifiedDate":"2022-02-20"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"            tasks.add(new Event(this.desc, this.date, this.notes));","lastModifiedDate":"2022-02-20"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"            break;","lastModifiedDate":"2022-02-20"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"        case(\"deadline\"):","lastModifiedDate":"2022-02-20"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"            tasks.add(new Deadline(this.desc, this.date, this.notes));","lastModifiedDate":"2022-02-20"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"            break;","lastModifiedDate":"2022-02-20"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"        default:","lastModifiedDate":"2022-02-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        int index \u003d tasks.size() - 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        storage.append(index + \";\" + Utility.constructInput(task));","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"        return \"New task added: \\n\\t\" + task.getTypeStatusDescNotes() + \"\\n\" + (index + 1) + \" tasks in your list\";","lastModifiedDate":"2022-02-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":31,"-":46}},{"path":"src/main/java/duke/command/task/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.task;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":" * Deletes a task from the task list.","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    protected int index;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"     * @param input index of the task in the task list.","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    public DeleteCommand(int input) {","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"        this.index \u003d input - 1;","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Delete a specific task from the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"     * If deleted task has a parent or child task, update them to accordingly.","lastModifiedDate":"2022-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws DukeException if the task list is empty or task index input is out of range.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors writing the data to the storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } else if (tasks.size() \u003c\u003d this.index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Please enter a task number between 1 and \" + tasks.size());","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            updateChildAndParent(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            tasks.remove(this.index);","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"            return \"Yessir! Task removed!!\\n\\t\" + (tasks.pendingSize()) + \" pending task(s) to go!\";","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private void updateChildAndParent(TaskList tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Task currentTask \u003d tasks.get(this.index);","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!currentTask.isDoBeforeEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Task parentTask \u003d tasks.get(currentTask.getDoBefore());","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            parentTask.setDoAfter(-1);","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!currentTask.isDoAfterEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Task childTask \u003d tasks.get(currentTask.getDoAfter());","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            childTask.setDoBefore(-1);","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":14,"-":47}},{"path":"src/main/java/duke/command/task/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.task;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.others.Utility;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Sets a task to completed/done status.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    protected int index;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param index index of the task in the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Sets a specific task to completed/done and remind users that they can start on the next task that (if applicable)","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws DukeException if there are no task in the list, task index input is out of range, task is already","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * in completed status or the parent task is not done.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors updating the specific line of data in the storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } else if (tasks.size() \u003c\u003d index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Please enter a task number between 1 and \" + tasks.size());","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } else if (tasks.get(index).getIsDone()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Task is already done!\");","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            Task currentTask \u003d tasks.get(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            currentTask.markAsDone();","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"            String input \u003d \"One task off the list!\\n\\t\" + currentTask.getTypeStatusDesc() + \"\\n\";","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (!currentTask.isDoBeforeEmpty() \u0026\u0026 !tasks.get(currentTask.getDoBefore()).getIsDone()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(\"You need to complete the parent task before completing this task!\\n\\t\"","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"                       + \"Parent task: \" + tasks.get(currentTask.getDoBefore()).getTypeStatusDescNotes());","lastModifiedDate":"2022-02-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (!currentTask.isDoAfterEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                Task childTask \u003d tasks.get(currentTask.getDoAfter());","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"                input +\u003d \"\\nYou can now start on the next task!\\n\\t\" + childTask.getTypeStatusDescNotes() + \"\\n\";","lastModifiedDate":"2022-02-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            storage.updateLine(index, index + \";\" + Utility.constructInput(tasks.get(index)));","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"            return input;","lastModifiedDate":"2022-02-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":14,"-":46}},{"path":"src/main/java/duke/command/task/SetDoAfterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.task;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.others.Utility;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":" * Allow the users to set Do After tasks.","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"public class SetDoAfterCommand extends Command {","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"    protected int parentIndex;","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    protected int childIndex;","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"     * @param parentIndex index of the parent task","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"     * @param childIndex index of the child task","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"    public SetDoAfterCommand(int parentIndex, int childIndex) {","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"        this.parentIndex \u003d parentIndex;","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"        this.childIndex \u003d childIndex;","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"     * Sets a task as the Do After task of another task.","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"     * @param tasks task list.","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"     * @param ui text ui.","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"     * @param storage storage file.","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if the parent\u0027s due date is before the child\u0027s due date.","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"     * @throws IOException if there are errors updating the specific line of data in the storage file.","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"        if (this.parentIndex \u003e\u003d tasks.size() || this.childIndex \u003e\u003d tasks.size()","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"                || this.parentIndex \u003c 0 || this.childIndex \u003c 0) {","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(\"Tasks number is out of range. Please select a number between 1 -\"","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"                    + (tasks.size() + 1) + \".\");","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"        if (this.parentIndex \u003d\u003d this.childIndex) {","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(\"Please choose 2 different tasks\");","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"        Task parentTask \u003d tasks.get(this.parentIndex);","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"        Task childTask \u003d tasks.get(this.childIndex);","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"        String input;","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"        if ((!childTask.getType().equals(\"T\") \u0026\u0026 !parentTask.getType().equals(\"T\"))","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"                \u0026\u0026 isChildDueBeforeParent(parentTask, childTask)) {","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(\"The parent task should not be due before the child task\");","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"        if (!parentTask.isDoAfterEmpty()) {","lastModifiedDate":"2022-02-20"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"            input \u003d \"Overwritten existing Do After task\";","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"        } else {","lastModifiedDate":"2022-02-20"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"            input \u003d \"New Do After task for \" + parentTask.getDesc();","lastModifiedDate":"2022-02-20"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"        input +\u003d \"\\n\\t[\" + parentTask.getDesc() + \"] -\u003e [\" + childTask.getDesc() + \"]\";","lastModifiedDate":"2022-02-20"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"        parentTask.setDoAfter(this.childIndex);","lastModifiedDate":"2022-02-20"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"        childTask.setDoBefore(this.parentIndex);","lastModifiedDate":"2022-02-20"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"        storage.updateLine(parentIndex, parentIndex + \";\" + Utility.constructInput(tasks.get(parentIndex)));","lastModifiedDate":"2022-02-20"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"        storage.updateLine(childIndex, childIndex + \";\" + Utility.constructInput(tasks.get(childIndex)));","lastModifiedDate":"2022-02-20"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"        return input;","lastModifiedDate":"2022-02-20"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"    private boolean isChildDueBeforeParent(Task parentTask, Task childTask) {","lastModifiedDate":"2022-02-20"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"        return childTask.getDate().isBefore(parentTask.getDate());","lastModifiedDate":"2022-02-20"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"spencernah":71}},{"path":"src/main/java/duke/command/util/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.util;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Terminates the application.","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Executes the duke.command.","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ui.showEnd();","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"        return null;","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":5,"-":22}},{"path":"src/main/java/duke/command/util/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command.util;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.others.Messages;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * When user input/duke.command is not taken into account in the Parser.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public UnknownCommand() {}","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"     * Prints a message when command is not recognised.","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"        return Messages.MSG_UNKNOWN;","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":7,"-":18}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.gui;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    @FXML","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"    @FXML","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"        try {","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"    private void flip() {","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-20"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"        db.flip();","lastModifiedDate":"2022-02-20"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"        return db;","lastModifiedDate":"2022-02-20"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"spencernah":61}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.gui;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"public class Launcher {","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"spencernah":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.gui;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    private Duke duke \u003d new Duke(\"C:\\\\Users\\\\User\\\\Documents\\\\ip\\\\data\\\\data.txt\");","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    @Override","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"        try {","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"            stage.show();","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"spencernah":35}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.gui;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"/**","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    @FXML","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"    @FXML","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    @FXML","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    @FXML","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"    @FXML","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"    @FXML","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"        );","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"spencernah":52}},{"path":"src/main/java/duke/others/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.others;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Duke-specific error handler.","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"     * Exception handler for Duke","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"     * @param err exception message","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public DukeException(String err) {","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        super(err);","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":5,"-":10}},{"path":"src/main/java/duke/others/ErrorMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.others;","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"public class ErrorMessages {","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"    public static final String NOT_A_INT \u003d \"Please enter an integer\";","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"    public static final String INCORRECT_SYNTAX_FIND \u003d \"Please enter a parameter after \\\"find\\\"\";","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"    public static final String INCORRECT_SYNTAX_NO_LEADING_DATE_DELIMITER \u003d \"Please enter a date \"","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"            + \"and lead it with \\\"/\\\"\";","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"    public static final String INCORRECT_SYNTAX_NO_DATE_AFTER_DELIMITER \u003d \"Please include a \"","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"            + \"date after the \\\"/\\\" :)\";","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"    public static final String INCORRECT_SYNTAX_INCORRECT_DATE_FORMAT \u003d \"Duke reads date in \" + DateFormat.STANDARD","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"            + \". Please separate your dates with \\\"-\\\" (eg. 2019-08-15)\";","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"    public static final String INCORECT_SYNTAX_INVALID_CHAR \u003d \"Please refrain from using the character \\\";\\\"\";","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"    public static final String INCORRECT_SYNTAX_DOAFTER_MISSING_PARAM \u003d \"Please enter a task number and \"","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"            + \"lead it with \\\"/\\\"\\n(eg. doafter 3 /2)\";","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    public static final String INCORRECT_SYNTAX_DOAFTER_NO_LEADING_DELIMITER \u003d \"Please include a \"","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"            + \"task number after the \\\"/\\\" :)\";","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"    public static final String INCORRECT_SYNTAX_NOTES_MISSING_QUOTATION_MARK \u003d \"Missing quotation mark (\\\"). \"","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"            + \"Please enclose notes within 2 quotation marks!\";","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    public static final String INCORRECT_SYNTAX_TASK_NO_DESC \u003d \"Task Description cannot be empty!!\";","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    public static final String INCORRECT_SYNTAX_NOTES_MISSING_TEXT \u003d \"Please enter notes to be added!!\";","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    public static final String INCORRECT_SYNTAX_LIST_NOTES \u003d \"Please enter a parameter after \\\"list notes\\\"\";","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    public static final String MISSING_DATE \u003d \"Please input a date! (Reminder: Lead the date with \\\"/\\\")\";","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"spencernah":23}},{"path":"src/main/java/duke/others/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.others;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Keyword {","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static final String DONE \u003d \"done\";","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"    public static final String LIST_BY_DATE \u003d \"list date\";","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String EXIT_1 \u003d \"bb\";","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String EXIT_2 \u003d \"bye\";","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"    public static final String LIST_BY_STATUS_PENDING_1 \u003d \"pending\";","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"    public static final String LIST_BY_STATUS_PENDING_2 \u003d \"list pending\";","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    public static final String LIST_BY_STATUS_COMPLETED_1 \u003d \"completed\";","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    public static final String LIST_BY_STATUS_COMPLETED_2 \u003d \"list completed\";","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"    public static final String LIST_ALL \u003d \"list\";","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String REMINDER \u003d \"reminder\";","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    public static final String DOAFTER_1 \u003d \"doafter\";","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    public static final String DOAFTER_2 \u003d \"do after\";","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    public static final String NOTES_ADD_1 \u003d \"note add\";","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    public static final String NOTES_ADD_2 \u003d \"noteadd\";","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    public static final String NOTES_UPDATE_1 \u003d \"note update\";","lastModifiedDate":"2022-02-21"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    public static final String NOTES_UPDATE_2 \u003d \"noteupdate\";","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"    public static final String NOTES_DELETE_1 \u003d \"note delete\";","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"    public static final String NOTES_DELETE_2 \u003d \"notedelete\";","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"    public static final String FIND_BY_NOTES \u003d \"find note:\";","lastModifiedDate":"2022-02-21"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"    public static final String LIST_BY_NOTES_1 \u003d \"list note\";","lastModifiedDate":"2022-02-21"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"    public static final String LIST_BY_NOTES_2 \u003d \"listnote\";","lastModifiedDate":"2022-02-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":20,"-":10}},{"path":"src/main/java/duke/others/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.others;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Common messages used by methods in different classes.","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String LIST_HEADER \u003d \"Yessir! Here is the list!\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String LIST_EMPTY \u003d \"No tasks in the requested list!\";","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"    public static final String MSG_END \u003d \"Oyasumi~\";","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"    public static final String MSG_GREETING \u003d \"Harrowwwwwww\\nWut iz up?\";","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"    public static final String MSG_UNKNOWN \u003d \"Sorry, I don\u0027t understand this :(\";","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"    public static final String NOTES_ADD \u003d \"Notes added successfully! :3\";","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"    public static final String NOTES_UPDATE \u003d \"Notes updated successfully! :3\";","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    public static final String NOTES_DELETE \u003d \"Notes deleted successfully! :3\";","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":6,"-":9}},{"path":"src/main/java/duke/others/Utility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.others;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-21"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Other helpful methods used in other classes.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Utility {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Checks if the string contains only numeric characters.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param s input string.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return true if all characters are numeric.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static boolean isNumber(String s) {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c s.length(); i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"            if (!Character.isDigit(s.charAt(i))) {","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Concatenate the task attributes into a single string. Attributes are delimited by \";\".","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param task task object","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @return a concatenated string of the task attributes","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String constructInput(Task task) {","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String taskType \u003d task.getType();","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"        boolean isDone \u003d task.getIsDone();","lastModifiedDate":"2022-02-21"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"        String desc \u003d task.getDesc();","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"        LocalDate date \u003d task.getDate();","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        int doAfter \u003d task.getDoAfter();","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"        int doBefore \u003d task.getDoBefore();","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"        String notes \u003d task.getNotes();","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"        String input;","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"        if (notes \u003d\u003d null) {","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"            notes \u003d \"\";","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"        if (taskType.equals(\"D\") || taskType.equals(\"E\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"            input \u003d taskType + \";\" + isDone + \";\" + desc + \";\" + date","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"                    + \";\" + doAfter + \";\" + doBefore + \";\" + notes;","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"            input \u003d taskType + \";\" + task.getIsDone() + \";\" + desc + \";\" + \";\" + doAfter","lastModifiedDate":"2022-02-21"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"                    + \";\" + doBefore + \";\" + notes;","lastModifiedDate":"2022-02-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return input;","lastModifiedDate":"2022-02-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":20,"-":35}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.parser;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.command.list.FilterByDateCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import duke.command.list.FilterByDescCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import duke.command.list.FilterByNotesCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import duke.command.list.FilterByStatusCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import duke.command.list.FilterByUpcomingCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"import duke.command.list.ListAllCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"import duke.command.list.ListNotesCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"import duke.command.notes.AddNotesCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"import duke.command.notes.DeleteNotesCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"import duke.command.notes.UpdateNotesCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"import duke.command.task.AddCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"import duke.command.task.DeleteCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"import duke.command.task.DoneCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"import duke.command.task.SetDoAfterCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"import duke.command.util.ExitCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"import duke.command.util.UnknownCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"import duke.others.ErrorMessages;","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import duke.others.Keyword;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import duke.others.Utility;","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class Parser {","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses user input.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Parser() {","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param input full user input string.","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"     * @return the command based on the user input.","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Command parse(String input) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkForDelimiter(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String keyword \u003d getKeyword(input.trim());","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"        String param \u003d \"\";","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"        String dateStr;","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"        String notes \u003d \"\";","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"        String taskIndex;","lastModifiedDate":"2022-02-21"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2022-02-21"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"        boolean hasParam \u003d true;","lastModifiedDate":"2022-02-21"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"        boolean isParamANumber \u003d true;","lastModifiedDate":"2022-02-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"        if (input.length() !\u003d keyword.length()) {","lastModifiedDate":"2022-02-21"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"            param \u003d removeKeyword(input, keyword).trim();","lastModifiedDate":"2022-02-21"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"            hasParam \u003d param.length() \u003e 0;","lastModifiedDate":"2022-02-21"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"            isParamANumber \u003d Utility.isNumber(param);","lastModifiedDate":"2022-02-21"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"        if (hasNotes(input)) {","lastModifiedDate":"2022-02-21"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"            notes \u003d getNotes(input);","lastModifiedDate":"2022-02-21"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        switch (keyword) {","lastModifiedDate":"2022-02-21"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"        case Keyword.EXIT_1:","lastModifiedDate":"2022-02-21"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"        case Keyword.EXIT_2:","lastModifiedDate":"2022-02-21"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-02-21"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"        case Keyword.LIST_ALL:","lastModifiedDate":"2022-02-21"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"            return new ListAllCommand();","lastModifiedDate":"2022-02-21"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"        case Keyword.LIST_BY_STATUS_PENDING_1:","lastModifiedDate":"2022-02-21"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"        case Keyword.LIST_BY_STATUS_PENDING_2:","lastModifiedDate":"2022-02-21"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"            return new FilterByStatusCommand(\"pending\");","lastModifiedDate":"2022-02-21"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"        case Keyword.LIST_BY_STATUS_COMPLETED_1:","lastModifiedDate":"2022-02-21"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"        case Keyword.LIST_BY_STATUS_COMPLETED_2:","lastModifiedDate":"2022-02-21"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"            return new FilterByStatusCommand(\"completed\");","lastModifiedDate":"2022-02-21"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":"        case Keyword.LIST_BY_DATE:","lastModifiedDate":"2022-02-21"},{"lineNumber":77,"author":{"gitId":"spencernah"},"content":"            if (hasDate(input)) {","lastModifiedDate":"2022-02-21"},{"lineNumber":78,"author":{"gitId":"spencernah"},"content":"                dateStr \u003d getDateAsStr(input);","lastModifiedDate":"2022-02-21"},{"lineNumber":79,"author":{"gitId":"spencernah"},"content":"                date \u003d LocalDate.parse(dateStr);","lastModifiedDate":"2022-02-21"},{"lineNumber":80,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":81,"author":{"gitId":"spencernah"},"content":"            return new FilterByDateCommand(date);","lastModifiedDate":"2022-02-21"},{"lineNumber":82,"author":{"gitId":"spencernah"},"content":"        case Keyword.LIST_BY_NOTES_1:","lastModifiedDate":"2022-02-21"},{"lineNumber":83,"author":{"gitId":"spencernah"},"content":"        case Keyword.LIST_BY_NOTES_2:","lastModifiedDate":"2022-02-21"},{"lineNumber":84,"author":{"gitId":"spencernah"},"content":"            return new ListNotesCommand();","lastModifiedDate":"2022-02-21"},{"lineNumber":85,"author":{"gitId":"spencernah"},"content":"        case Keyword.FIND:","lastModifiedDate":"2022-02-21"},{"lineNumber":86,"author":{"gitId":"spencernah"},"content":"            if (hasParam) {","lastModifiedDate":"2022-02-21"},{"lineNumber":87,"author":{"gitId":"spencernah"},"content":"                return new FilterByDescCommand(param);","lastModifiedDate":"2022-02-21"},{"lineNumber":88,"author":{"gitId":"spencernah"},"content":"            } else {","lastModifiedDate":"2022-02-21"},{"lineNumber":89,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(ErrorMessages.INCORRECT_SYNTAX_FIND);","lastModifiedDate":"2022-02-21"},{"lineNumber":90,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":91,"author":{"gitId":"spencernah"},"content":"        case Keyword.FIND_BY_NOTES:","lastModifiedDate":"2022-02-21"},{"lineNumber":92,"author":{"gitId":"spencernah"},"content":"            if (hasParam) {","lastModifiedDate":"2022-02-21"},{"lineNumber":93,"author":{"gitId":"spencernah"},"content":"                return new FilterByNotesCommand(param);","lastModifiedDate":"2022-02-21"},{"lineNumber":94,"author":{"gitId":"spencernah"},"content":"            } else if (notes.length() \u003e 0) {","lastModifiedDate":"2022-02-21"},{"lineNumber":95,"author":{"gitId":"spencernah"},"content":"                return new FilterByNotesCommand(notes);","lastModifiedDate":"2022-02-21"},{"lineNumber":96,"author":{"gitId":"spencernah"},"content":"            } else {","lastModifiedDate":"2022-02-21"},{"lineNumber":97,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(ErrorMessages.INCORRECT_SYNTAX_LIST_NOTES);","lastModifiedDate":"2022-02-21"},{"lineNumber":98,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":99,"author":{"gitId":"spencernah"},"content":"        case Keyword.REMINDER:","lastModifiedDate":"2022-02-21"},{"lineNumber":100,"author":{"gitId":"spencernah"},"content":"            return new FilterByUpcomingCommand();","lastModifiedDate":"2022-02-21"},{"lineNumber":101,"author":{"gitId":"spencernah"},"content":"        case Keyword.DONE:","lastModifiedDate":"2022-02-21"},{"lineNumber":102,"author":{"gitId":"spencernah"},"content":"            if (isParamANumber) {","lastModifiedDate":"2022-02-21"},{"lineNumber":103,"author":{"gitId":"spencernah"},"content":"                return new DoneCommand(Integer.parseInt(param) - 1);","lastModifiedDate":"2022-02-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(ErrorMessages.NOT_A_INT);","lastModifiedDate":"2022-02-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"spencernah"},"content":"        case Keyword.DELETE:","lastModifiedDate":"2022-02-21"},{"lineNumber":108,"author":{"gitId":"spencernah"},"content":"            if (isParamANumber) {","lastModifiedDate":"2022-02-21"},{"lineNumber":109,"author":{"gitId":"spencernah"},"content":"                return new DeleteCommand(Integer.parseInt(param));","lastModifiedDate":"2022-02-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(ErrorMessages.NOT_A_INT);","lastModifiedDate":"2022-02-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"spencernah"},"content":"        case Keyword.DEADLINE:","lastModifiedDate":"2022-02-21"},{"lineNumber":114,"author":{"gitId":"spencernah"},"content":"        case Keyword.EVENT:","lastModifiedDate":"2022-02-21"},{"lineNumber":115,"author":{"gitId":"spencernah"},"content":"            if (hasDate(input)) {","lastModifiedDate":"2022-02-21"},{"lineNumber":116,"author":{"gitId":"spencernah"},"content":"                dateStr \u003d getDateAsStr(input);","lastModifiedDate":"2022-02-21"},{"lineNumber":117,"author":{"gitId":"spencernah"},"content":"                date \u003d LocalDate.parse(dateStr);","lastModifiedDate":"2022-02-21"},{"lineNumber":118,"author":{"gitId":"spencernah"},"content":"            } else {","lastModifiedDate":"2022-02-21"},{"lineNumber":119,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(ErrorMessages.MISSING_DATE);","lastModifiedDate":"2022-02-21"},{"lineNumber":120,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":121,"author":{"gitId":"spencernah"},"content":"            desc \u003d getDesc(param);","lastModifiedDate":"2022-02-20"},{"lineNumber":122,"author":{"gitId":"spencernah"},"content":"            return new AddCommand(keyword, desc, date, notes);","lastModifiedDate":"2022-02-20"},{"lineNumber":123,"author":{"gitId":"spencernah"},"content":"        case Keyword.TODO:","lastModifiedDate":"2022-02-21"},{"lineNumber":124,"author":{"gitId":"spencernah"},"content":"            desc \u003d getDesc(param);","lastModifiedDate":"2022-02-20"},{"lineNumber":125,"author":{"gitId":"spencernah"},"content":"            return new AddCommand(keyword, desc, notes);","lastModifiedDate":"2022-02-20"},{"lineNumber":126,"author":{"gitId":"spencernah"},"content":"        case Keyword.DOAFTER_1:","lastModifiedDate":"2022-02-21"},{"lineNumber":127,"author":{"gitId":"spencernah"},"content":"        case Keyword.DOAFTER_2:","lastModifiedDate":"2022-02-21"},{"lineNumber":128,"author":{"gitId":"spencernah"},"content":"            int indexFirstDelimiter \u003d param.indexOf(\" \");","lastModifiedDate":"2022-02-21"},{"lineNumber":129,"author":{"gitId":"spencernah"},"content":"            if (indexFirstDelimiter \u003c 0) {","lastModifiedDate":"2022-02-21"},{"lineNumber":130,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(ErrorMessages.INCORRECT_SYNTAX_DOAFTER_MISSING_PARAM);","lastModifiedDate":"2022-02-21"},{"lineNumber":131,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":132,"author":{"gitId":"spencernah"},"content":"            String taskIndex1 \u003d param.substring(0, param.indexOf(\" \"));","lastModifiedDate":"2022-02-21"},{"lineNumber":133,"author":{"gitId":"spencernah"},"content":"            checkDoAfterSyntax(param);","lastModifiedDate":"2022-02-21"},{"lineNumber":134,"author":{"gitId":"spencernah"},"content":"            String taskIndex2 \u003d param.substring(param.lastIndexOf(\"/\") + 1).trim();","lastModifiedDate":"2022-02-20"},{"lineNumber":135,"author":{"gitId":"spencernah"},"content":"            if (!hasParam) {","lastModifiedDate":"2022-02-21"},{"lineNumber":136,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(ErrorMessages.INCORRECT_SYNTAX_DOAFTER_MISSING_PARAM);","lastModifiedDate":"2022-02-21"},{"lineNumber":137,"author":{"gitId":"spencernah"},"content":"            } else if (!Utility.isNumber(taskIndex1) || !Utility.isNumber(taskIndex2)) {","lastModifiedDate":"2022-02-21"},{"lineNumber":138,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(ErrorMessages.NOT_A_INT);","lastModifiedDate":"2022-02-21"},{"lineNumber":139,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-20"},{"lineNumber":140,"author":{"gitId":"spencernah"},"content":"            return new SetDoAfterCommand(Integer.parseInt(taskIndex1) - 1,","lastModifiedDate":"2022-02-20"},{"lineNumber":141,"author":{"gitId":"spencernah"},"content":"                    Integer.parseInt(taskIndex2) - 1);","lastModifiedDate":"2022-02-20"},{"lineNumber":142,"author":{"gitId":"spencernah"},"content":"        case Keyword.NOTES_ADD_1:","lastModifiedDate":"2022-02-21"},{"lineNumber":143,"author":{"gitId":"spencernah"},"content":"        case Keyword.NOTES_ADD_2:","lastModifiedDate":"2022-02-21"},{"lineNumber":144,"author":{"gitId":"spencernah"},"content":"            taskIndex \u003d param.substring(0, param.indexOf(\" \"));","lastModifiedDate":"2022-02-21"},{"lineNumber":145,"author":{"gitId":"spencernah"},"content":"            if (!Utility.isNumber(taskIndex)) {","lastModifiedDate":"2022-02-21"},{"lineNumber":146,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(ErrorMessages.NOT_A_INT);","lastModifiedDate":"2022-02-21"},{"lineNumber":147,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":148,"author":{"gitId":"spencernah"},"content":"            if (isEmpty(notes)) {","lastModifiedDate":"2022-02-21"},{"lineNumber":149,"author":{"gitId":"spencernah"},"content":"                notes \u003d param.substring(param.indexOf(\" \") + 1);","lastModifiedDate":"2022-02-21"},{"lineNumber":150,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":151,"author":{"gitId":"spencernah"},"content":"            if (isEmpty(notes)) {","lastModifiedDate":"2022-02-21"},{"lineNumber":152,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(ErrorMessages.INCORRECT_SYNTAX_NOTES_MISSING_TEXT);","lastModifiedDate":"2022-02-21"},{"lineNumber":153,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":154,"author":{"gitId":"spencernah"},"content":"            return new AddNotesCommand(Integer.parseInt(taskIndex) - 1, notes);","lastModifiedDate":"2022-02-21"},{"lineNumber":155,"author":{"gitId":"spencernah"},"content":"        case Keyword.NOTES_UPDATE_1:","lastModifiedDate":"2022-02-21"},{"lineNumber":156,"author":{"gitId":"spencernah"},"content":"        case Keyword.NOTES_UPDATE_2:","lastModifiedDate":"2022-02-21"},{"lineNumber":157,"author":{"gitId":"spencernah"},"content":"            taskIndex \u003d param.substring(0, param.indexOf(\" \"));","lastModifiedDate":"2022-02-21"},{"lineNumber":158,"author":{"gitId":"spencernah"},"content":"            if (!Utility.isNumber(taskIndex)) {","lastModifiedDate":"2022-02-21"},{"lineNumber":159,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(ErrorMessages.NOT_A_INT);","lastModifiedDate":"2022-02-21"},{"lineNumber":160,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":161,"author":{"gitId":"spencernah"},"content":"            if (isEmpty(notes)) {","lastModifiedDate":"2022-02-21"},{"lineNumber":162,"author":{"gitId":"spencernah"},"content":"                notes \u003d param.substring(param.indexOf(\" \") + 1);","lastModifiedDate":"2022-02-21"},{"lineNumber":163,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":164,"author":{"gitId":"spencernah"},"content":"            if (isEmpty(notes)) {","lastModifiedDate":"2022-02-21"},{"lineNumber":165,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(ErrorMessages.INCORRECT_SYNTAX_NOTES_MISSING_TEXT);","lastModifiedDate":"2022-02-21"},{"lineNumber":166,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":167,"author":{"gitId":"spencernah"},"content":"            return new UpdateNotesCommand(Integer.parseInt(taskIndex) - 1, notes);","lastModifiedDate":"2022-02-21"},{"lineNumber":168,"author":{"gitId":"spencernah"},"content":"        case Keyword.NOTES_DELETE_1:","lastModifiedDate":"2022-02-21"},{"lineNumber":169,"author":{"gitId":"spencernah"},"content":"        case Keyword.NOTES_DELETE_2:","lastModifiedDate":"2022-02-21"},{"lineNumber":170,"author":{"gitId":"spencernah"},"content":"            taskIndex \u003d param;","lastModifiedDate":"2022-02-21"},{"lineNumber":171,"author":{"gitId":"spencernah"},"content":"            if (!Utility.isNumber(taskIndex)) {","lastModifiedDate":"2022-02-21"},{"lineNumber":172,"author":{"gitId":"spencernah"},"content":"                throw new DukeException(ErrorMessages.NOT_A_INT);","lastModifiedDate":"2022-02-21"},{"lineNumber":173,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":174,"author":{"gitId":"spencernah"},"content":"            return new DeleteNotesCommand(Integer.parseInt(taskIndex) - 1);","lastModifiedDate":"2022-02-21"},{"lineNumber":175,"author":{"gitId":"spencernah"},"content":"        default:","lastModifiedDate":"2022-02-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return new UnknownCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":178,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":180,"author":{"gitId":"spencernah"},"content":"    private static boolean isEmpty(String input) {","lastModifiedDate":"2022-02-21"},{"lineNumber":181,"author":{"gitId":"spencernah"},"content":"        return input \u003d\u003d null || input.length() \u003d\u003d 0;","lastModifiedDate":"2022-02-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":185,"author":{"gitId":"spencernah"},"content":"     * Get keyword of the command based on the user input.","lastModifiedDate":"2022-02-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @param input full user input string.","lastModifiedDate":"2021-09-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @return keyword of the duke.command.","lastModifiedDate":"2021-09-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private static String getKeyword(String input) {","lastModifiedDate":"2021-09-27"},{"lineNumber":191,"author":{"gitId":"spencernah"},"content":"        input \u003d input.toLowerCase();","lastModifiedDate":"2022-02-21"},{"lineNumber":192,"author":{"gitId":"spencernah"},"content":"        if (input.matches(Keyword.DONE + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":193,"author":{"gitId":"spencernah"},"content":"            return Keyword.DONE;","lastModifiedDate":"2022-02-21"},{"lineNumber":194,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.DELETE + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":195,"author":{"gitId":"spencernah"},"content":"            return Keyword.DELETE;","lastModifiedDate":"2022-02-21"},{"lineNumber":196,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.DEADLINE + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":197,"author":{"gitId":"spencernah"},"content":"            return Keyword.DEADLINE;","lastModifiedDate":"2022-02-21"},{"lineNumber":198,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.EVENT + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":199,"author":{"gitId":"spencernah"},"content":"            return Keyword.EVENT;","lastModifiedDate":"2022-02-21"},{"lineNumber":200,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.TODO + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":201,"author":{"gitId":"spencernah"},"content":"            return Keyword.TODO;","lastModifiedDate":"2022-02-21"},{"lineNumber":202,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.LIST_BY_DATE + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":203,"author":{"gitId":"spencernah"},"content":"            return Keyword.LIST_BY_DATE;","lastModifiedDate":"2022-02-21"},{"lineNumber":204,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.DOAFTER_1 + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":205,"author":{"gitId":"spencernah"},"content":"            return Keyword.DOAFTER_1;","lastModifiedDate":"2022-02-21"},{"lineNumber":206,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.DOAFTER_2 + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":207,"author":{"gitId":"spencernah"},"content":"            return Keyword.DOAFTER_2;","lastModifiedDate":"2022-02-21"},{"lineNumber":208,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.NOTES_ADD_1 + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":209,"author":{"gitId":"spencernah"},"content":"            return Keyword.NOTES_ADD_1;","lastModifiedDate":"2022-02-21"},{"lineNumber":210,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.NOTES_ADD_2 + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":211,"author":{"gitId":"spencernah"},"content":"            return Keyword.NOTES_ADD_2;","lastModifiedDate":"2022-02-21"},{"lineNumber":212,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.NOTES_UPDATE_1 + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":213,"author":{"gitId":"spencernah"},"content":"            return Keyword.NOTES_UPDATE_1;","lastModifiedDate":"2022-02-21"},{"lineNumber":214,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.NOTES_UPDATE_2 + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":215,"author":{"gitId":"spencernah"},"content":"            return Keyword.NOTES_UPDATE_2;","lastModifiedDate":"2022-02-21"},{"lineNumber":216,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.NOTES_DELETE_1 + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":217,"author":{"gitId":"spencernah"},"content":"            return Keyword.NOTES_DELETE_1;","lastModifiedDate":"2022-02-21"},{"lineNumber":218,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.NOTES_DELETE_2 + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":219,"author":{"gitId":"spencernah"},"content":"            return Keyword.NOTES_DELETE_2;","lastModifiedDate":"2022-02-21"},{"lineNumber":220,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.FIND_BY_NOTES + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":221,"author":{"gitId":"spencernah"},"content":"            return Keyword.FIND_BY_NOTES;","lastModifiedDate":"2022-02-21"},{"lineNumber":222,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.LIST_BY_NOTES_1 + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":223,"author":{"gitId":"spencernah"},"content":"            return Keyword.LIST_BY_NOTES_1;","lastModifiedDate":"2022-02-21"},{"lineNumber":224,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.LIST_BY_NOTES_2 + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":225,"author":{"gitId":"spencernah"},"content":"            return Keyword.LIST_BY_NOTES_2;","lastModifiedDate":"2022-02-21"},{"lineNumber":226,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(Keyword.FIND + \".*\")) {","lastModifiedDate":"2022-02-21"},{"lineNumber":227,"author":{"gitId":"spencernah"},"content":"            return Keyword.FIND;","lastModifiedDate":"2022-02-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":233,"author":{"gitId":"spencernah"},"content":"     * Remove keyword to get the command parameters (if applicable).","lastModifiedDate":"2022-02-20"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * @param input full user input string.","lastModifiedDate":"2021-09-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * @param keyword duke.command keyword.","lastModifiedDate":"2021-09-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * @return duke.command parameters.","lastModifiedDate":"2021-09-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    private static String removeKeyword(String input, String keyword) {","lastModifiedDate":"2021-09-27"},{"lineNumber":240,"author":{"gitId":"spencernah"},"content":"        int endIndex \u003d input.length();","lastModifiedDate":"2022-02-21"},{"lineNumber":241,"author":{"gitId":"spencernah"},"content":"        int startIndex \u003d keyword.length() + 1;","lastModifiedDate":"2022-02-21"},{"lineNumber":242,"author":{"gitId":"spencernah"},"content":"        return input.substring(startIndex, endIndex).trim();","lastModifiedDate":"2022-02-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":246,"author":{"gitId":"spencernah"},"content":"     * Checks if user has input a date when entering a create Event/Deadline command.","lastModifiedDate":"2022-02-20"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * @param param duke.command parameter.","lastModifiedDate":"2021-09-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * @throws DukeException if user did not lead the date with a \"/\" character, did not enter a date or enter an","lastModifiedDate":"2021-09-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * invalid date format (accepted format \u003d \"yyyy-mm-dd\" or \"yyyy-m-d\").","lastModifiedDate":"2021-09-27"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    private static void checkDate(String param) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        int delimiterIndex \u003d param.lastIndexOf(\"/\");","lastModifiedDate":"2021-09-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        if (delimiterIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":255,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(ErrorMessages.INCORRECT_SYNTAX_NO_LEADING_DATE_DELIMITER);","lastModifiedDate":"2022-02-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        String date \u003d param.substring(delimiterIndex + 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        if (date.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":259,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(ErrorMessages.INCORRECT_SYNTAX_NO_DATE_AFTER_DELIMITER);","lastModifiedDate":"2022-02-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        if (date.lastIndexOf(\"-\") \u003c 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":262,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(ErrorMessages.INCORRECT_SYNTAX_INCORRECT_DATE_FORMAT);","lastModifiedDate":"2022-02-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * Condenses all the methods that needs to be performed to ensure that the date input is correct and return the","lastModifiedDate":"2021-09-27"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * correct date format (if applicable).","lastModifiedDate":"2021-09-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":270,"author":{"gitId":"spencernah"},"content":"     * @param input full user input string.","lastModifiedDate":"2022-02-20"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * @return date string in the correct format (yyyy-mm-dd).","lastModifiedDate":"2021-09-27"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * @throws DukeException from checkDate() method.","lastModifiedDate":"2021-09-27"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":274,"author":{"gitId":"spencernah"},"content":"    private static String getDateAsStr(String input) throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        checkDate(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        input \u003d input.substring(input.lastIndexOf(\"/\") + 1).trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        input \u003d changeDateFormat(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     * Change the date parameter into a format that can be parsed to LocalDate.","lastModifiedDate":"2021-09-27"},{"lineNumber":283,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     * @param date date parameter.","lastModifiedDate":"2021-09-27"},{"lineNumber":285,"author":{"gitId":"-"},"content":"     * @return a date string in \"yyyy-mm-dd\" format.","lastModifiedDate":"2021-09-27"},{"lineNumber":286,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    private static String changeDateFormat (String date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        String day \u003d date.substring(date.lastIndexOf(\"-\") + 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        if (day.length() \u003d\u003d 1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            day \u003d \"0\" + day;","lastModifiedDate":"2021-09-27"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        String month \u003d date.substring(date.indexOf(\"-\") + 1, date.lastIndexOf(\"-\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        if (month.length() \u003d\u003d 1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            month \u003d \"0\" + month;","lastModifiedDate":"2021-09-27"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        String year \u003d date.substring(0, 4);","lastModifiedDate":"2021-09-27"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        return year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2021-09-27"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     * Ensure that the users do not input any delimiter character","lastModifiedDate":"2021-09-27"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":303,"author":{"gitId":"-"},"content":"     * @param input full user input string.","lastModifiedDate":"2021-09-27"},{"lineNumber":304,"author":{"gitId":"spencernah"},"content":"     * @throws DukeException if delimiter character is used in input","lastModifiedDate":"2022-02-20"},{"lineNumber":305,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    private static void checkForDelimiter(String input) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":307,"author":{"gitId":"spencernah"},"content":"        if (input.contains(\";\")) {","lastModifiedDate":"2022-02-20"},{"lineNumber":308,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(ErrorMessages.INCORECT_SYNTAX_INVALID_CHAR);","lastModifiedDate":"2022-02-21"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":311,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":312,"author":{"gitId":"spencernah"},"content":"    private static void checkDoAfterSyntax(String param) throws DukeException {","lastModifiedDate":"2022-02-21"},{"lineNumber":313,"author":{"gitId":"spencernah"},"content":"        int delimiterIndex \u003d param.lastIndexOf(\"/\");","lastModifiedDate":"2022-02-20"},{"lineNumber":314,"author":{"gitId":"spencernah"},"content":"        if (delimiterIndex \u003d\u003d -1) {","lastModifiedDate":"2022-02-20"},{"lineNumber":315,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(ErrorMessages.INCORRECT_SYNTAX_DOAFTER_MISSING_PARAM);","lastModifiedDate":"2022-02-21"},{"lineNumber":316,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":317,"author":{"gitId":"spencernah"},"content":"        String date \u003d param.substring(delimiterIndex + 1);","lastModifiedDate":"2022-02-20"},{"lineNumber":318,"author":{"gitId":"spencernah"},"content":"        if (date.length() \u003d\u003d 0) {","lastModifiedDate":"2022-02-20"},{"lineNumber":319,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(ErrorMessages.INCORRECT_SYNTAX_DOAFTER_NO_LEADING_DELIMITER);","lastModifiedDate":"2022-02-21"},{"lineNumber":320,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":321,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":322,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":323,"author":{"gitId":"spencernah"},"content":"    private static boolean hasDate(String input) {","lastModifiedDate":"2022-02-20"},{"lineNumber":324,"author":{"gitId":"spencernah"},"content":"        return input.contains(\"/\");","lastModifiedDate":"2022-02-21"},{"lineNumber":325,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":326,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":327,"author":{"gitId":"spencernah"},"content":"    private static boolean hasNotes(String input) throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":328,"author":{"gitId":"spencernah"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-02-20"},{"lineNumber":329,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c input.length(); i++) {","lastModifiedDate":"2022-02-20"},{"lineNumber":330,"author":{"gitId":"spencernah"},"content":"            if (input.charAt(i) \u003d\u003d \u0027\\\"\u0027) {","lastModifiedDate":"2022-02-20"},{"lineNumber":331,"author":{"gitId":"spencernah"},"content":"                count++;","lastModifiedDate":"2022-02-20"},{"lineNumber":332,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-20"},{"lineNumber":333,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":334,"author":{"gitId":"spencernah"},"content":"        if (count \u003e 0) {","lastModifiedDate":"2022-02-20"},{"lineNumber":335,"author":{"gitId":"spencernah"},"content":"            return true;","lastModifiedDate":"2022-02-20"},{"lineNumber":336,"author":{"gitId":"spencernah"},"content":"        } else if (count \u003d\u003d 1) {","lastModifiedDate":"2022-02-20"},{"lineNumber":337,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(ErrorMessages.INCORRECT_SYNTAX_NOTES_MISSING_QUOTATION_MARK);","lastModifiedDate":"2022-02-21"},{"lineNumber":338,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":339,"author":{"gitId":"spencernah"},"content":"        return false;","lastModifiedDate":"2022-02-20"},{"lineNumber":340,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":341,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":342,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":343,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":344,"author":{"gitId":"spencernah"},"content":"     * Checks if user has input a task description when trying to create a task.","lastModifiedDate":"2022-02-20"},{"lineNumber":345,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2022-02-20"},{"lineNumber":346,"author":{"gitId":"spencernah"},"content":"     * @param input values entered by user.","lastModifiedDate":"2022-02-20"},{"lineNumber":347,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":348,"author":{"gitId":"spencernah"},"content":"    private static boolean hasDesc(String input) throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":349,"author":{"gitId":"spencernah"},"content":"        boolean isLenZero \u003d input.length() \u003d\u003d 0;","lastModifiedDate":"2022-02-21"},{"lineNumber":350,"author":{"gitId":"spencernah"},"content":"        boolean isDate \u003d input.charAt(0) \u003d\u003d \u0027/\u0027;","lastModifiedDate":"2022-02-21"},{"lineNumber":351,"author":{"gitId":"spencernah"},"content":"        boolean isNotes \u003d input.charAt(0) !\u003d \u0027\\\"\u0027;","lastModifiedDate":"2022-02-21"},{"lineNumber":352,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":353,"author":{"gitId":"spencernah"},"content":"        return !(isLenZero \u0026\u0026 isDate \u0026\u0026 isNotes);","lastModifiedDate":"2022-02-21"},{"lineNumber":354,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":355,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":356,"author":{"gitId":"spencernah"},"content":"    private static String getNotes(String input) throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":357,"author":{"gitId":"spencernah"},"content":"        if (hasNotes(input)) {","lastModifiedDate":"2022-02-20"},{"lineNumber":358,"author":{"gitId":"spencernah"},"content":"            return input.substring(input.indexOf(\"\\\"\") + 1, input.lastIndexOf(\"\\\"\"));","lastModifiedDate":"2022-02-20"},{"lineNumber":359,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":360,"author":{"gitId":"spencernah"},"content":"        return null;","lastModifiedDate":"2022-02-20"},{"lineNumber":361,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":362,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":363,"author":{"gitId":"spencernah"},"content":"    private static String getDesc(String input) throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":364,"author":{"gitId":"spencernah"},"content":"        String output \u003d input;","lastModifiedDate":"2022-02-20"},{"lineNumber":365,"author":{"gitId":"spencernah"},"content":"        if (hasDate(input)) {","lastModifiedDate":"2022-02-20"},{"lineNumber":366,"author":{"gitId":"spencernah"},"content":"            output \u003d input.substring(0, input.indexOf(\"/\"));","lastModifiedDate":"2022-02-21"},{"lineNumber":367,"author":{"gitId":"spencernah"},"content":"        } else if (hasNotes(input)) {","lastModifiedDate":"2022-02-20"},{"lineNumber":368,"author":{"gitId":"spencernah"},"content":"            output \u003d input.substring(0, input.indexOf(\"\\\"\"));","lastModifiedDate":"2022-02-20"},{"lineNumber":369,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":370,"author":{"gitId":"spencernah"},"content":"        if (hasDesc(output)) {","lastModifiedDate":"2022-02-20"},{"lineNumber":371,"author":{"gitId":"spencernah"},"content":"            return output;","lastModifiedDate":"2022-02-20"},{"lineNumber":372,"author":{"gitId":"spencernah"},"content":"        } else {","lastModifiedDate":"2022-02-20"},{"lineNumber":373,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(ErrorMessages.INCORRECT_SYNTAX_TASK_NO_DESC);","lastModifiedDate":"2022-02-21"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":264,"-":112}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"import duke.others.Utility;","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":" * Represents the file and its corresponding methods used to store task list data.","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Storage {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    protected String path;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    protected String data;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    protected boolean isEmpty;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The file used to store task list data.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param filePath is the directory of the data.txt file.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.path \u003d filePath;","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.data \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEmpty \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Loads the data from this storage and returns it","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the data in String.","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws FileNotFoundException if the path is not valid","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String load() throws FileNotFoundException {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        File f \u003d new File(this.path);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"            this.data \u003d this.data.concat(s.nextLine() + System.lineSeparator());","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (this.data.length() \u003e 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.isEmpty \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this.data;","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"     * Saves Task List data to storage file.","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param tasks is the Task List to be saved.","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors writing the data to the storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"        FileWriter writer \u003d new FileWriter(this.path);","lastModifiedDate":"2022-02-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            String input \u003d index + \";\" + Utility.constructInput(tasks.get(i));","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            writer.write(input + System.lineSeparator());","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            index++;","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        writer.close();","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Appends data to the storage file. Used mainly when new tasks are created.","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param textToAppend is the task data in String","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors writing the file","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void append(String textToAppend) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FileWriter fw \u003d new FileWriter(this.path, true);","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        fw.write(textToAppend + System.lineSeparator());","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        fw.close();","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"spencernah"},"content":"     * Updates a specific tasks. Used mainly when changes are made to existing tasks.","lastModifiedDate":"2022-02-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"spencernah"},"content":"     * @param dataIndex is the index of the record.","lastModifiedDate":"2022-02-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param input is the new data.","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors writing the file.","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"spencernah"},"content":"    public void updateLine(int dataIndex, String input) throws IOException {","lastModifiedDate":"2022-02-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(this.path);","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String content \u003d new String(Files.readAllBytes(path));","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"spencernah"},"content":"        String line \u003d readLine(dataIndex);","lastModifiedDate":"2022-02-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        content \u003d content.replaceAll(line, input);","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Files.write(path, content.getBytes(StandardCharsets.UTF_8));","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Read a specific line of data/task data in the storage.","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @param n is the index of the record.","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @return a specific line of data/task data.","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws IOException if the line of data is not found.","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private String readLine(int n) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return Files.readAllLines(Paths.get(this.path)).get(n);","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":12,"-":96}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.others.DateFormat;","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A type of task where task is tied to a due date","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /** Represents the due date of the task */","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"     * A type of task that has a due date","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"     * @param desc is the name of task","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"     * @param date is the due date of task","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    public Deadline(String desc, LocalDate date, String notes) {","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"        super(desc, \"D\", notes);","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /** @return the date of the event. Format \u003d \"yyyy-mm-dd\" */","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return this.date;","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /** @return the date of the event. Format \u003d \"dd mm yyyy\" */","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public String getFormattedDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(DateFormat.EVENT_AND_DEADLINE));","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** @return the task type, task status (as a icon), task description and task date (in \"dd mm yyyy\" format). */","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"    public String getTypeStatusDesc() {","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        return \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.desc + \" (by:\" + getFormattedDate() + \")\";","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"    /** @return the task type, task status (as an icon) and task description and notes. */","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"    public String getTypeStatusDescNotes() {","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"        String output \u003d \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.desc","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"                + \" (by:\" + getFormattedDate() + \")\";","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"        if (hasNotes()) {","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"            output \u003d output.concat(\"\\n\\t: \" + this.notes);","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"        return output;","lastModifiedDate":"2022-02-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":21,"-":28}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.others.DateFormat;","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":" * A type of task where task is tied to an occurrence date","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"     * A type of task that has the occurrence date","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"     * @param desc is name of task","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"     * @param date is occurrence of task","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    public Event(String desc, LocalDate date, String notes) {","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"        super(desc, \"E\", notes);","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /** @return the date of the event. Format \u003d \"yyyy-mm-dd\" */","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return this.date;","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /** @return the date of the event. Format \u003d \"dd mm yyyy\" */","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public String getFormattedDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(DateFormat.EVENT_AND_DEADLINE));","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"    /** @return the task type, task status (as an icon), task description and task date (in \"dd mm yyyy\" format). */","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"    public String getTypeStatusDesc() {","lastModifiedDate":"2022-02-21"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"        return \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.desc + \" (on: \" + getFormattedDate() + \")\";","lastModifiedDate":"2022-02-21"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"    /** @return the task type, task status (as an icon) and task description and notes. */","lastModifiedDate":"2022-02-21"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"    public String getTypeStatusDescNotes() {","lastModifiedDate":"2022-02-21"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"        String output \u003d \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.desc","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"                + \" (on: \" + getFormattedDate() + \")\";","lastModifiedDate":"2022-02-21"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"        if (hasNotes()) {","lastModifiedDate":"2022-02-21"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"            output \u003d output.concat(\"\\n\\t: \" + this.notes);","lastModifiedDate":"2022-02-21"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-21"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"        return output;","lastModifiedDate":"2022-02-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":23,"-":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/** Represents a generic task. */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Task {","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    protected String desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /** Represents the status of the task. */","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    protected String type;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"    protected String notes \u003d null;","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected int doAfter \u003d -1;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    protected int doBefore \u003d -1;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param desc is the description of the task.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param type is the type of the task (deadline, event or todo).","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    public Task(String desc, String type, String notes) {","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Sets the task status based on the param.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param status used to overwrite the task status.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the doAfter task based on the param.","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param index task index.","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setDoAfter(int index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.doAfter \u003d index;","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the doBefore task based on the param.","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param index task index.","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setDoBefore(int index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.doBefore \u003d index;","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the task status (isDone) in the form of an icon.","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @return a tick or cross icon.","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return \"\\u2713\";","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return \"\\u2718\";","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /** @return task description. */","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String getDesc() {","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this.desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns the task status.","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @return true if task is completed.","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"spencernah"},"content":"    /** @return the task type, task status (as an icon) and task description. */","lastModifiedDate":"2022-02-20"},{"lineNumber":82,"author":{"gitId":"spencernah"},"content":"    public String getTypeStatusDesc() {","lastModifiedDate":"2022-02-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.desc;","lastModifiedDate":"2022-02-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":86,"author":{"gitId":"spencernah"},"content":"    /** @return the task type, task status (as an icon) and task description and notes. */","lastModifiedDate":"2022-02-20"},{"lineNumber":87,"author":{"gitId":"spencernah"},"content":"    public String getTypeStatusDescNotes() {","lastModifiedDate":"2022-02-21"},{"lineNumber":88,"author":{"gitId":"spencernah"},"content":"        String output \u003d \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.desc;","lastModifiedDate":"2022-02-20"},{"lineNumber":89,"author":{"gitId":"spencernah"},"content":"        if (hasNotes()) {","lastModifiedDate":"2022-02-20"},{"lineNumber":90,"author":{"gitId":"spencernah"},"content":"            output \u003d output.concat(\"\\n\\t: \" + this.notes);","lastModifiedDate":"2022-02-21"},{"lineNumber":91,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":92,"author":{"gitId":"spencernah"},"content":"        return output;","lastModifiedDate":"2022-02-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /** @return the task type (deadline, event or todo. */","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public String getType() {","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this.type;","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Used mainly for subclasses like event and deadline.","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @return null by default.","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @return doAfter task index.","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public int getDoAfter() {","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return this.doAfter;","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @return doBefore task index.","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public int getDoBefore() {","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return this.doBefore;","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /** Change the task status to complete. */","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @return true if there is no Do After task.","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean isDoAfterEmpty() {","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return this.doAfter \u003d\u003d -1;","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @return true if there is no Do Before task.","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean isDoBeforeEmpty() {","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return this.doBefore \u003d\u003d -1;","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":142,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":143,"author":{"gitId":"spencernah"},"content":"     * @param input is the notes to be associated with the task","lastModifiedDate":"2022-02-20"},{"lineNumber":144,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":145,"author":{"gitId":"spencernah"},"content":"    public void setNotes(String input) {","lastModifiedDate":"2022-02-21"},{"lineNumber":146,"author":{"gitId":"spencernah"},"content":"        this.notes \u003d input;","lastModifiedDate":"2022-02-20"},{"lineNumber":147,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":148,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":149,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-21"},{"lineNumber":150,"author":{"gitId":"spencernah"},"content":"     * Deletes the note","lastModifiedDate":"2022-02-21"},{"lineNumber":151,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-21"},{"lineNumber":152,"author":{"gitId":"spencernah"},"content":"    public void deleteNotes() {","lastModifiedDate":"2022-02-21"},{"lineNumber":153,"author":{"gitId":"spencernah"},"content":"        this.notes \u003d \"\";","lastModifiedDate":"2022-02-21"},{"lineNumber":154,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":155,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":156,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":157,"author":{"gitId":"spencernah"},"content":"     * @return notes associated to the task","lastModifiedDate":"2022-02-20"},{"lineNumber":158,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":159,"author":{"gitId":"spencernah"},"content":"    public String getNotes() {","lastModifiedDate":"2022-02-20"},{"lineNumber":160,"author":{"gitId":"spencernah"},"content":"        return this.notes;","lastModifiedDate":"2022-02-20"},{"lineNumber":161,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":162,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":163,"author":{"gitId":"spencernah"},"content":"    public boolean hasNotes() {","lastModifiedDate":"2022-02-20"},{"lineNumber":164,"author":{"gitId":"spencernah"},"content":"        return this.notes !\u003d null \u0026\u0026 this.notes.length() \u003e 0;","lastModifiedDate":"2022-02-21"},{"lineNumber":165,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":36,"-":130}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import java.io.StringReader;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the list used to store the various tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class TaskList {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Create a task list using existing data.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param input is a String of task data.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors writing the file.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws DateTimeParseException if the date format incorrect.","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public TaskList(String input) throws IOException, DateTimeParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.taskList \u003d new ArrayList();","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        BufferedReader reader \u003d new BufferedReader(new StringReader(input));","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"        String line;","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"            String[] delimited \u003d line.split(\";\", 8);","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            if (\"T\".equals(delimited[1])) {","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"                taskList.add(new ToDo(delimited[3], delimited[7]));","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            } else if (\"E\".equals(delimited[1])) {","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"                taskList.add(new Event(delimited[3], LocalDate.parse(delimited[4]), delimited[7]));","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            } else if (\"D\".equals(delimited[1])) {","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"                taskList.add(new Deadline(delimited[3], LocalDate.parse(delimited[4]), delimited[7]));","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            taskList.get(taskList.size() - 1).setStatus(Boolean.parseBoolean(delimited[2]));","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            taskList.get(taskList.size() - 1).setDoAfter(Integer.parseInt(delimited[5]));","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            taskList.get(taskList.size() - 1).setDoBefore(Integer.parseInt(delimited[6]));","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Create a task list when there are no existing data.","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.taskList \u003d new ArrayList();","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Check if task list is empty.","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @return true if task list is empty","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Get a specific task from the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param i is the element index of the task.","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the task as a Task object.","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return taskList.get(i);","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Return the index of a task in the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param task task object.","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @return task index.","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public int getIndex(Task task) {","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return taskList.indexOf(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @return the size of the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public int size() {","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return taskList.size();","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Deletes a specific task from the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param i is the element index of the task.","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void remove(int i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        taskList.remove(i);","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Creates a new task.","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param task is Task object to be created.","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":103,"author":{"gitId":"spencernah"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":104,"author":{"gitId":"spencernah"},"content":"     * Total number of pending tasks.","lastModifiedDate":"2022-02-20"},{"lineNumber":105,"author":{"gitId":"spencernah"},"content":"     *","lastModifiedDate":"2022-02-20"},{"lineNumber":106,"author":{"gitId":"spencernah"},"content":"     * @return the count of pending tasks","lastModifiedDate":"2022-02-20"},{"lineNumber":107,"author":{"gitId":"spencernah"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":108,"author":{"gitId":"spencernah"},"content":"    public int pendingSize() {","lastModifiedDate":"2022-02-20"},{"lineNumber":109,"author":{"gitId":"spencernah"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-02-20"},{"lineNumber":110,"author":{"gitId":"spencernah"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); ++i) {","lastModifiedDate":"2022-02-20"},{"lineNumber":111,"author":{"gitId":"spencernah"},"content":"            if (!taskList.get(i).getIsDone()) {","lastModifiedDate":"2022-02-20"},{"lineNumber":112,"author":{"gitId":"spencernah"},"content":"                count++;","lastModifiedDate":"2022-02-20"},{"lineNumber":113,"author":{"gitId":"spencernah"},"content":"            }","lastModifiedDate":"2022-02-20"},{"lineNumber":114,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":115,"author":{"gitId":"spencernah"},"content":"        return count;","lastModifiedDate":"2022-02-20"},{"lineNumber":116,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":22,"-":95}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/** Default type of task */","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"    public ToDo(String desc, String notes) {","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"        super(desc, \"T\", notes);","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":2,"-":6}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Text UI of the application.","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Ui {","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    protected static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected static final String LINE \u003d \"_________________________________________________________________________\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    protected static final String MSG_END \u003d \"Oyasumi~\";","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    protected static final String MSG_GREETING \u003d \"Harrowwwwwww\\nWut iz up?\";","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    protected static final String MSG_UNKNOWN \u003d \"Sorry, I don\u0027t understand this :(\";","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    protected Scanner in;","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public Ui() {","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * A standardised format for all prints in the application.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param input is the string to be printed.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void print(String input) {","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        input \u003d input.replace(\"\\n\", \"\\n\\t\");","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        System.out.println(\"\\t\" + input);","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *  Prints the welcome message when application is initialised.","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        System.out.println(LOGO + \"\\n\" + MSG_GREETING);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Reads and return the user input","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return user input as String","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Prints a single line. Used mainly as separators between commands and results.","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void showLine() {","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Prints a farewell message after application has been terminated by the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void showEnd() {","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        print(MSG_END);","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Prints the error message of an exception.","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param err is the exception","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void showError(String err) {","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        print(err);","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Prints a message when duke.command is unknown to the application.","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void showUnknown() {","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        print(MSG_UNKNOWN);","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":1,"-":80}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"        \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"2.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"         \u003cfont\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"         \u003c/font\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"spencernah":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"spencernah":19}},{"path":"src/test/java/duke/command/SetDoAfterCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.command;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import duke.command.task.SetDoAfterCommand;","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"public class SetDoAfterCommandTest {","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    private String filePath \u003d \"C:\\\\Users\\\\User\\\\Documents\\\\ip\\\\data\\\\data_test.txt\";","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    private Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    @BeforeEach","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"    public void setup() throws IOException {","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"        try {","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"            throw new FileNotFoundException(\"File not found\");","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"            throw new IOException(\"Can\u0027t read file\");","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"    public void executeValidCommand() throws IOException, DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"        Command c \u003d new SetDoAfterCommand(1, 3);","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"        c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"        Assertions.assertEquals(tasks.get(1).getDoAfter(), 3);","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"    public void setInvalidParentChildIndex() throws IOException, DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"            Command c \u003d new SetDoAfterCommand(3, 2);","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"    public void setOutOfRangePositiveIndex() throws IOException, DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"            Command c \u003d new SetDoAfterCommand(10, 3);","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-20"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"    public void setOutOfRangeNegativeIndex() throws IOException, DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-20"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"            Command c \u003d new SetDoAfterCommand(3, -1);","lastModifiedDate":"2022-02-20"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-20"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-20"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"    public void setSameIndexForParentChild() throws IOException, DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-20"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"            Command c \u003d new SetDoAfterCommand(1, 1);","lastModifiedDate":"2022-02-20"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-20"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-20"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-20"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"spencernah":74}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.parser;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import duke.command.Command;","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"import duke.others.Keyword;","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"public class ParserTest {","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    private Storage storage \u003d new Storage(\"C:\\\\Users\\\\User\\\\Documents\\\\ip\\\\data\\\\data_test.txt\");","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"    @BeforeEach","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"    public void setup() {","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"    public void parseViewByDateCommandNoDate() {","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(Keyword.LIST_BY_DATE);","lastModifiedDate":"2022-02-21"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"    public void parseViewByDateCommandIncorrectDateFormat() {","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(Keyword.LIST_BY_DATE + \"/20190805\");","lastModifiedDate":"2022-02-21"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"    public void parseDoneCommandIncorrectIndex() {","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(\"done abc\");","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"    public void parseDeleteCommandIncorrectIndex() {","lastModifiedDate":"2022-02-20"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(\"delete abc\");","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"    public void parseAddCommandDeadlineNoDesc() {","lastModifiedDate":"2022-02-20"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(Keyword.DEADLINE);","lastModifiedDate":"2022-02-21"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"    public void parseAddCommandDeadlineNoDate() {","lastModifiedDate":"2022-02-20"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(Keyword.DEADLINE + \"test/\");","lastModifiedDate":"2022-02-21"},{"lineNumber":77,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"spencernah"},"content":"    public void parseAddCommandDeadlineIncorrectDateFormat() {","lastModifiedDate":"2022-02-20"},{"lineNumber":82,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(Keyword.DEADLINE + \"test/20190805\");","lastModifiedDate":"2022-02-21"},{"lineNumber":84,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"spencernah"},"content":"    public void parseAddCommandTodoNoDesc() {","lastModifiedDate":"2022-02-20"},{"lineNumber":89,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(Keyword.TODO);","lastModifiedDate":"2022-02-21"},{"lineNumber":91,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"spencernah"},"content":"    public void parseAddCommandDeadlineDateFormat() throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":96,"author":{"gitId":"spencernah"},"content":"        String test \u003d \"\";","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"spencernah"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(Keyword.DEADLINE + \"test/2019-8-5\");","lastModifiedDate":"2022-02-21"},{"lineNumber":99,"author":{"gitId":"spencernah"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-18"},{"lineNumber":100,"author":{"gitId":"spencernah"},"content":"            test \u003d ((Deadline) tasks.get(tasks.size() - 1)).getFormattedDate();","lastModifiedDate":"2022-02-18"},{"lineNumber":101,"author":{"gitId":"spencernah"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":102,"author":{"gitId":"spencernah"},"content":"            throw new DukeException(\"Date format is incorrect\");","lastModifiedDate":"2022-02-20"},{"lineNumber":103,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":104,"author":{"gitId":"spencernah"},"content":"        Assertions.assertEquals(test, \"05 Aug 2019\");","lastModifiedDate":"2022-02-18"},{"lineNumber":105,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"spencernah":106}}]
