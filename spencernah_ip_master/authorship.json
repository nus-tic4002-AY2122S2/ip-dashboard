[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"/*","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":" *","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":" * This is a general purpose Gradle build.","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":" * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.4/samples","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":" * This project uses @Incubating APIs which are subject to change.","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"plugins {","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"run {","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"dependencies {","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.7.0\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.7.0\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.7.0\u0027","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"repositories { mavenCentral() }","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"spencernah":27}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"0;E;false;task1;2019-06-08;-1;-1","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"1;T;true;task2;;-1;-1","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"2;E;false;task3;2019-06-09;-1;-1","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"3;E;false;hello;2020-10-01;-1;-1","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"4;E;false;hello task;2022-08-06;-1;-1","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"spencernah":1,"-":4}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"@rem","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"@rem","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"@rem","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"@rem","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"@rem","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"@rem","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"@rem","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"@rem Find java.exe","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"echo.","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"echo.","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"goto fail","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"echo.","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"echo.","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"goto fail","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":":execute","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"@rem Setup the command line","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":":end","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"spencernah"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"spencernah"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"spencernah"},"content":":fail","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"spencernah"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"spencernah"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"spencernah"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"spencernah"},"content":"exit /b 1","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"spencernah"},"content":":mainEnd","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"spencernah"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"spencernah"},"content":":omega","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"spencernah":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"/*","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":" *","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":" *","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":" * in the user manual at https://docs.gradle.org/7.4/userguide/multi_project_builds.html","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":" * This project uses @Incubating APIs which are subject to change.","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"spencernah":11}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import duke.others.DateFormat;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Entry point of the Duke application.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        new Duke(\"C:\\\\Users\\\\User\\\\Documents\\\\ip\\\\data\\\\data.txt\").run();","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Sets up the required objects, loads up the data from the storage file, and prints the welcome message.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param filePath argument is the directory where the data for the existing task list (if any) is stored.","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *                 The argument is hardcoded at the moment.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            ui.print(\"No existing To Do List. Generating a new one\");","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            ui.print(\"Unable to read specific lines in data.txt file\");","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            ui.print(\"Dates in the data.txt file is incompatible. Duke reads date in \" + DateFormat.STANDARD + \" only\");","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /** Runs the program until termination.  */","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void run() {","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"        boolean isFirstRun \u003d true;","lastModifiedDate":"2022-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Command c;","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"                if (isFirstRun) {","lastModifiedDate":"2022-02-19"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"                    isFirstRun \u003d false;","lastModifiedDate":"2022-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    c \u003d Parser.parse(\"reminder\");","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    ui.showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                ui.print(\"Line not found\");","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                ui.print(\"Please enter the date in this format: \" + DateFormat.STANDARD);","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            } finally {","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":3,"-":76}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import duke.others.Utility;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a task to the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    protected String type;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    protected String desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"     * Add a Deadline or Event task.","lastModifiedDate":"2022-02-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param type task type.","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param desc task description.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param date occurence/due date depending on task type.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddCommand(String type, String desc, LocalDate date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"     * Add a ToDo task.","lastModifiedDate":"2022-02-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param type task type.","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param desc task description.","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddCommand(String type, String desc) {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.desc\u003d desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Executes the duke.command and add a new task to the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors appending the date to the storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (this.type \u003d\u003d \"todo\") {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            tasks.add(new ToDo(this.desc));","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } else if (this.type \u003d\u003d \"event\") {","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            tasks.add(new Event(this.desc, this.date));","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } else if (this.type \u003d\u003d \"deadline\") {","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            tasks.add(new Deadline(this.desc, this.date));","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        int index \u003d tasks.size() - 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        storage.append(index + \";\" + Utility.constructInput(task));","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ui.print(\"New task added: \\n\\t\" + task.getStatusIconAndDesc() + \"\\n\" + (index+1) + \" tasks in your list\");","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":2,"-":67}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import duke.others.Messages;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Delete a task from the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    protected int index;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param index index of the task in the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Delete a specific task from the task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"     * If deleted task has a parent or child task, update them to accordingly.","lastModifiedDate":"2022-02-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param tasks task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param ui text ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param storage storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws DukeException if the task list is empty or task index input is out of range.","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors writing the data to the storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new DukeException(Messages.LIST_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } else if (tasks.size() \u003c\u003d this.index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Please enter a task number between 1 and \" + tasks.size());","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            updateChildAndParent(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            ui.print(\"Yessir! Task removed!!\\n\\t\"","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    + tasks.get(this.index).getStatusIconAndDesc() + \"\\n\" + (tasks.size() - 1) + \" tasks to go!\");","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            tasks.remove(this.index);","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private void updateChildAndParent(TaskList tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Task currentTask \u003d tasks.get(this.index);","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!currentTask.isDoBeforeEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Task parentTask \u003d tasks.get(currentTask.getDoBefore());","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            parentTask.setDoAfter(-1);","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!currentTask.isDoAfterEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Task childTask \u003d tasks.get(currentTask.getDoAfter());","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            childTask.setDoBefore(-1);","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":1,"-":60}},{"path":"src/main/java/duke/others/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.others;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Keyword {","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static final String DONE \u003d \"done\";","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static final String ADD_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String ADD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String ADD_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String VIEW_BY_DATE \u003d \"list date\";","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String EXIT_1 \u003d \"bb\";","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String EXIT_2 \u003d \"bye\";","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String VIEW_BY_STATUS_1 \u003d \"pending\";","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VIEW_BY_STATUS_2 \u003d \"list pending\";","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VIEW_ALL \u003d \"list\";","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String REMINDER \u003d \"reminder\";","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"    public static final String DO_AFTER_1 \u003d \"doafter\";","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"    public static final String DO_AFTER_2 \u003d \"do after\";","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":2,"-":17}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.parser;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.command.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.others.DateFormat;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.others.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.others.Keyword;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.others.Utility;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Parser {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_EXIT_1 \u003d Keyword.EXIT_1;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_EXIT_2 \u003d Keyword.EXIT_2;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_DONE \u003d Keyword.DONE;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_DELETE \u003d Keyword.DELETE;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_TODO \u003d Keyword.ADD_TODO;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_DEADLINE \u003d Keyword.ADD_DEADLINE;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_EVENT \u003d Keyword.ADD_EVENT;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_LIST_DATE \u003d Keyword.VIEW_BY_DATE;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_LIST \u003d Keyword.VIEW_ALL;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_PENDING_1 \u003d Keyword.VIEW_BY_STATUS_1;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_PENDING_2 \u003d Keyword.VIEW_BY_STATUS_2;","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_FIND \u003d Keyword.FIND;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_REMINDER \u003d Keyword.REMINDER;","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String ERR_NOT_A_INT \u003d \"Please enter an integer\";","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses user input.","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Parser() {","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into duke.command for execution.","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param input full user input string.","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the duke.command based on the user input.","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Command parse(String input) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkForDelimiter(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String keyword \u003d getKeyword(input.trim());","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String parameter;","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String desc;","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String date;","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (keyword) {","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"        case KEYWORD_EXIT_1:","lastModifiedDate":"2022-02-19"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"        case KEYWORD_EXIT_2:","lastModifiedDate":"2022-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"        case KEYWORD_LIST:","lastModifiedDate":"2022-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new ViewAllCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"        case KEYWORD_PENDING_1:","lastModifiedDate":"2022-02-19"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"        case KEYWORD_PENDING_2:","lastModifiedDate":"2022-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new ViewByStatusCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"        case KEYWORD_LIST_DATE:","lastModifiedDate":"2022-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            date \u003d getCleanDateStr(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ViewByDateCommand(LocalDate.parse(date));","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"        case KEYWORD_FIND:","lastModifiedDate":"2022-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            parameter \u003d removeKeyword(input, KEYWORD_FIND).trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (parameter.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                throw new DukeException(\"Please enter a parameter after \\\"find\\\"\");","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommand(parameter);","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"        case KEYWORD_REMINDER:","lastModifiedDate":"2022-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ViewByUpcomingCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"        case KEYWORD_DONE:","lastModifiedDate":"2022-02-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            parameter \u003d removeKeyword(input, KEYWORD_DONE);","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            if (Utility.isNumber(parameter)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                return new DoneCommand( Integer.parseInt(parameter) - 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                throw new DukeException(ERR_NOT_A_INT);","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":"        case KEYWORD_DELETE:","lastModifiedDate":"2022-02-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            parameter \u003d removeKeyword(input, KEYWORD_DELETE);","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            if (Utility.isNumber(parameter)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                return new DeleteCommand( Integer.parseInt(parameter) - 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                throw new DukeException(ERR_NOT_A_INT);","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"spencernah"},"content":"        case KEYWORD_DEADLINE:","lastModifiedDate":"2022-02-19"},{"lineNumber":84,"author":{"gitId":"spencernah"},"content":"        case KEYWORD_EVENT:","lastModifiedDate":"2022-02-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            parameter \u003d removeKeyword(input, keyword);","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            checkDesc(parameter);","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            date \u003d getCleanDateStr(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            LocalDate dateLocal \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            desc \u003d parameter.substring(0, parameter.lastIndexOf(\"/\")).trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new AddCommand(keyword, desc, dateLocal);","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"spencernah"},"content":"        case KEYWORD_TODO:","lastModifiedDate":"2022-02-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            desc \u003d removeKeyword(input, keyword);","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            checkDesc(desc);","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new AddCommand(keyword, desc);","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new UnknownCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Get keyword of the duke.command based on the user input.","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param input full user input string.","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @return keyword of the duke.command.","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private static String getKeyword(String input) {","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (input.matches(KEYWORD_DONE + \".*\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return KEYWORD_DONE;","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(KEYWORD_DELETE + \".*\")) {","lastModifiedDate":"2022-02-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return KEYWORD_DELETE;","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(KEYWORD_DEADLINE + \".*\")) {","lastModifiedDate":"2022-02-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return KEYWORD_DEADLINE;","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(KEYWORD_EVENT + \".*\")) {","lastModifiedDate":"2022-02-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return KEYWORD_EVENT;","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(KEYWORD_TODO + \".*\")) {","lastModifiedDate":"2022-02-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return KEYWORD_TODO;","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(KEYWORD_LIST_DATE + \".*\")) {","lastModifiedDate":"2022-02-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return KEYWORD_LIST_DATE;","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"spencernah"},"content":"        } else if (input.matches(KEYWORD_FIND + \".*\")) {","lastModifiedDate":"2022-02-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return KEYWORD_FIND;","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Remove keyword to get the duke.command parameters (if applicable).","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @param input full user input string.","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @param keyword duke.command keyword.","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @return duke.command parameters.","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private static String removeKeyword(String input, String keyword) {","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return input.replace(keyword, \"\").trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Checks if user has input a task description when entering a create task duke.command.","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @param param duke.command parameter.","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @throws DukeException if task description is missing from the user input.","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private static void checkDesc(String param) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (param.length() \u003d\u003d 0 || param.charAt(0) \u003d\u003d \u0027/\u0027) {","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Task description cannot be empty!!\");","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Checks if user has input a date when entering a create Event/Deadline duke.command.","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param param duke.command parameter.","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @throws DukeException if user did not lead the date with a \"/\" character, did not enter a date or enter an","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * invalid date format (accepted format \u003d \"yyyy-mm-dd\" or \"yyyy-m-d\").","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private static void checkDate(String param) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        int delimiterIndex \u003d param.lastIndexOf(\"/\");","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (delimiterIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Please enter a date and lead it with \\\"/\\\"\");","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String date \u003d param.substring(delimiterIndex + 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (date.length() \u003d\u003d 0)  {","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Please include a date after the \\\"/\\\" :)\");","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (date.lastIndexOf(\"-\") \u003c 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Duke reads date in \" + DateFormat.STANDARD +","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    \". Please separate your dates with \\\"-\\\" (eg. 2019-08-15)\");","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Condenses all the methods that needs to be performed to ensure that the date input is correct and return the","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * correct date format (if applicable).","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @param input full user input string..","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @return date string in the correct format (yyyy-mm-dd).","lastModifiedDate":"2021-09-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * @throws DukeException from checkDate() method.","lastModifiedDate":"2021-09-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private static String getCleanDateStr(String input) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        checkDate(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        input \u003d input.substring(input.lastIndexOf(\"/\") + 1).trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        input \u003d changeDateFormat(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return input;","lastModifiedDate":"2021-09-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Change the date parameter into a format that can be parsed to LocalDate.","lastModifiedDate":"2021-09-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @param date date parameter.","lastModifiedDate":"2021-09-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @return a date string in \"yyyy-mm-dd\" format.","lastModifiedDate":"2021-09-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private static String changeDateFormat (String date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        String day \u003d date.substring(date.lastIndexOf(\"-\") + 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (day.length() \u003d\u003d 1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            day \u003d \"0\" + day;","lastModifiedDate":"2021-09-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String month \u003d date.substring(date.indexOf(\"-\") + 1, date.lastIndexOf(\"-\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        if (month.length() \u003d\u003d 1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            month \u003d \"0\" + month;","lastModifiedDate":"2021-09-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String year \u003d date.substring(0, 4);","lastModifiedDate":"2021-09-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2021-09-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Ensure that the users do not input any delimiter character","lastModifiedDate":"2021-09-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * @param input full user input string.","lastModifiedDate":"2021-09-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @throws DukeException if there the delimiter character is used in input","lastModifiedDate":"2021-09-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private static void checkForDelimiter(String input) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (input.matches(\".*;.*\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Please refrain from using the character \\\";\\\"\");","lastModifiedDate":"2021-09-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":19,"-":195}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.others.Utility;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.File;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":" * Represents the file and its corresponding methods used to store task list data.","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Storage {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    protected String path;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    protected String data;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    protected boolean isEmpty;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The file used to store task list data.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param filePath is the directory of the data.txt file.","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.path \u003d filePath;","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.data \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEmpty \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Loads the data from this storage and returns it","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the data in String.","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws FileNotFoundException if the path is not valid","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String load() throws FileNotFoundException {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        File f \u003d new File(this.path);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            this.data \u003d this.data + s.nextLine() + System.lineSeparator();","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (this.data.length() \u003e 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.isEmpty \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this.data;","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"     * Saves Task List data to storage file.","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param tasks is the Task List to be saved.","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors writing the data to the storage file.","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FileWriter writer \u003d new FileWriter(new File(this.path));","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); ++i) {","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            String input \u003d index + \";\" + Utility.constructInput(tasks.get(i));","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            writer.write(input + System.lineSeparator());","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            index++;","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        writer.close();","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Appends data to the storage file. Used mainly when new tasks are created.","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param textToAppend is the task data in String","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors writing the file","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void append(String textToAppend) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FileWriter fw \u003d new FileWriter(this.path, true);","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        fw.write(textToAppend + System.lineSeparator());","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        fw.close();","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates a specific line of data (a.k.a task data). Used mainly when changes are made to existing tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param n is the index of the record.","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param input is the new data.","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws IOException if there are errors writing the file.","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void updateLine(int n, String input) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(this.path);","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String content \u003d new String(Files.readAllBytes(path));","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String line \u003d readLine(n);","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        content \u003d content.replaceAll(line, input);","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Files.write(path, content.getBytes(StandardCharsets.UTF_8));","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Read a specific line of data/task data in the storage.","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @param n is the index of the record.","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @return a specific line of data/task data.","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws IOException if the line of data is not found.","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private String readLine(int n) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return Files.readAllLines(Paths.get(this.path)).get(n);","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"spencernah":2,"-":107}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"spencernah"},"content":"package duke.parser;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"spencernah"},"content":"import duke.command.*;","lastModifiedDate":"2022-02-18"},{"lineNumber":4,"author":{"gitId":"spencernah"},"content":"import duke.others.DukeException;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"spencernah"},"content":"import duke.others.Keyword;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"spencernah"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"spencernah"},"content":"import duke.task.*;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"spencernah"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"spencernah"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"spencernah"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"spencernah"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"spencernah"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"spencernah"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"spencernah"},"content":"public class ParserTest {","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"spencernah"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"spencernah"},"content":"    Storage storage \u003d new Storage(\"/Users/spencernah/code/duke/data/data_test.txt\");","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"spencernah"},"content":"    TaskList tasks;","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"spencernah"},"content":"    @BeforeEach","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"spencernah"},"content":"    public void setup() {","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"spencernah"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"spencernah"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"spencernah"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"spencernah"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"spencernah"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"spencernah"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"spencernah"},"content":"    public void parse_ViewByDateCommand_noDate() {","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":37,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(Keyword.VIEW_BY_DATE);","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":39,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":40,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"spencernah"},"content":"    public void parse_ViewByDateCommand_incorrectDateFormat() {","lastModifiedDate":"2022-02-18"},{"lineNumber":43,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":44,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(Keyword.VIEW_BY_DATE + \"/20190805\");","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":48,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"spencernah"},"content":"    public void parse_DoneCommand_incorrectIndex() {","lastModifiedDate":"2022-02-18"},{"lineNumber":50,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(\"done abc\");","lastModifiedDate":"2022-02-18"},{"lineNumber":52,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":54,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":55,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"spencernah"},"content":"    public void parse_DeleteCommand_incorrectIndex() {","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(\"delete abc\");","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"spencernah"},"content":"    public void parse_AddCommand_deadline_noDesc() {","lastModifiedDate":"2022-02-18"},{"lineNumber":64,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":65,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(Keyword.ADD_DEADLINE);","lastModifiedDate":"2022-02-18"},{"lineNumber":66,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":67,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":68,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":69,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"spencernah"},"content":"    public void parse_AddCommand_deadline_noDate() {","lastModifiedDate":"2022-02-18"},{"lineNumber":71,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(Keyword.ADD_DEADLINE + \"test/\");","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":76,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":77,"author":{"gitId":"spencernah"},"content":"    public void parse_AddCommand_deadline_incorrectDateFormat() {","lastModifiedDate":"2022-02-18"},{"lineNumber":78,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":79,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(Keyword.ADD_DEADLINE + \"test/20190805\");","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":83,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"spencernah"},"content":"    public void parse_AddCommand_todo_noDesc() {","lastModifiedDate":"2022-02-18"},{"lineNumber":85,"author":{"gitId":"spencernah"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2022-02-18"},{"lineNumber":86,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(Keyword.ADD_TODO);","lastModifiedDate":"2022-02-18"},{"lineNumber":87,"author":{"gitId":"spencernah"},"content":"        });","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":89,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"spencernah"},"content":"    @Test","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"spencernah"},"content":"    public void parse_AddCommand_Deadline_dateFormat() {","lastModifiedDate":"2022-02-18"},{"lineNumber":92,"author":{"gitId":"spencernah"},"content":"        String test \u003d \"\";","lastModifiedDate":"2022-02-18"},{"lineNumber":93,"author":{"gitId":"spencernah"},"content":"        try {","lastModifiedDate":"2022-02-18"},{"lineNumber":94,"author":{"gitId":"spencernah"},"content":"            Command c \u003d Parser.parse(Keyword.ADD_DEADLINE + \"test/2019-8-5\");","lastModifiedDate":"2022-02-18"},{"lineNumber":95,"author":{"gitId":"spencernah"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-18"},{"lineNumber":96,"author":{"gitId":"spencernah"},"content":"            test \u003d ((Deadline) tasks.get(tasks.size()-1)).getFormattedDate();","lastModifiedDate":"2022-02-18"},{"lineNumber":97,"author":{"gitId":"spencernah"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":98,"author":{"gitId":"spencernah"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-18"},{"lineNumber":99,"author":{"gitId":"spencernah"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":100,"author":{"gitId":"spencernah"},"content":"        Assertions.assertEquals(test, \"05 Aug 2019\");","lastModifiedDate":"2022-02-18"},{"lineNumber":101,"author":{"gitId":"spencernah"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":102,"author":{"gitId":"spencernah"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":103,"author":{"gitId":"spencernah"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"spencernah":103}}]
