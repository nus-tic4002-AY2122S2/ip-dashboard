[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"# Readme","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Set Up","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"In the terminal, through gradle:","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"To compile the java files:","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"`gradlew build` ","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"To run the file:","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"`gradlew run`","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"## Introduction","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"zcnmashleu95"},"content":" Duke is a Personal Assistant Chatbot that helps the user keep track of various tasks. These tasks include ToDos, Deadlines and events.","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":" The user would be able to input various commands in order execute the different features. If the commands are incorrect, an error message would be displayed.","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"zcnmashleu95"},"content":" ","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"## Features ","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"The main features would be commands related to the tasks. For the specialised tasks, ToDo has only a description.","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"zcnmashleu95"},"content":"Deadlines consist of a description and a due date. Events consist of a description of task and a time period. Features such as save and load happen automatically upon opening or closing the application.","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"zcnmashleu95"},"content":"If the folder (\"\\data\") and file (\"tasks_list.txt\") were not created, the application will create them.","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"zcnmashleu95"},"content":"List of Features:","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"zcnmashleu95"},"content":"* Add tasks such as (ToDo, Deadlines, Events) to the task list","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"zcnmashleu95"},"content":"* Reschedule tasks\u0027 timings","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"zcnmashleu95"},"content":"* Display the current list of tasks","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"zcnmashleu95"},"content":"* Set the tasks to be done or undone","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"zcnmashleu95"},"content":"* Display errors when commands are incorrect","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"zcnmashleu95"},"content":"* Delete tasks from the task list","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"zcnmashleu95"},"content":"* Store the tasks in a text file","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"zcnmashleu95"},"content":"* Load tasks from a text file","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"zcnmashleu95"},"content":"* Find tasks that contain a keyword (fully or partially)","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"zcnmashleu95"},"content":"## Usage","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"zcnmashleu95"},"content":"The user will input commands for the chatbot to parse in order to execute different features. ","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"zcnmashleu95"},"content":"Different commands may require different inputs. The user could also input \"/help\" for further help.","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"zcnmashleu95"},"content":"###Inputs in commands:","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"zcnmashleu95"},"content":"The input description will be in the square brackets \"[ ]\".","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"zcnmashleu95"},"content":"eg. [Time] refers to an input that is related to time.","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"zcnmashleu95"},"content":"1. `[description]` is a string that describes the task.","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"zcnmashleu95"},"content":"2. `[Date and Time]` refers to the input date and time. It goes by the format \"dd/MM/yyyy HH:mm:ss\". Eg. 02/12/20 10:10:10","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"zcnmashleu95"},"content":"3. `[Time]` refers to the Time format of \"HH:mm:ss\" where they represent the hours, minutes and seconds.","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"zcnmashleu95"},"content":"4. `[option]` refers to the option number. The option number for each task can be viewed when the tasks are printed","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"zcnmashleu95"},"content":" as a list.(this can be seen by the command `list`)","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"zcnmashleu95"},"content":"5. `[keyword]` refers to the phrase or word that you want to search for.","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"zcnmashleu95"},"content":"###Commands:","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"zcnmashleu95"},"content":"The commands for the respective features are after the semi-colon\":\"","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"zcnmashleu95"},"content":"1. Adding a generic task: `[description]`","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"zcnmashleu95"},"content":"2. Adding a ToDo task: `todo [description]`","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"zcnmashleu95"},"content":"3. Adding a Deadline task: `deadline [description] /by [Date and Time]`","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"zcnmashleu95"},"content":"4. Adding an Event task: `event [description] /at [Date and Time] to [Time]`","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"zcnmashleu95"},"content":"5. Reschedule a Deadline: `reschedule [option number] /new [Date and time]`","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"zcnmashleu95"},"content":"6. Reschedule an Event: `reschedule [option number] /new [Date and time] to [Time]`","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"zcnmashleu95"},"content":"7. Changing a task to done: `done [option number]`","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"zcnmashleu95"},"content":"8. Changing a task to undone: `undone [option number]`","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"zcnmashleu95"},"content":"9. Deleting a task from the list: `delete [option number]`","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"zcnmashleu95"},"content":"10. Clearing the task list: `/clear`","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"zcnmashleu95"},"content":"11. To close this application: `bye`","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"zcnmashleu95"},"content":"12. To find tasks in the list containing a keyword: `find [keyword]`","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"zcnmashleu95"},"content":"13. To print the list of tasks: `list`","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"zcnmashleu95"},"content":"14. To print the list of commands available: `/help`","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"-":7,"zcnmashleu95":60}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"plugins {","lastModifiedDate":"2022-02-17"},{"lineNumber":2,"author":{"gitId":"zcnmashleu95"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"zcnmashleu95"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"repositories {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"zcnmashleu95"},"content":"    mavenCentral()","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"zcnmashleu95"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"dependencies {","lastModifiedDate":"2022-02-19"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":14,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":16,"author":{"gitId":"zcnmashleu95"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":19,"author":{"gitId":"zcnmashleu95"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":20,"author":{"gitId":"zcnmashleu95"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":21,"author":{"gitId":"zcnmashleu95"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":22,"author":{"gitId":"zcnmashleu95"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":23,"author":{"gitId":"zcnmashleu95"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":24,"author":{"gitId":"zcnmashleu95"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":25,"author":{"gitId":"zcnmashleu95"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":26,"author":{"gitId":"zcnmashleu95"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":27,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":28,"author":{"gitId":"zcnmashleu95"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.8.1\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":29,"author":{"gitId":"zcnmashleu95"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.8.1\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":30,"author":{"gitId":"zcnmashleu95"},"content":"    implementation group:\u0027com.google.guava\u0027, name:\u0027guava\u0027, version: \u002731.0.1-jre\u0027","lastModifiedDate":"2022-02-19"},{"lineNumber":31,"author":{"gitId":"zcnmashleu95"},"content":"}","lastModifiedDate":"2022-02-19"},{"lineNumber":32,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"test {","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"zcnmashleu95"},"content":"    maxParallelForks 3","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"zcnmashleu95"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"zcnmashleu95"},"content":"    testLogging {","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"zcnmashleu95"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"zcnmashleu95"},"content":"        showExceptions true","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"zcnmashleu95"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"zcnmashleu95"},"content":"        showCauses true","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"zcnmashleu95"},"content":"        showStackTraces true","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"zcnmashleu95"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"zcnmashleu95"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"zcnmashleu95"},"content":"application {","lastModifiedDate":"2022-02-17"},{"lineNumber":47,"author":{"gitId":"zcnmashleu95"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2022-02-19"},{"lineNumber":48,"author":{"gitId":"zcnmashleu95"},"content":"}","lastModifiedDate":"2022-02-17"},{"lineNumber":49,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-17"},{"lineNumber":50,"author":{"gitId":"zcnmashleu95"},"content":"shadowJar {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"zcnmashleu95"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"zcnmashleu95"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"zcnmashleu95"},"content":"checkstyle {","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"zcnmashleu95"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"zcnmashleu95"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"zcnmashleu95"},"content":"run{","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"zcnmashleu95"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"zcnmashleu95"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"zcnmashleu95"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"zcnmashleu95":61}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"O | 0 | help","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"zcnmashleu95"},"content":"T | 0 | funny","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"zcnmashleu95":2}},{"path":"docs/DeveloperGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"# Developer Guide","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"zcnmashleu95"},"content":"- By: Sze Chun  ","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"## Design","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"**Duke** leverages on the help of a total five Java classes, viz. **JustBook, Bookings, AddCommand, DeleteCommand and HelpCommand** created by the Team. It makes optimal use of Java Stream and the latest java time APIs, e.g. LocalDateTime and LocalDate, among others, together with a judicious choice of data structures. It allows a single user to key in tasks fast. ","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"zcnmashleu95"},"content":"- Each Task is stored in the `Arraylist\u003cTask\u003e` data structure.","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"  ","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"- Each of the Task types have their own characteristics","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"  ","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"zcnmashleu95"},"content":"## Implementation","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"zcnmashleu95"},"content":"#### Highlights:","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"zcnmashleu95"},"content":"#### Design considerations:","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"zcnmashleu95"},"content":"We tried to adhere to a Command design pattern as much as possible. In terms of design principles, for the refactored Command classes, they have adhered to Single Responsibility Principle rather well. This allows strong cohesion with minimal coupling for those","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"zcnmashleu95"},"content":"classes. However, certain principles such as Open-Closed Principle was adhered as much as possible. I have to tried to follow the Open to addition, close to modification principle as much as possible.","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"zcnmashleu95"},"content":"The new GUI change was more similar to an addition, with minimal modification to previous existing code. The Ui class/object serves to act as a stack of messages of sorts, allowing Duke to output a following sequence of messages. The Launcher class will thus be launching the application.","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"zcnmashleu95"},"content":"## Product scope","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"zcnmashleu95"},"content":"**Target user profile:**","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"zcnmashleu95"},"content":"- has to keep track of various tasks","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"zcnmashleu95"},"content":"- prefer desktop apps vs other types","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"- can type fast","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"zcnmashleu95"},"content":"- prefers using the keyboard over mouse interactions","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"zcnmashleu95"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"zcnmashleu95"},"content":"**Value proposition:** manage Tasks in a GUI window","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"zcnmashleu95"},"content":"### Value proposition","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"zcnmashleu95"},"content":"Duke provides a user-friendly, consistent and error-free interface,  that allows the user to key in various tasks","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"zcnmashleu95"},"content":"Some of these tasks include events, deadlines, todo as such. The user could reschedule and search for certain tasks.","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"zcnmashleu95"},"content":"## Non-Functional Requirements","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"zcnmashleu95"},"content":"1. Users are able to run the application as long as Java11 is installed","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"zcnmashleu95"},"content":"2. The application has been designed to handle up to 100’s of Tasks optimally without affecting its performance.","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"zcnmashleu95"},"content":"3. The application should preferably be executable on Windows OS or compatible software-emulated terminal.","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"zcnmashleu95"},"content":"4. User-friendly features incorporated in helpful messages feedback and diagnostic prompts (more to come) ","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"zcnmashleu95"},"content":"## Instructions for manual testing","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"zcnmashleu95"},"content":"- Ensure Java jdk 11 is installed","lastModifiedDate":"2022-02-20"},{"lineNumber":56,"author":{"gitId":"zcnmashleu95"},"content":"- Download the duke.jar file from the latest release","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"zcnmashleu95"},"content":"- start up the app, eg.` java -jar duke.jar` via a windows cmd or compatible terminal","lastModifiedDate":"2022-02-20"},{"lineNumber":58,"author":{"gitId":"zcnmashleu95"},"content":"- Type `/help` for instructions","lastModifiedDate":"2022-02-20"},{"lineNumber":59,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":60,"author":{"gitId":"zcnmashleu95"},"content":"## Diagrams","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"zcnmashleu95"},"content":"![Class Diagram.](ClassDiagram1.png)","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"zcnmashleu95"},"content":"![Sequence Diagram.](SequenceDiagram.png)","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"zcnmashleu95"},"content":"## BCD Extension","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"zcnmashleu95"},"content":"- Find tasks that contain a keyword (fully or partially)","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"zcnmashleu95":66}},{"path":"docs/UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"# User Guide","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"zcnmashleu95"},"content":"## Introduction","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"**Duke**","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"## Quick Start","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"zcnmashleu95"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"zcnmashleu95"},"content":"2. Download the latest version of `Duke`.","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"## Features ","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"zcnmashleu95"},"content":"Program designed for someone who are avid keyboarders,  for Single User use. ","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"zcnmashleu95"},"content":"### Load application: `java -jar duke.jar`","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"Load application and all records from previous session (if any) inside the JustBook application.","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `java -jar duke.jar`","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"zcnmashleu95"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"zcnmashleu95"},"content":"`java -jar duke.jar`","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"zcnmashleu95"},"content":"### Adding a generic task: `[description]`","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"zcnmashleu95"},"content":"Adds a generic task","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `[description]`","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"zcnmashleu95"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"zcnmashleu95"},"content":"`running`","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"zcnmashleu95"},"content":"### Adding a ToDo task: `todo [description]`","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"zcnmashleu95"},"content":"Adds a Todo task","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `todo [description]`","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"zcnmashleu95"},"content":"`todo running`","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"zcnmashleu95"},"content":"### Adding a Deadline task: `deadline [description] /by [Date and Time]`","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"zcnmashleu95"},"content":"Adds a Deadline task with a by Date","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `deadline [description] /by [Date and Time]`","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"zcnmashleu95"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"zcnmashleu95"},"content":"`deadline school homework /by 20/12/2020 10:10:10`","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"zcnmashleu95"},"content":"### Adding an Event task: `event [description] /at [Date and Time] to [Time]`","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"zcnmashleu95"},"content":"Adds an Event task with a starting and ending date.","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `event [description] /at [Date and Time] to [Time]`","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"zcnmashleu95"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"zcnmashleu95"},"content":"`event birthday dinner /at 10/12/2020 11:11:11 to 20:20:20`","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"zcnmashleu95"},"content":"### Reschedule a Deadline: `reschedule [option number] /new [Date and time]`","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"zcnmashleu95"},"content":"Rescheduling a deadline","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `reschedule [option number] /new [Date and time]`","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"zcnmashleu95"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"zcnmashleu95"},"content":"`reschedule 2 /new 18/12/2020 23:59:59`","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"zcnmashleu95"},"content":"### Reschedule an Event: `reschedule [option number] /new [Date and time] to [Time]`","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"zcnmashleu95"},"content":"Rescheduling an Event with start and end time","lastModifiedDate":"2022-02-20"},{"lineNumber":56,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `reschedule [option number] /new [Date and time] to [Time]`","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"zcnmashleu95"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"zcnmashleu95"},"content":"`reschedule 3 /new 11/12/2020 18:30:00 to 22:13:14`","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":60,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":61,"author":{"gitId":"zcnmashleu95"},"content":"###  Changing a task to done: `done [option number]`","lastModifiedDate":"2022-02-20"},{"lineNumber":62,"author":{"gitId":"zcnmashleu95"},"content":"Changing a task to done","lastModifiedDate":"2022-02-20"},{"lineNumber":63,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `done [option number]`","lastModifiedDate":"2022-02-20"},{"lineNumber":64,"author":{"gitId":"zcnmashleu95"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"zcnmashleu95"},"content":"`done 1`","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":67,"author":{"gitId":"zcnmashleu95"},"content":"### Changing a task to undone: `undone [option number]`","lastModifiedDate":"2022-02-20"},{"lineNumber":68,"author":{"gitId":"zcnmashleu95"},"content":"Changing a task to undone","lastModifiedDate":"2022-02-20"},{"lineNumber":69,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `undone [option number]`","lastModifiedDate":"2022-02-20"},{"lineNumber":70,"author":{"gitId":"zcnmashleu95"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"zcnmashleu95"},"content":"`undone 1`","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":73,"author":{"gitId":"zcnmashleu95"},"content":"### Deleting a task from the list:  `delete [option number]`","lastModifiedDate":"2022-02-20"},{"lineNumber":74,"author":{"gitId":"zcnmashleu95"},"content":"Deleting a task from the list","lastModifiedDate":"2022-02-20"},{"lineNumber":75,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `delete [option number]`","lastModifiedDate":"2022-02-20"},{"lineNumber":76,"author":{"gitId":"zcnmashleu95"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"zcnmashleu95"},"content":"`delete 1`","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":79,"author":{"gitId":"zcnmashleu95"},"content":"### Clearing the task list: `/clear`","lastModifiedDate":"2022-02-20"},{"lineNumber":80,"author":{"gitId":"zcnmashleu95"},"content":"Clearing the task list","lastModifiedDate":"2022-02-20"},{"lineNumber":81,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `/clear`","lastModifiedDate":"2022-02-20"},{"lineNumber":82,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":83,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"zcnmashleu95"},"content":"### To close this application: `bye`","lastModifiedDate":"2022-02-20"},{"lineNumber":85,"author":{"gitId":"zcnmashleu95"},"content":"To save and close the application","lastModifiedDate":"2022-02-20"},{"lineNumber":86,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `bye`","lastModifiedDate":"2022-02-20"},{"lineNumber":87,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":88,"author":{"gitId":"zcnmashleu95"},"content":"### To find tasks in the list containing a keyword: `find [keyword]`","lastModifiedDate":"2022-02-20"},{"lineNumber":89,"author":{"gitId":"zcnmashleu95"},"content":"To search for a specific keyword","lastModifiedDate":"2022-02-20"},{"lineNumber":90,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `find [keyword]`","lastModifiedDate":"2022-02-20"},{"lineNumber":91,"author":{"gitId":"zcnmashleu95"},"content":"\u003cins\u003e**_Example of usage_**\u003cins\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"zcnmashleu95"},"content":"`find home`","lastModifiedDate":"2022-02-27"},{"lineNumber":93,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":94,"author":{"gitId":"zcnmashleu95"},"content":"### To print the list of tasks:  `list`","lastModifiedDate":"2022-02-20"},{"lineNumber":95,"author":{"gitId":"zcnmashleu95"},"content":"To have Duke print the list of tasks","lastModifiedDate":"2022-02-20"},{"lineNumber":96,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `list`","lastModifiedDate":"2022-02-20"},{"lineNumber":97,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":98,"author":{"gitId":"zcnmashleu95"},"content":"### To print the list of commands available:`/help`","lastModifiedDate":"2022-02-20"},{"lineNumber":99,"author":{"gitId":"zcnmashleu95"},"content":"To print the list of commands available","lastModifiedDate":"2022-02-20"},{"lineNumber":100,"author":{"gitId":"zcnmashleu95"},"content":"**Format**: `/help`","lastModifiedDate":"2022-02-20"},{"lineNumber":101,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":102,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":103,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":104,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":105,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":106,"author":{"gitId":"zcnmashleu95"},"content":"## Command Summary","lastModifiedDate":"2022-02-20"},{"lineNumber":107,"author":{"gitId":"zcnmashleu95"},"content":"[ \u0027Cheat Sheet\u0027 of **CLI COMMANDS** - _case-sensitive_ ]","lastModifiedDate":"2022-02-20"},{"lineNumber":108,"author":{"gitId":"zcnmashleu95"},"content":"###Commands:","lastModifiedDate":"2022-02-20"},{"lineNumber":109,"author":{"gitId":"zcnmashleu95"},"content":"The commands for the respective features are after the semi-colon\":\"","lastModifiedDate":"2022-02-20"},{"lineNumber":110,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":111,"author":{"gitId":"zcnmashleu95"},"content":"1. Adding a generic task: `[description]`","lastModifiedDate":"2022-02-20"},{"lineNumber":112,"author":{"gitId":"zcnmashleu95"},"content":"2. Adding a ToDo task: `todo [description]`","lastModifiedDate":"2022-02-20"},{"lineNumber":113,"author":{"gitId":"zcnmashleu95"},"content":"3. Adding a Deadline task: `deadline [description] /by [Date and Time]`","lastModifiedDate":"2022-02-20"},{"lineNumber":114,"author":{"gitId":"zcnmashleu95"},"content":"4. Adding an Event task: `event [description] /at [Date and Time] to [Time]`","lastModifiedDate":"2022-02-20"},{"lineNumber":115,"author":{"gitId":"zcnmashleu95"},"content":"5. Reschedule a Deadline: `reschedule [option number] /new [Date and time]`","lastModifiedDate":"2022-02-20"},{"lineNumber":116,"author":{"gitId":"zcnmashleu95"},"content":"6. Reschedule an Event: `reschedule [option number] /new [Date and time] to [Time]`","lastModifiedDate":"2022-02-20"},{"lineNumber":117,"author":{"gitId":"zcnmashleu95"},"content":"7. Changing a task to done: `done [option number]`","lastModifiedDate":"2022-02-20"},{"lineNumber":118,"author":{"gitId":"zcnmashleu95"},"content":"8. Changing a task to undone: `undone [option number]`","lastModifiedDate":"2022-02-20"},{"lineNumber":119,"author":{"gitId":"zcnmashleu95"},"content":"9. Deleting a task from the list: `delete [option number]`","lastModifiedDate":"2022-02-20"},{"lineNumber":120,"author":{"gitId":"zcnmashleu95"},"content":"10. Clearing the task list: `/clear`","lastModifiedDate":"2022-02-20"},{"lineNumber":121,"author":{"gitId":"zcnmashleu95"},"content":"11. To close this application: `bye`","lastModifiedDate":"2022-02-20"},{"lineNumber":122,"author":{"gitId":"zcnmashleu95"},"content":"12. To find tasks in the list containing a keyword: `find [keyword]`","lastModifiedDate":"2022-02-20"},{"lineNumber":123,"author":{"gitId":"zcnmashleu95"},"content":"13. To print the list of tasks: `list`","lastModifiedDate":"2022-02-20"},{"lineNumber":124,"author":{"gitId":"zcnmashleu95"},"content":"14. To print the list of commands available: `/help`","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"zcnmashleu95":124}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"@rem","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"zcnmashleu95"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"zcnmashleu95"},"content":"@rem","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"@rem","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"zcnmashleu95"},"content":"@rem","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"zcnmashleu95"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"zcnmashleu95"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"@rem","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"zcnmashleu95"},"content":"@rem","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"zcnmashleu95"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"zcnmashleu95"},"content":"@rem","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"zcnmashleu95"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"zcnmashleu95"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"zcnmashleu95"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-02-13"},{"lineNumber":26,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":27,"author":{"gitId":"zcnmashleu95"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-02-13"},{"lineNumber":28,"author":{"gitId":"zcnmashleu95"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-02-13"},{"lineNumber":29,"author":{"gitId":"zcnmashleu95"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"zcnmashleu95"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-02-13"},{"lineNumber":31,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":32,"author":{"gitId":"zcnmashleu95"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-02-13"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-02-13"},{"lineNumber":34,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":35,"author":{"gitId":"zcnmashleu95"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-02-13"},{"lineNumber":36,"author":{"gitId":"zcnmashleu95"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-02-13"},{"lineNumber":37,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"zcnmashleu95"},"content":"@rem Find java.exe","lastModifiedDate":"2022-02-13"},{"lineNumber":39,"author":{"gitId":"zcnmashleu95"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":41,"author":{"gitId":"zcnmashleu95"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-02-13"},{"lineNumber":42,"author":{"gitId":"zcnmashleu95"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-02-13"},{"lineNumber":43,"author":{"gitId":"zcnmashleu95"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-02-13"},{"lineNumber":44,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":45,"author":{"gitId":"zcnmashleu95"},"content":"echo.","lastModifiedDate":"2022-02-13"},{"lineNumber":46,"author":{"gitId":"zcnmashleu95"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-02-13"},{"lineNumber":47,"author":{"gitId":"zcnmashleu95"},"content":"echo.","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"zcnmashleu95"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-02-13"},{"lineNumber":49,"author":{"gitId":"zcnmashleu95"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-02-13"},{"lineNumber":50,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":51,"author":{"gitId":"zcnmashleu95"},"content":"goto fail","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":53,"author":{"gitId":"zcnmashleu95"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"zcnmashleu95"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"zcnmashleu95"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-02-13"},{"lineNumber":56,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"zcnmashleu95"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-02-13"},{"lineNumber":58,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":59,"author":{"gitId":"zcnmashleu95"},"content":"echo.","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"zcnmashleu95"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"zcnmashleu95"},"content":"echo.","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"zcnmashleu95"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-02-13"},{"lineNumber":63,"author":{"gitId":"zcnmashleu95"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":65,"author":{"gitId":"zcnmashleu95"},"content":"goto fail","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"zcnmashleu95"},"content":":init","lastModifiedDate":"2022-02-13"},{"lineNumber":68,"author":{"gitId":"zcnmashleu95"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"zcnmashleu95"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"zcnmashleu95"},"content":":win9xME_args","lastModifiedDate":"2022-02-13"},{"lineNumber":73,"author":{"gitId":"zcnmashleu95"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"zcnmashleu95"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-02-13"},{"lineNumber":75,"author":{"gitId":"zcnmashleu95"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-02-13"},{"lineNumber":76,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":77,"author":{"gitId":"zcnmashleu95"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-02-13"},{"lineNumber":78,"author":{"gitId":"zcnmashleu95"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-02-13"},{"lineNumber":79,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":80,"author":{"gitId":"zcnmashleu95"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-02-13"},{"lineNumber":81,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":82,"author":{"gitId":"zcnmashleu95"},"content":":execute","lastModifiedDate":"2022-02-13"},{"lineNumber":83,"author":{"gitId":"zcnmashleu95"},"content":"@rem Setup the command line","lastModifiedDate":"2022-02-13"},{"lineNumber":84,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":85,"author":{"gitId":"zcnmashleu95"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-02-13"},{"lineNumber":86,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":87,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":88,"author":{"gitId":"zcnmashleu95"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-02-13"},{"lineNumber":89,"author":{"gitId":"zcnmashleu95"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-02-13"},{"lineNumber":90,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":91,"author":{"gitId":"zcnmashleu95"},"content":":end","lastModifiedDate":"2022-02-13"},{"lineNumber":92,"author":{"gitId":"zcnmashleu95"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-02-13"},{"lineNumber":93,"author":{"gitId":"zcnmashleu95"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-02-13"},{"lineNumber":94,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":95,"author":{"gitId":"zcnmashleu95"},"content":":fail","lastModifiedDate":"2022-02-13"},{"lineNumber":96,"author":{"gitId":"zcnmashleu95"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-02-13"},{"lineNumber":97,"author":{"gitId":"zcnmashleu95"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-02-13"},{"lineNumber":98,"author":{"gitId":"zcnmashleu95"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-02-13"},{"lineNumber":99,"author":{"gitId":"zcnmashleu95"},"content":"exit /b 1","lastModifiedDate":"2022-02-13"},{"lineNumber":100,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":101,"author":{"gitId":"zcnmashleu95"},"content":":mainEnd","lastModifiedDate":"2022-02-13"},{"lineNumber":102,"author":{"gitId":"zcnmashleu95"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-02-13"},{"lineNumber":103,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":104,"author":{"gitId":"zcnmashleu95"},"content":":omega","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"zcnmashleu95":104}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"    private Label text;","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"zcnmashleu95"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"zcnmashleu95"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"zcnmashleu95"},"content":"        text \u003d l;","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"zcnmashleu95"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"zcnmashleu95"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-02-20"},{"lineNumber":24,"author":{"gitId":"zcnmashleu95"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"zcnmashleu95"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"zcnmashleu95"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"zcnmashleu95"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2022-02-20"},{"lineNumber":29,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"zcnmashleu95"},"content":"    private void flip() {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"zcnmashleu95"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"zcnmashleu95"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"zcnmashleu95"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"zcnmashleu95"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"zcnmashleu95"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"zcnmashleu95"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"zcnmashleu95"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"zcnmashleu95"},"content":"        db.flip();","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"zcnmashleu95"},"content":"        return db;","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"zcnmashleu95"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"zcnmashleu95":49}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":2,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import commands.Command;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-19"},{"lineNumber":9,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-19"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":22,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Individual Features:","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"//Better Search - e.g., find items even if the keyword matches the item only partially.","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"// Snooze - Provide a way to easily snooze/postpone/reschedule tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"// \u0027Do within a period\u0027 task","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"zcnmashleu95"},"content":"// - Provide support for managing tasks that need to be done within a certain period","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"zcnmashleu95"},"content":"// e.g., collect certificate between Jan 15 and 25th.","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"zcnmashleu95"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-02-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"zcnmashleu95"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"zcnmashleu95"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"zcnmashleu95"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"zcnmashleu95"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-20"},{"lineNumber":49,"author":{"gitId":"zcnmashleu95"},"content":"    private Scene scene;","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"zcnmashleu95"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"zcnmashleu95"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"zcnmashleu95"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"zcnmashleu95"},"content":"    Command co;","lastModifiedDate":"2022-02-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Used to create a new Duke Instance. Initialise the ui,storage and tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * tasks will load from the storage. If there is an error, it will initialise on its own.","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"zcnmashleu95"},"content":"     * @throws IOException throws IOException due to incorrect input","lastModifiedDate":"2022-02-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"zcnmashleu95"},"content":"    /*","lastModifiedDate":"2022-02-19"},{"lineNumber":64,"author":{"gitId":"zcnmashleu95"},"content":"    public Duke() throws IOException {","lastModifiedDate":"2022-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"zcnmashleu95"},"content":"    */","lastModifiedDate":"2022-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Used to keep the Duke Chat bot running. Scan for input then Parse the input into a command","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Afterwards, execute the command. The process will keep running until the user types \"bye\"","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"zcnmashleu95"},"content":"     * @throws IOException throws IOException due to incorrect input","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":76,"author":{"gitId":"zcnmashleu95"},"content":"    /*","lastModifiedDate":"2022-02-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void run() throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ui.printIntro();","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        while (isRunning) {","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ui.printBye();","lastModifiedDate":"2022-02-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":90,"author":{"gitId":"zcnmashleu95"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":91,"author":{"gitId":"zcnmashleu95"},"content":"    @Override","lastModifiedDate":"2022-02-20"},{"lineNumber":92,"author":{"gitId":"zcnmashleu95"},"content":"    public void start(Stage stage) throws IOException {","lastModifiedDate":"2022-02-20"},{"lineNumber":93,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":94,"author":{"gitId":"zcnmashleu95"},"content":"        String filePath \u003d \"data/tasks.txt\";","lastModifiedDate":"2022-02-20"},{"lineNumber":95,"author":{"gitId":"zcnmashleu95"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-02-20"},{"lineNumber":96,"author":{"gitId":"zcnmashleu95"},"content":"        storage \u003d new Storage(filePath, ui);","lastModifiedDate":"2022-02-27"},{"lineNumber":97,"author":{"gitId":"zcnmashleu95"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-02-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"zcnmashleu95"},"content":"            tasks \u003d new TaskList(storage.load(), ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"zcnmashleu95"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-02-20"},{"lineNumber":102,"author":{"gitId":"zcnmashleu95"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":105,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":106,"author":{"gitId":"zcnmashleu95"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-02-20"},{"lineNumber":107,"author":{"gitId":"zcnmashleu95"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-02-20"},{"lineNumber":108,"author":{"gitId":"zcnmashleu95"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-02-20"},{"lineNumber":109,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":110,"author":{"gitId":"zcnmashleu95"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-02-20"},{"lineNumber":111,"author":{"gitId":"zcnmashleu95"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-02-20"},{"lineNumber":112,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":113,"author":{"gitId":"zcnmashleu95"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-02-20"},{"lineNumber":114,"author":{"gitId":"zcnmashleu95"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-02-20"},{"lineNumber":115,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":116,"author":{"gitId":"zcnmashleu95"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-02-20"},{"lineNumber":117,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":118,"author":{"gitId":"zcnmashleu95"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-20"},{"lineNumber":119,"author":{"gitId":"zcnmashleu95"},"content":"        stage.show();","lastModifiedDate":"2022-02-20"},{"lineNumber":120,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":121,"author":{"gitId":"zcnmashleu95"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-20"},{"lineNumber":122,"author":{"gitId":"zcnmashleu95"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-02-20"},{"lineNumber":123,"author":{"gitId":"zcnmashleu95"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-02-20"},{"lineNumber":124,"author":{"gitId":"zcnmashleu95"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2022-02-20"},{"lineNumber":125,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":126,"author":{"gitId":"zcnmashleu95"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2022-02-20"},{"lineNumber":127,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":128,"author":{"gitId":"zcnmashleu95"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2022-02-20"},{"lineNumber":129,"author":{"gitId":"zcnmashleu95"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-02-20"},{"lineNumber":130,"author":{"gitId":"zcnmashleu95"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-02-20"},{"lineNumber":131,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":132,"author":{"gitId":"zcnmashleu95"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-02-20"},{"lineNumber":133,"author":{"gitId":"zcnmashleu95"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-02-20"},{"lineNumber":134,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":135,"author":{"gitId":"zcnmashleu95"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-02-20"},{"lineNumber":136,"author":{"gitId":"zcnmashleu95"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-02-20"},{"lineNumber":137,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":138,"author":{"gitId":"zcnmashleu95"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2022-02-20"},{"lineNumber":139,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":140,"author":{"gitId":"zcnmashleu95"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-02-20"},{"lineNumber":141,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":142,"author":{"gitId":"zcnmashleu95"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-02-20"},{"lineNumber":143,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":144,"author":{"gitId":"zcnmashleu95"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-20"},{"lineNumber":145,"author":{"gitId":"zcnmashleu95"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-20"},{"lineNumber":146,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":147,"author":{"gitId":"zcnmashleu95"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-20"},{"lineNumber":148,"author":{"gitId":"zcnmashleu95"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-20"},{"lineNumber":149,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":150,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":151,"author":{"gitId":"zcnmashleu95"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2022-02-20"},{"lineNumber":152,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":153,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":154,"author":{"gitId":"zcnmashleu95"},"content":"        Label dukeIntro \u003d new Label(ui.printIntro());","lastModifiedDate":"2022-02-20"},{"lineNumber":155,"author":{"gitId":"zcnmashleu95"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-20"},{"lineNumber":156,"author":{"gitId":"zcnmashleu95"},"content":"                DialogBox.getDukeDialog(dukeIntro, new ImageView(duke))","lastModifiedDate":"2022-02-20"},{"lineNumber":157,"author":{"gitId":"zcnmashleu95"},"content":"        );","lastModifiedDate":"2022-02-20"},{"lineNumber":158,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":159,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":160,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":161,"author":{"gitId":"zcnmashleu95"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-20"},{"lineNumber":162,"author":{"gitId":"zcnmashleu95"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-20"},{"lineNumber":163,"author":{"gitId":"zcnmashleu95"},"content":"            if (isRunning \u003d\u003d false) {","lastModifiedDate":"2022-02-20"},{"lineNumber":164,"author":{"gitId":"zcnmashleu95"},"content":"                Platform.exit();","lastModifiedDate":"2022-02-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"zcnmashleu95"},"content":"        });","lastModifiedDate":"2022-02-20"},{"lineNumber":167,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":168,"author":{"gitId":"zcnmashleu95"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-20"},{"lineNumber":169,"author":{"gitId":"zcnmashleu95"},"content":"            handleUserInput();","lastModifiedDate":"2022-02-20"},{"lineNumber":170,"author":{"gitId":"zcnmashleu95"},"content":"            if (isRunning \u003d\u003d false) {","lastModifiedDate":"2022-02-20"},{"lineNumber":171,"author":{"gitId":"zcnmashleu95"},"content":"                Platform.exit();","lastModifiedDate":"2022-02-20"},{"lineNumber":172,"author":{"gitId":"zcnmashleu95"},"content":"            }","lastModifiedDate":"2022-02-20"},{"lineNumber":173,"author":{"gitId":"zcnmashleu95"},"content":"        });","lastModifiedDate":"2022-02-20"},{"lineNumber":174,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":175,"author":{"gitId":"zcnmashleu95"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-02-20"},{"lineNumber":176,"author":{"gitId":"zcnmashleu95"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-02-20"},{"lineNumber":177,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"zcnmashleu95"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":181,"author":{"gitId":"zcnmashleu95"},"content":"     * Iteration 1:","lastModifiedDate":"2022-02-20"},{"lineNumber":182,"author":{"gitId":"zcnmashleu95"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2022-02-20"},{"lineNumber":183,"author":{"gitId":"zcnmashleu95"},"content":"     * @param text String containing text to add","lastModifiedDate":"2022-02-20"},{"lineNumber":184,"author":{"gitId":"zcnmashleu95"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2022-02-20"},{"lineNumber":185,"author":{"gitId":"zcnmashleu95"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":186,"author":{"gitId":"zcnmashleu95"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-02-20"},{"lineNumber":187,"author":{"gitId":"zcnmashleu95"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-02-20"},{"lineNumber":188,"author":{"gitId":"zcnmashleu95"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-02-20"},{"lineNumber":189,"author":{"gitId":"zcnmashleu95"},"content":"        return textToAdd;","lastModifiedDate":"2022-02-20"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":191,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":192,"author":{"gitId":"zcnmashleu95"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-20"},{"lineNumber":193,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":194,"author":{"gitId":"zcnmashleu95"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-20"},{"lineNumber":195,"author":{"gitId":"zcnmashleu95"},"content":"        Label userText \u003d new Label(input);","lastModifiedDate":"2022-02-20"},{"lineNumber":196,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":197,"author":{"gitId":"zcnmashleu95"},"content":"        Label dukeText \u003d new Label(getResponse(input));","lastModifiedDate":"2022-02-20"},{"lineNumber":198,"author":{"gitId":"zcnmashleu95"},"content":"        ui.clearMessages();","lastModifiedDate":"2022-02-20"},{"lineNumber":199,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":200,"author":{"gitId":"zcnmashleu95"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-20"},{"lineNumber":201,"author":{"gitId":"zcnmashleu95"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2022-02-20"},{"lineNumber":202,"author":{"gitId":"zcnmashleu95"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2022-02-20"},{"lineNumber":203,"author":{"gitId":"zcnmashleu95"},"content":"        );","lastModifiedDate":"2022-02-20"},{"lineNumber":204,"author":{"gitId":"zcnmashleu95"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-20"},{"lineNumber":205,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":206,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":207,"author":{"gitId":"zcnmashleu95"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":208,"author":{"gitId":"zcnmashleu95"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-02-20"},{"lineNumber":209,"author":{"gitId":"zcnmashleu95"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-02-20"},{"lineNumber":210,"author":{"gitId":"zcnmashleu95"},"content":"     */","lastModifiedDate":"2022-02-20"},{"lineNumber":211,"author":{"gitId":"zcnmashleu95"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2022-02-20"},{"lineNumber":212,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":213,"author":{"gitId":"zcnmashleu95"},"content":"        try {","lastModifiedDate":"2022-02-20"},{"lineNumber":214,"author":{"gitId":"zcnmashleu95"},"content":"            co \u003d parser.parse(input);","lastModifiedDate":"2022-02-20"},{"lineNumber":215,"author":{"gitId":"zcnmashleu95"},"content":"            co.execute(tasks, ui, storage);","lastModifiedDate":"2022-02-20"},{"lineNumber":216,"author":{"gitId":"zcnmashleu95"},"content":"            isRunning \u003d co.isRunning();","lastModifiedDate":"2022-02-20"},{"lineNumber":217,"author":{"gitId":"zcnmashleu95"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2022-02-20"},{"lineNumber":218,"author":{"gitId":"zcnmashleu95"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-20"},{"lineNumber":219,"author":{"gitId":"zcnmashleu95"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":220,"author":{"gitId":"zcnmashleu95"},"content":"        return \"Duke Replied:\\n\" + ui.getMessages();","lastModifiedDate":"2022-02-20"},{"lineNumber":221,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":222,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":53,"zcnmashleu95":170}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zcnmashleu95"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-19"},{"lineNumber":2,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":3,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"public class Launcher {","lastModifiedDate":"2022-02-19"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-19"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2022-02-19"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"        //new Duke(\"data/tasks_list.txt\").run();","lastModifiedDate":"2022-02-19"},{"lineNumber":9,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2022-02-19"},{"lineNumber":10,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"}","lastModifiedDate":"2022-02-19"}],"authorContributionMap":{"zcnmashleu95":11}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * This represents the AddCommand class which adds a specific task to the task list.","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    String taskType;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    String taskDescription;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    String taskSecondPart;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"     * This is a constructor for the AddCommand.","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param type        This indicates the type or subclass of Task","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param description This describes the activity of the Task","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param secPart     This is mainly for deadlines or events whereby they have a /by or /at. The Date and Time.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public AddCommand(String type, String description, String secPart) {","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.taskType \u003d type;","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.taskDescription \u003d description;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.taskSecondPart \u003d secPart;","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * This executes the AddCommand. It will add the Task to the TaskList by calling the","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * addToList method.","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param tasks   This is the Task List that contains the list of tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param ui      This is the ui, to be used for scanning and printing","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param storage This is the storage, used to read and write over the file.","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DukeException When the taskType is not a Task or its subclasses.","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"zcnmashleu95"},"content":"        tasks.addTask(taskType, taskDescription, taskSecondPart, ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        int size \u003d tasks.getSize();","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Got it. I\u0027ve added this task:\"","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"zcnmashleu95"},"content":"                + System.lineSeparator() + tasks.get(size - 1).toString());","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(tasks.printNumberOfTasks());","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"zcnmashleu95"},"content":"    public static void printHelp(Ui ui) {","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Adding a generic task: [description]\");","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Adding a ToDo task: todo [description]\");","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Adding a Deadline task: deadline [description] /by [Date and Time]\");","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Adding an Event task: event [description] /at [Date and Time] to [Time]\");","lastModifiedDate":"2022-02-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this.taskType;","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this.taskDescription;","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String getTaskSecondPart() {","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this.taskSecondPart;","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":57,"zcnmashleu95":11}},{"path":"src/main/java/commands/ChangeDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * This represents the change done command. It is used to change the task from the task list to its","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * done \"state\".","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ChangeDoneCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private int option \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * This is the constructor of the ChangeDoneCommand.","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param option indicates the Task option that the user wants to change","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public ChangeDoneCommand(int option, boolean isDone) {","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.option \u003d option;","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * This executes the DoneCommand.","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param tasks   This is the Task List that contains the list of tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param ui      This is the ui, to be used for scanning and printing","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param storage This is the storage, used to read and write over the file.","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws DukeException when option is not within the range of 1 and TaskList Size","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            String doneLevel;","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            tasks.get(option - 1).changeDoneTo(isDone);","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            if (isDone) {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                doneLevel \u003d \" done:\";","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                doneLevel \u003d \" not done:\";","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"zcnmashleu95"},"content":"            ui.storeMessage(System.lineSeparator() + \"Nice! I\u0027ve marked this task as\" + doneLevel","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"zcnmashleu95"},"content":"                    + System.lineSeparator() + tasks.get(option - 1).toString());","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Input option for ChangeDone Command invalid\");","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return;","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"zcnmashleu95"},"content":"    public static void printHelp(Ui ui) {","lastModifiedDate":"2022-02-20"},{"lineNumber":58,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Changing a task to done: done [option number]\");","lastModifiedDate":"2022-02-20"},{"lineNumber":59,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Changing a task to undone: undone [option number]\");","lastModifiedDate":"2022-02-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":55,"zcnmashleu95":6}},{"path":"src/main/java/commands/ClearListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ClearListCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public ClearListCommand() {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Clearing all tasks in the tasklist.\");","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        tasks.clearAllTasks();","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        tasks.printList();","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"zcnmashleu95"},"content":"    public static void printHelp(Ui ui) {","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Clearing the task list: /clear\");","lastModifiedDate":"2022-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":21,"zcnmashleu95":3}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is the abstract parent Command Class.","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    protected static boolean running \u003d true;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * This is the abstract method for execute.","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tasks   This is the Task List that contains the list of tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param ui      This is the ui, to be used for scanning and printing","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param storage This is the storage, used to read and write over the file.","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * This method is an accessor. It returns the boolean value of running.","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @return running This indicates if Duke is to continue to run or not","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean isRunning() {","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return this.running;","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":34,"zcnmashleu95":1}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * This represents the command to delete a specific task from the task list.","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    int option \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This is the constructor for the DeleteCommand.","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param option This indicates the Task that the user wants to delete","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand(int option) {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.option \u003d option;","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * This executes the DeleteCommand. It will call the deleteTask method.","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param tasks   This is the Task List that contains the list of tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param ui      This is the ui, to be used for scanning and printing","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param storage This is the storage, used to read and write over the file.","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"zcnmashleu95"},"content":"     * @throws DukeException throws IOException due to incorrect input","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            tasks.deleteTask(option - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Input option for Delete Command invalid.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tasks.printList();","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"zcnmashleu95"},"content":"    public static void printHelp(Ui ui) {","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Deleting a task from the list: delete [option number]\");","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":40,"zcnmashleu95":4}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * This represents the exit command. It is used to change the running boolean to false.","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Afterwards, during execution, it will write the tasks into the file.","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * This is the constructor for ExitCommand. It will change the running boolean to false.","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.running \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * This is the execution of the ExitCommand. It will write the tasks from the TaskList","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * to the storage.","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param tasks   This is the Task List that contains the list of tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param ui      This is the ui, to be used for scanning and printing","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param storage This is the storage, used to read and write over the file.","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assert (!running) : \"running should not be true at this stage. It should be false\";","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Executing Exit Command: Saving Task List to storage\");","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(storage.save(tasks));","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Finished saving Task List to storage\");","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"zcnmashleu95"},"content":"    public static void printHelp(Ui ui) {","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"To close this application: bye\");","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":36,"zcnmashleu95":6}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * This is to represent the FindCommand. It is used to find the tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * that contains a specific keyword","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    String keyword;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * This is the constructor for the FindCommand.","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param keyword This keyword is to be used for the searching afterwards during execution","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * This executes the FindCommand. It will call the findList method with the keyword.","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param tasks   This is the Task List that contains the list of tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param ui      This is the ui, to be used for scanning and printing","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param storage This is the storage, used to read and write over the file.","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(tasks.findList(keyword));","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"zcnmashleu95"},"content":"    public static void printHelp(Ui ui) {","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"To find tasks in the list containing a keyword: find [keyword]\");","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":38,"zcnmashleu95":3}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Inputs in commands (Input is described within the square brackets):\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"                + \"[description] is a string that describes the task.\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"zcnmashleu95"},"content":"                + \"[Date and Time] refers to the input date. It goes by the format \\\"dd/MM/yyyy HH:mm:ss\\\". \"","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"zcnmashleu95"},"content":"                + \"Eg. 02/12/20 10:10:10\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"zcnmashleu95"},"content":"                + \"[Time] refers to the Time format of \\\"HH:mm:ss\\\" \"","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"zcnmashleu95"},"content":"                + \"where they represent the hours, minutes and seconds\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"zcnmashleu95"},"content":"                + \"[option] refers to the option number. \"","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"zcnmashleu95"},"content":"                + \"The option number for each task can be viewed when the tasks are printed\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"zcnmashleu95"},"content":"                + \" as a list.(this can be seen by the command \\\"list\\\")\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"zcnmashleu95"},"content":"                + \"[keyword] refers to the phrase or word that you want to search for\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"zcnmashleu95"},"content":"                + \"\\n\"","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"zcnmashleu95"},"content":"                + \"The commands for the respective features are after the semi-colon\\\":\\\"\\n\");","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"zcnmashleu95"},"content":"        AddCommand.printHelp(ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"zcnmashleu95"},"content":"        RescheduleCommand.printHelp(ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"zcnmashleu95"},"content":"        ChangeDoneCommand.printHelp(ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"        DeleteCommand.printHelp(ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"zcnmashleu95"},"content":"        ClearListCommand.printHelp(ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"zcnmashleu95"},"content":"        ExitCommand.printHelp(ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"zcnmashleu95"},"content":"        FindCommand.printHelp(ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"zcnmashleu95"},"content":"        ListCommand.printHelp(ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":20,"zcnmashleu95":20}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * This represents the list command. It is meant for printing out a list","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * of tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This is the constructor for the ListCommand.","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public ListCommand() {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * This executes the ListCommand. It will call the printList method from the TaskList class.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param tasks   This is the list of Tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param ui      This is the ui, to be used for scanning and printing","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param storage This is the storage, used to read and write over the file.","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(tasks.printList());","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"zcnmashleu95"},"content":"    public static void printHelp(Ui ui) {","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"To print the list of tasks: list\");","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":31,"zcnmashleu95":4}},{"path":"src/main/java/commands/RescheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import tasks.Event;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class RescheduleCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    String newDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"    String newEndTime;","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    int option \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public RescheduleCommand(int option, String newDateTime) {","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.newDateTime \u003d newDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.option \u003d option;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            if (tasks.get(this.option - 1) instanceof Deadline) {","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"zcnmashleu95"},"content":"                ((Deadline) (tasks.get(this.option - 1))).rescheduleBy(this.newDateTime, ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"zcnmashleu95"},"content":"                ui.storeMessage(\"Rescheduled Date time: \" + tasks.get(this.option - 1).toString());","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            } else if (tasks.get(this.option - 1) instanceof Event) {","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"zcnmashleu95"},"content":"                ((Event) (tasks.get(this.option - 1))).rescheduleAt(this.newDateTime, ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":30,"author":{"gitId":"zcnmashleu95"},"content":"                ui.storeMessage(\"Rescheduled Date time: \" + tasks.get(this.option - 1).toString());","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                throw new DukeException(\"Error: You did not reschedule on a Deadline or Event\");","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Error: Input option for Reschedule command is invalid\");","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"zcnmashleu95"},"content":"    public static void printHelp(Ui ui) {","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Reschedule a Deadline: reschedule [option number] /new [Date and time]\");","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"zcnmashleu95"},"content":"        ui.storeMessage(\"Reschedule an Event: reschedule [option number] /new [Date and time] to [Time]\");","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":37,"zcnmashleu95":8}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package exceptions;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * This represents the DukeException, meant for exceptions that run in Duke.","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * It will return the error message to the ui for it to be printed.","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    String errorMessage;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"     * This is the constructor for DukeException.","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param errorMessage This is the error message for the specific exception when caught.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"zcnmashleu95"},"content":"     * This is an accessor for the error message of the exception.","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return this.errorMessage;","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"-":26,"zcnmashleu95":2}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package parser;//deals with making sense of the user command","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"import commands.AddCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"import commands.ChangeDoneCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"import commands.ClearListCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"import commands.Command;","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"zcnmashleu95"},"content":"import commands.ExitCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"zcnmashleu95"},"content":"import commands.FindCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"import commands.HelpCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"import commands.ListCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"import commands.RescheduleCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * This represents the parser. It parses the input from the ui. Depending on the input,","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * it will parse the respective command","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Parser {","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"zcnmashleu95"},"content":"     * Constructor for Parser.","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Parser() {","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * This parses the input gotten from the ui. This method will parse and return the appropriate Command.","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"     * @param input A string input.","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"zcnmashleu95"},"content":"     * @return Command Returns a command class for execution","lastModifiedDate":"2022-02-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws DukeException When the input for option number in various Commands is not a number or when the input","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *                       for Adding a new Task is incomplete.","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String secPart \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String keyword;","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        int option \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String commandWord \u003d input.stripLeading().split(\" \")[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assert !(commandWord.equals(null)) : \"commandWord should not be null\";","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (input.strip().equals(\"\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new DukeException(\"☹ OOPS!!! You did not enter any command\");","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case \"blah\":","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case \"list\":","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case \"/clear\":","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearListCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case \"/help\":","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case \"find\":","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            keyword \u003d input.replaceFirst(\"find\", \"\").trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case \"done\":","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                option \u003d Integer.parseInt(input.replaceFirst(\"done\", \"\").trim());","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                throw new DukeException(\"Error: Invalid option number, your input is not a number\");","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ChangeDoneCommand(option, true);","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case \"undone\":","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                option \u003d Integer.parseInt(input.replaceFirst(\"undone\", \"\").trim());","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                throw new DukeException(\"Error: Invalid option number, your input is not a number\");","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new ChangeDoneCommand(option, false);","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                option \u003d Integer.parseInt(input.replace(\"delete\", \"\").trim());","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                throw new DukeException(\"Error: Invalid option number, your input is not a number\");","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new DeleteCommand(option);","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        case \"reschedule\":","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            index \u003d input.indexOf(\"/new\");","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            secPart \u003d input.substring(index);","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            secPart \u003d secPart.replaceFirst(\"/new\", \"\").trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"zcnmashleu95"},"content":"                option \u003d Integer.parseInt(input.substring(0, index).replaceFirst(\"reschedule\",","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"zcnmashleu95"},"content":"                        \"\").trim());","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                throw new DukeException(\"Error: Invalid option number, your input is not a number\");","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return new RescheduleCommand(option, secPart);","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            description \u003d input.replaceFirst(\"todo\", \"\").trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return new AddCommand(\"todo\", description, secPart);","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        case \"event\":","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return parseAddCommandSpecialTask(commandWord, input);","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            description \u003d input;","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return new AddCommand(\"task\", description, secPart);","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static Command parseAddCommandSpecialTask(String taskType, String input) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String secPart \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String separator \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        case \"event\":","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            separator \u003d \"/at\";","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            separator \u003d \"/by\";","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Error: Incomplete Command for Add Task.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            index \u003d input.indexOf(separator);","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            secPart \u003d input.substring(index);","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            secPart \u003d secPart.replaceFirst(separator, \"\").trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            description \u003d input.substring(0, index);","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            description \u003d description.replaceFirst(taskType, \"\").trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            case \"event\":","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                throw new DukeException(\"Error: Incomplete Command for Add Event\");","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                throw new DukeException(\"Error: Incomplete Command for Add Deadline.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                throw new DukeException(\"Error: Incomplete Command for Adding a special task.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return new AddCommand(taskType, description, secPart);","lastModifiedDate":"2021-09-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":158,"zcnmashleu95":15}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import tasks.Event;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"zcnmashleu95"},"content":"import java.io.File;","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"zcnmashleu95"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * This represents the Files access. The various objects are used to access the file/directory","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * location for either writing or reading on the file.","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Storage {","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private File directory;","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"zcnmashleu95"},"content":"    private File fi;","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private String filePath;","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    //For reading files","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private FileReader fr;","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private BufferedReader br;","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private ArrayList\u003cString[]\u003e parsedFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * This is the constructor for the Storage Class.","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param filePath This is the filePath of the text file.","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"zcnmashleu95"},"content":"    public Storage(String filePath, Ui ui) throws IOException {","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.directory \u003d new File(\"data\");","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (this.directory.isDirectory() \u003d\u003d false || this.directory.exists() \u003d\u003d false) {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"zcnmashleu95"},"content":"            ui.storeMessage(\"Directory \\\"data\\\" is not found, creating a new one\");","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            this.directory.mkdir();","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"zcnmashleu95"},"content":"        this.fi \u003d new File(filePath);","lastModifiedDate":"2022-02-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"zcnmashleu95"},"content":"        if (this.fi.isFile() \u003d\u003d false || this.fi.exists() \u003d\u003d false) {","lastModifiedDate":"2022-02-18"},{"lineNumber":49,"author":{"gitId":"zcnmashleu95"},"content":"            ui.storeMessage(\"File \\\"duke.text\\\" is not found, creating a new one\");","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"zcnmashleu95"},"content":"            this.fi.createNewFile();","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * This is a mutator. It writes the Task List details into a file.","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param tasks This is the list of tasks that the user has entered.","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"zcnmashleu95"},"content":"    public String save(TaskList tasks) throws IOException {","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"zcnmashleu95"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        int size \u003d tasks.getSize();","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"zcnmashleu95"},"content":"            return (\"Task List is empty. Nothing to save.\");","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String text \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String firstPart;","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String secPart \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        int done \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            temp \u003d tasks.get(i).getClass().toString();","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            switch (temp) {","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            case \"class tasks.Task\":","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                firstPart \u003d \"O | \";","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            case \"class tasks.ToDo\":","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                firstPart \u003d \"T | \";","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            case \"class tasks.Deadline\":","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                firstPart \u003d \"D | \";","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                secPart \u003d \" | \" + ((Deadline) tasks.get(i)).getBy();","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            case \"class tasks.Event\":","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                firstPart \u003d \"E | \";","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                secPart \u003d \" | \" + ((Event) tasks.get(i)).getAt();","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"zcnmashleu95"},"content":"                reply \u003d reply + (\"Did not get Class from Task List:\" + tasks.get(i).toString());","lastModifiedDate":"2022-02-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            done \u003d (tasks.get(i).getIsDone()) ? 1 : 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            text \u003d firstPart + done + \" | \" + tasks.get(i).getDescription() + secPart;","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            fw.write(text + System.lineSeparator());","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            text \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            secPart \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        fw.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"zcnmashleu95"},"content":"        return reply;","lastModifiedDate":"2022-02-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * This is a mutator that loads the task lists from the file.","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * It will return a list of tasks in form of an ArrayList of Strings. These Strings will be used for","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * the initialisation of TaskList","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @return a list of tasks that are written as strings","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public ArrayList\u003cString[]\u003e load() throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"zcnmashleu95"},"content":"        this.fi \u003d new File(this.filePath);","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"zcnmashleu95"},"content":"        this.fr \u003d new FileReader(this.fi);","lastModifiedDate":"2022-02-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        this.br \u003d new BufferedReader(this.fr);","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        this.parsedFile \u003d new ArrayList\u003cString[]\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String line;","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        while ((line \u003d this.br.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            this.parsedFile.add(line.split(\" \\\\| \"));","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        this.fr.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return this.parsedFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":111,"zcnmashleu95":21}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * This represents a Deadline Task. It has a LocalDateTime by object.","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The \"by\" object will represent the time which the Deadline is supposed to finish.","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The local date time format is in \"YYYY","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private LocalDateTime by;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"zcnmashleu95"},"content":"     * This is a constructor for the Deadline class.","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param description This describe the task for the deadline","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param by          This represents the date and time of the deadline","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"zcnmashleu95"},"content":"    public Deadline(String description, String by, Ui ui) {","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            this.by \u003d LocalDateTime.now();","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"zcnmashleu95"},"content":"            ui.storeMessage(\"Invalid Date Time set for /by. It will be set to the current \"","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"zcnmashleu95"},"content":"                    + \"time. Format should be \\\"dd/MM/yyyy HH:mm:ss\\\" \");","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"zcnmashleu95"},"content":"     * This is an accessor of the \"by\" object which represents the date and time of the dateline.","lastModifiedDate":"2022-02-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the dateline of the task","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getBy() {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm:ss\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"zcnmashleu95"},"content":"    public void rescheduleBy(String by, Ui ui) {","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/M/yyyy HH:mm:ss\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.by \u003d LocalDateTime.now();","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"zcnmashleu95"},"content":"            ui.storeMessage(\"Invalid Date Time set for /by. It will be set to the current \"","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"zcnmashleu95"},"content":"                    + \"time. Format should be \\\"dd/MM/yyyy HH:mm:ss\\\" \");","lastModifiedDate":"2022-02-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * This converts the Deadline to a String object for printing.","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @return the deadline written as a String","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getBy() + \")\";","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"-":55,"zcnmashleu95":9}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This represents the Event Class. It includes a String at.","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * at will represent the destination or \"time\" for the task. Anything that the user","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * wants to input for it.","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    protected LocalTime end;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * This is a constructor for the Event Class.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param description This describes the activity of the event.","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param at          This indicates the time period for the event.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"zcnmashleu95"},"content":"    public Event(String description, String at, Ui ui) {","lastModifiedDate":"2022-02-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        int indexOfTo \u003d at.indexOf(\"to\");","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"zcnmashleu95"},"content":"            this.start \u003d LocalDateTime.parse(at.substring(0, indexOfTo).trim(),","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"zcnmashleu95"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"zcnmashleu95"},"content":"            this.end \u003d LocalTime.parse(at.substring(indexOfTo).replace(\"to\", \"\").trim(),","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"                    DateTimeFormatter.ofPattern(\"HH:mm:ss\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            this.start \u003d LocalDateTime.now();","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            this.end \u003d LocalTime.now();","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"zcnmashleu95"},"content":"            ui.storeMessage(\"Invalid Date Time was set. It will be set to the current \"","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"zcnmashleu95"},"content":"                    + \"time. Format should be \\\"dd/MM/yyyy HH:mm:ss to HH:mm:ss\\\" \");","lastModifiedDate":"2022-02-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } finally {","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (start.toLocalTime().compareTo(end) \u003e 0) {","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"zcnmashleu95"},"content":"                ui.storeMessage(\"Notification: For the added event, \"","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"zcnmashleu95"},"content":"                        + \"start time is after end time. The event task will still be added.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"zcnmashleu95"},"content":"     * This is a accessor for the object \"at\".","lastModifiedDate":"2022-02-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @return the location of the event.","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String getAt() {","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this.start.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm:ss\")) + \" to \"","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + this.end.format(DateTimeFormatter.ofPattern(\"HH:mm:ss\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * This converts the Event Object to a String for printing.","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the Event written as a String","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + getAt() + \")\";","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"zcnmashleu95"},"content":"    public void rescheduleAt(String at, Ui ui) {","lastModifiedDate":"2022-02-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        int indexOfTo \u003d at.indexOf(\"to\");","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"zcnmashleu95"},"content":"            this.start \u003d LocalDateTime.parse(at.substring(0, indexOfTo).trim(),","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"zcnmashleu95"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":73,"author":{"gitId":"zcnmashleu95"},"content":"            this.end \u003d LocalTime.parse(at.substring(indexOfTo).replace(\"to\",","lastModifiedDate":"2022-02-18"},{"lineNumber":74,"author":{"gitId":"zcnmashleu95"},"content":"                    \"\").trim(), DateTimeFormatter.ofPattern(\"HH:mm:ss\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            this.start \u003d LocalDateTime.now();","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            this.end \u003d LocalTime.now();","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"zcnmashleu95"},"content":"            ui.storeMessage(\"Invalid Date Time was set. It will be set to the current \"","lastModifiedDate":"2022-02-20"},{"lineNumber":79,"author":{"gitId":"zcnmashleu95"},"content":"                    + \"time. Format should be \\\"dd/MM/yyyy HH:mm:ss to HH:mm:ss\\\" \");","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        } finally {","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (start.toLocalTime().compareTo(end) \u003e 0) {","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"zcnmashleu95"},"content":"                ui.storeMessage(\"Notification: For the added event, start time is after end time. \"","lastModifiedDate":"2022-02-20"},{"lineNumber":83,"author":{"gitId":"zcnmashleu95"},"content":"                        + \"The event task will still be added.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"-":67,"zcnmashleu95":20}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Represents the Parent Class Task. It has a String for the description of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The boolean is meant to indicate if the task is done.","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * The cumulatedTasksAdded is meant to count total number of tasks added throughout the session","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    protected static int cumulatedTasksAdded \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"     * This is a constructor for a Task.","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param description This describes the activity of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        cumulatedTasksAdded++;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * This changes the isDone boolean to the parameter \"value\". Which is either true or false.","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * If true, it means the task is completed.","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param isDone This is the boolean value which indicates if the task is completed or not","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void changeDoneTo(boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"zcnmashleu95"},"content":"     * This is an accessor of the description.","lastModifiedDate":"2022-02-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the description of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * This is an accessor of the isDone boolean.","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @return if the task is done or not","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"zcnmashleu95"},"content":"     * This converts the Task to a String for printing.","lastModifiedDate":"2022-02-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @return the Task in the form of a String","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String symbol;","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            symbol \u003d \"+\";","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            symbol \u003d \"-\";","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return (\"[\" + symbol + \"] \" + getDescription());","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int getCumulatedTasksAdded() {","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return cumulatedTasksAdded;","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"-":77,"zcnmashleu95":3}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the Task List. It contains a list of tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * It has operations to add, delete, find and print the tasks from the list.","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class TaskList {","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * This is the constructor of the TaskList. It initialises the ArrayList for tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * This is another constructor of the TaskList. This constructor loads from","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * the storage file. It has been parsed to an ArrayList of strings for loading.","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param parsedFile This is the ArrayList of Strings","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DukeException This is thrown when the parsedFile does not follow the expected format","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *                       for the class Type section.","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"zcnmashleu95"},"content":"    public TaskList(ArrayList\u003cString[]\u003e parsedFile, Ui ui) throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        int size \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            size \u003d parsedFile.size();","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"zcnmashleu95"},"content":"            ui.storeMessage(\"Error: Null pointer from parsedFile in TaskList initialisation\");","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            switch (parsedFile.get(i)[0]) {","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            case \"O\":","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                this.tasks.add(new Task(parsedFile.get(i)[2]));","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            case \"T\":","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                this.tasks.add(new ToDo(parsedFile.get(i)[2]));","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            case \"D\":","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                try {","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    this.tasks.add(new Deadline(parsedFile.get(i)[2],","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"zcnmashleu95"},"content":"                            (LocalDateTime.parse(parsedFile.get(i)[3],","lastModifiedDate":"2022-02-18"},{"lineNumber":62,"author":{"gitId":"zcnmashleu95"},"content":"                                    DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm:ss\"))","lastModifiedDate":"2022-02-18"},{"lineNumber":63,"author":{"gitId":"zcnmashleu95"},"content":"                                    .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\"))), ui));","lastModifiedDate":"2022-02-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"zcnmashleu95"},"content":"                    ui.storeMessage(\"Timing for added deadline invalid,\" + \" using the time now\");","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    this.tasks.add(new Deadline(parsedFile.get(i)[2],","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"zcnmashleu95"},"content":"                            LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\")), ui));","lastModifiedDate":"2022-02-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            case \"E\":","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                try {","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                    int indexOfTo \u003d parsedFile.get(i)[3].indexOf(\" to \");","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    String start;","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    String end;","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                    end \u003d parsedFile.get(i)[3].substring(indexOfTo);","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                    start \u003d parsedFile.get(i)[3].substring(0, indexOfTo);","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"zcnmashleu95"},"content":"                    start \u003d (LocalDateTime.parse(start,","lastModifiedDate":"2022-02-18"},{"lineNumber":80,"author":{"gitId":"zcnmashleu95"},"content":"                            DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm:ss\"))","lastModifiedDate":"2022-02-18"},{"lineNumber":81,"author":{"gitId":"zcnmashleu95"},"content":"                            .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\")));","lastModifiedDate":"2022-02-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"zcnmashleu95"},"content":"                    this.tasks.add(new Event(parsedFile.get(i)[2], start + end, ui));","lastModifiedDate":"2022-02-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                } catch (DateTimeParseException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"zcnmashleu95"},"content":"                    ui.storeMessage(\"Timing for added event invalid,\"","lastModifiedDate":"2022-02-27"},{"lineNumber":87,"author":{"gitId":"zcnmashleu95"},"content":"                            + \" using the time now\");","lastModifiedDate":"2022-02-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                    this.tasks.add(new Event(parsedFile.get(i)[2],","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"zcnmashleu95"},"content":"                            LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"))","lastModifiedDate":"2022-02-18"},{"lineNumber":90,"author":{"gitId":"zcnmashleu95"},"content":"                                    + \" - \"","lastModifiedDate":"2022-02-18"},{"lineNumber":91,"author":{"gitId":"zcnmashleu95"},"content":"                                    + LocalTime.now().format(DateTimeFormatter.ofPattern(\"HH:mm\")), ui));","lastModifiedDate":"2022-02-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                throw new DukeException(\"Error: File did not show task format.\");","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            if (parsedFile.get(i)[1].equals(\"1\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                this.tasks.get(this.tasks.size() - 1).changeDoneTo(true);","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * This is used to get the size of the Task List.","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @return size of Task List","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"zcnmashleu95"},"content":"     * This is a getter for the task at the index of the tasklist.","lastModifiedDate":"2022-02-18"},{"lineNumber":120,"author":{"gitId":"zcnmashleu95"},"content":"     * @param index Starts from 0 till (size - 1).  Meant to indicate the Task\u0027s index to return.","lastModifiedDate":"2022-02-18"},{"lineNumber":121,"author":{"gitId":"zcnmashleu95"},"content":"     * @return Task at the specific index of the ArrayList.","lastModifiedDate":"2022-02-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Delete the Task from Task List at the specific index.","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @param index tarts from 0 till (size - 1).  Meant to indicate the Task\u0027s index to delete.","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * This is to add a Task to the Task List. The type of task will depend on the taskType parameter","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @param taskType    This is meant for the different task subclasses","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @param description This is meant for the description/activity of the task","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param secondPart  This is meant for Deadlines and Events tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @throws DukeException This happens when the taskType is not one of the subclasses.","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"zcnmashleu95"},"content":"    public void addTask(String taskType, String description, String secondPart, Ui ui) throws DukeException {","lastModifiedDate":"2022-02-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        case \"task\":","lastModifiedDate":"2021-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            this.tasks.add(new Task(description));","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            this.tasks.add(new ToDo(description));","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        case \"event\":","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"zcnmashleu95"},"content":"            this.tasks.add(new Event(description, secondPart, ui));","lastModifiedDate":"2022-02-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-21"},{"lineNumber":161,"author":{"gitId":"zcnmashleu95"},"content":"            this.tasks.add(new Deadline(description, secondPart, ui));","lastModifiedDate":"2022-02-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2021-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Error: Incorrect Task Type in addTask Method\");","lastModifiedDate":"2021-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":171,"author":{"gitId":"zcnmashleu95"},"content":"     * This is to find Tasks that contain the keyword from the Task List.","lastModifiedDate":"2022-02-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @param keyword This is the keyword which the Task List will search for containing the keyword","lastModifiedDate":"2021-09-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":175,"author":{"gitId":"zcnmashleu95"},"content":"    public String findList(String keyword) {","lastModifiedDate":"2022-02-20"},{"lineNumber":176,"author":{"gitId":"zcnmashleu95"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2022-02-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        int size \u003d this.tasks.size();","lastModifiedDate":"2021-09-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        int total \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String classType \u003d \"\";","lastModifiedDate":"2021-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        switch (keyword) {","lastModifiedDate":"2021-09-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        case \"Task\":","lastModifiedDate":"2021-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            classType \u003d Task.class.toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        case \"ToDo\":","lastModifiedDate":"2021-09-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            classType \u003d ToDo.class.toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        case \"Deadline\":","lastModifiedDate":"2021-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            classType \u003d Deadline.class.toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        case \"Event\":","lastModifiedDate":"2021-09-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            classType \u003d Event.class.toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2021-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            classType \u003d \"\";","lastModifiedDate":"2021-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        ;","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":198,"author":{"gitId":"zcnmashleu95"},"content":"        reply \u003d \"Tasks that contain the keyword \\\"\" + keyword + \"\\\":\\n\";","lastModifiedDate":"2022-02-20"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":201,"author":{"gitId":"zcnmashleu95"},"content":"            if (this.tasks.get(i).toString().contains(keyword)","lastModifiedDate":"2022-02-18"},{"lineNumber":202,"author":{"gitId":"zcnmashleu95"},"content":"                    || classType.equals(this.tasks.get(i).getClass().toString())) {","lastModifiedDate":"2022-02-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                total \u003d total + 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":204,"author":{"gitId":"zcnmashleu95"},"content":"                reply \u003d reply + (total) + \".\" + this.tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-02-20"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":208,"author":{"gitId":"zcnmashleu95"},"content":"        return reply;","lastModifiedDate":"2022-02-20"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":213,"author":{"gitId":"zcnmashleu95"},"content":"     * This prints the Tasks in the Task List.","lastModifiedDate":"2022-02-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":215,"author":{"gitId":"zcnmashleu95"},"content":"    public String printList() {","lastModifiedDate":"2022-02-20"},{"lineNumber":216,"author":{"gitId":"zcnmashleu95"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2022-02-20"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        int size \u003d this.tasks.size();","lastModifiedDate":"2021-09-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":219,"author":{"gitId":"zcnmashleu95"},"content":"            reply \u003d \"Task List is empty.\";","lastModifiedDate":"2022-02-20"},{"lineNumber":220,"author":{"gitId":"zcnmashleu95"},"content":"            return reply;","lastModifiedDate":"2022-02-20"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":223,"author":{"gitId":"zcnmashleu95"},"content":"        reply \u003d \"Task List:\\n\";","lastModifiedDate":"2022-02-20"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":225,"author":{"gitId":"zcnmashleu95"},"content":"            reply \u003d reply + (i + 1) + \".\" + this.tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2022-02-20"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":228,"author":{"gitId":"zcnmashleu95"},"content":"        return reply;","lastModifiedDate":"2022-02-20"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":233,"author":{"gitId":"zcnmashleu95"},"content":"     * This prints the total number of tasks in the task list.","lastModifiedDate":"2022-02-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":235,"author":{"gitId":"zcnmashleu95"},"content":"    public String printNumberOfTasks() {","lastModifiedDate":"2022-02-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        int total \u003d tasks.size();","lastModifiedDate":"2021-09-19"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        String ending;","lastModifiedDate":"2021-09-19"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        if (total !\u003d 1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            ending \u003d \" tasks in the list.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            ending \u003d \" task in the list\";","lastModifiedDate":"2021-09-19"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":244,"author":{"gitId":"zcnmashleu95"},"content":"        return (\"Now you have \" + total + ending);","lastModifiedDate":"2022-02-27"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * This clears all the tasks in the list.","lastModifiedDate":"2021-09-19"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public void clearAllTasks() {","lastModifiedDate":"2021-09-19"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        this.tasks.clear();","lastModifiedDate":"2021-09-19"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":213,"zcnmashleu95":42}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents the \"ToDo\" task.","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"     * This is the constructor for ToDo.","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param description This is the description/activity of the ToDo itself.","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"zcnmashleu95"},"content":"     * This converts the ToDo to a String that will be used for printing.","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return String This returns the ToDo in the form of a string.","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"-":25,"zcnmashleu95":2}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"zcnmashleu95"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"import java.util.List;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents the Ui. It is meant to scan for new input and","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * print the various Strings.","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Ui {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public String input;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Scanner scan;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"    List\u003cString\u003e messages;","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * This is the constructor for Ui. It initialises the scan and input objects.","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Ui() {","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.input \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        scan \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"zcnmashleu95"},"content":"        messages \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * This prints the intro logo of Duke.","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"zcnmashleu95"},"content":"    public String printIntro() {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"zcnmashleu95"},"content":"        String intro \u003d \"Hello from Duke! Type \\\"/help\\\" for help with commands! \\n\";","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"zcnmashleu95"},"content":"        return intro;","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * This prints the dashed line used to separate printed lines/sections.","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void showLine() {","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        System.out.println(\"___________________________________________________\");","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * This prints the farewell message when the user types \"bye\".","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"zcnmashleu95"},"content":"    public String printBye() {","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"zcnmashleu95"},"content":"        return (System.lineSeparator() + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * This prints the request message for input from user and scans for the input.","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @return the input scanned from user","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String scanForInput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        System.out.println(System.lineSeparator() + \"What can I do for you? For help, type \\\"/help\\\". \");","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this.scan.nextLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Print the error passage that is in parameters.","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param errorMessage This is the error message that is received.","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * This prints the specific loading error when the Task List","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * did not load from storage.","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"zcnmashleu95"},"content":"    public String showLoadingError() {","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"zcnmashleu95"},"content":"        return (\"Did not load Task List from Filepath\");","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"zcnmashleu95"},"content":"    public void storeMessage(String message) {","lastModifiedDate":"2022-02-20"},{"lineNumber":78,"author":{"gitId":"zcnmashleu95"},"content":"        messages.add(message);","lastModifiedDate":"2022-02-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":81,"author":{"gitId":"zcnmashleu95"},"content":"    public void clearMessages() {","lastModifiedDate":"2022-02-20"},{"lineNumber":82,"author":{"gitId":"zcnmashleu95"},"content":"        messages.clear();","lastModifiedDate":"2022-02-20"},{"lineNumber":83,"author":{"gitId":"zcnmashleu95"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":84,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":85,"author":{"gitId":"zcnmashleu95"},"content":"    public String getMessages() {","lastModifiedDate":"2022-02-20"},{"lineNumber":86,"author":{"gitId":"zcnmashleu95"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2022-02-20"},{"lineNumber":87,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":88,"author":{"gitId":"zcnmashleu95"},"content":"        for (int i \u003d 0; i \u003c messages.size(); i++) {","lastModifiedDate":"2022-02-20"},{"lineNumber":89,"author":{"gitId":"zcnmashleu95"},"content":"            reply \u003d reply + messages.get(i) + \"\\n\";","lastModifiedDate":"2022-02-20"},{"lineNumber":90,"author":{"gitId":"zcnmashleu95"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":91,"author":{"gitId":"zcnmashleu95"},"content":"        return reply;","lastModifiedDate":"2022-02-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"-":70,"zcnmashleu95":24}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package parser;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import commands.AddCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import commands.ListCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class ParserTest {","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void testParseListCommand() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(\"class commands.ListCommand\", parser.parse(\"list 123\").getClass().toString());","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(\"task\", ((AddCommand) parser.parse(\"list123\")).getTaskType());","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(\"list123\", ((AddCommand) parser.parse(\"list123\")).getTaskDescription());","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(\"task\", ((AddCommand) parser.parse(\"List\")).getTaskType());","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(\"List\", ((AddCommand) parser.parse(\"List\")).getTaskDescription());","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void testParseBlah() {","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            parser.parse(\"blah\");","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getErrorMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            assertEquals(\"task\", ((AddCommand) parser.parse(\"blah 123\")).getTaskType());","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            assertEquals(\"blah 123\", ((AddCommand) parser.parse(\"blah 123\")).getTaskDescription());","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            e.getErrorMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void testParseEmptyString() {","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            parser.parse(\"\");","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            assertEquals(\"☹ OOPS!!! You did not enter any command\", e.getErrorMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            parser.parse(\"    \");","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            assertEquals(\"☹ OOPS!!! You did not enter any command\", e.getErrorMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void testParseDelete() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(\"class commands.DeleteCommand\", parser.parse(\"delete 2\").getClass().toString());","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(\"class commands.AddCommand\", parser.parse(\"delete2\").getClass().toString());","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            parser.parse(\"delete -1\");","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            assertEquals(\"Input option for Delete invalid.\", e.getErrorMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void testParseAddTask() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(\"task\", ((AddCommand) parser.parse(\"jumping\")).getTaskType());","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(\"jumping\", ((AddCommand) parser.parse(\"jumping\")).getTaskDescription());","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void testParseAddTodo() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddCommand dummyAdd \u003d (AddCommand) parser.parse(\"todo running\");","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(\"todo\", dummyAdd.getTaskType());","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(\"running\", dummyAdd.getTaskDescription());","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    void testParseAddDeadline() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddCommand dummyAdd \u003d (AddCommand) parser.parse(\"deadline jogging /by 02/01/2020 23:59:59\");","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(\"deadline\", dummyAdd.getTaskType());","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(\"jogging\", dummyAdd.getTaskDescription());","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(\"02/01/2020 23:59:59\", dummyAdd.getTaskSecondPart());","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    void testParseAddEvent() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddCommand dummyAdd \u003d (AddCommand) parser.parse(\"event dinner /at 20/02/2000 10:10:10 - 23:12:30\");","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(\"event\", dummyAdd.getTaskType());","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(\"dinner\", dummyAdd.getTaskDescription());","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(\"20/02/2000 10:10:10 - 23:12:30\", dummyAdd.getTaskSecondPart());","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"-":112,"zcnmashleu95":2}},{"path":"src/test/java/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package tasks;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"zcnmashleu95"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"class DeadlineTest {","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    void testGetBy_success() {","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"        assertEquals(\"20 Feb 2000 10:10:10\", new Deadline(\"running\", \"20/02/2000 10:10:10\", ui).getBy());","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    void testToString_success() {","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"        assertEquals(\"[D][-] running (by: 20 Feb 2000 10:10:10)\",","lastModifiedDate":"2022-02-19"},{"lineNumber":19,"author":{"gitId":"zcnmashleu95"},"content":"                new Deadline(\"running\", \"20/02/2000 10:10:10\", ui).toString());","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"-":14,"zcnmashleu95":7}},{"path":"src/test/java/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package tasks;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"zcnmashleu95"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"class EventTest {","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    void testGetAt_success() {","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"zcnmashleu95"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-20"},{"lineNumber":12,"author":{"gitId":"zcnmashleu95"},"content":"        assertEquals(\"20 Feb 2000 10:10:10 to 23:12:30\",","lastModifiedDate":"2022-02-19"},{"lineNumber":13,"author":{"gitId":"zcnmashleu95"},"content":"                new Event(\"running\", \"20/02/2000 10:10:10 to 23:12:30\", ui).getAt());","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    void testToString_success() {","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"zcnmashleu95"},"content":"        assertEquals(\"[E][-] birthday dinner (at: 20 Feb 2000 11:11:11 to 20:20:20)\",","lastModifiedDate":"2022-02-19"},{"lineNumber":20,"author":{"gitId":"zcnmashleu95"},"content":"                new Event(\"birthday dinner\", \"20/02/2000 11:11:11 to 20:20:20\", ui).toString());","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"-":15,"zcnmashleu95":7}},{"path":"src/test/java/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package tasks;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"zcnmashleu95"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"zcnmashleu95"},"content":"","lastModifiedDate":"2022-02-19"},{"lineNumber":8,"author":{"gitId":"zcnmashleu95"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"class TaskListTest {","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void getSize_success() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"zcnmashleu95"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"zcnmashleu95"},"content":"        tasks.addTask(\"todo\", \"running\", \"\",ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"zcnmashleu95"},"content":"        tasks.addTask(\"task\", \"jumping\", \"\",ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"zcnmashleu95"},"content":"        tasks.addTask(\"event\", \"hopping\", \"home\",ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"zcnmashleu95"},"content":"        tasks.addTask(\"deadline\", \"walking\", \"02/02/2020 10:10:10\",ui);","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(4, tasks.getSize());","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"-":15,"zcnmashleu95":8}}]
