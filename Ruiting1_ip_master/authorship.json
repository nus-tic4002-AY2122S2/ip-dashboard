[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"    mainClassName \u003d \"duke.Main\"","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Ruiting1":16,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"D|1|return book|2021-08-05 1005|2021-08-01 1800","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"T|1|go exercising|2021-09-05 2229","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"T|0|borrow book|","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"E|0|tba2105 project group discussion|2022-01-01 1900|","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"D|1|write proposal for project A|2021-09-30 1800|2021-09-25 1814","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"E|0|tba4001 project group discussion|2021-09-15 1800|","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"E|0|project A group discussion|2021-09-14 1800|","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"E|1|project meeting|2021-06-22 1200|2021-03-14 1721","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":1,"-":7}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-01-21"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-01-21"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-01-21"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import duke.storage.Storage.InvalidStorageFilePathException;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import duke.storage.Storage.StorageOperationException;","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-21"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    public void init() {","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"        //ui \u003d new Ui();","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"            storage \u003d new Storage(System.getProperty(\"user.dir\") + \"/data/duke.txt\");","lastModifiedDate":"2022-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } catch (StorageOperationException | InvalidStorageFilePathException | IOException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"            //ui.showLoadingError();","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"     * Runs the application.","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void run() {","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                Command c \u003d new Parser().parse(fullCommand);","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                c.setData(tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"                String commandResult \u003d c.execute();","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"                ui.showResponse(commandResult);","lastModifiedDate":"2022-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                storage.save(tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                isExit \u003d ExitCommand.isExit(c);","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            } finally {","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-08"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-08"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"        mainWindow \u003d new MainWindow(stage, ui, storage, tasks);","lastModifiedDate":"2022-02-08"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"        mainWindow.show();","lastModifiedDate":"2022-02-08"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Ruiting1":31,"-":37}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":" * The main entry point to the application.","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":" *","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":" * entry point of the application:","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":" *","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":" *","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":" *","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"public class Main {","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"Ruiting1":25}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * add a task to the list","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD_ONE \u003d \"todo\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD_TWO \u003d \"deadline\";","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD_THREE \u003d \"event\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE \u003d \"||\" + COMMAND_WORD_ONE + \": Adds a Todo Task to the task list. \\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"            + \"Syntax: todo DESCRIPTION\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"            + \"Example: \" + COMMAND_WORD_ONE + \" borrow book\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"            + \"||\" + COMMAND_WORD_TWO + \": Adds a Deadline task to the task list.\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"            + \"Syntax: deadline DESCRIPTION by/TIME(YYYY-MM-dd HHmm)\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"            + \"Example: \" + COMMAND_WORD_TWO + \" return book by/2019-12-01 1200\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"            + \"||\" + COMMAND_WORD_THREE + \": Adds an Event task to the task list.\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"            + \"Syntax: event DESCRIPTION at/TIME(YYYY-MM-dd HHmm)\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"            + \"Example: \" + COMMAND_WORD_THREE + \" project meeting at/2019-12-01 1200\";","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Task toAdd;","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddCommand(Task toAdd) {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"    public String execute() {","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            taskList.addTask(toAdd);","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"            return \"New \" + toAdd.getTaskType() + \" Added: \" + toAdd.toString() + \"\\n\"","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"                    + \"Now you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (TaskList.DuplicateTaskException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"            return e.getMessage();","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":16,"-":28}},{"path":"src/main/java/duke/commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d \"||\" + COMMAND_WORD + \": clear all the tasks in the task list.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"    public String execute() {","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        taskList.clear();","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"        return \"All the tasks are cleared.\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":3,"-":10}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents an executable command.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private int[] targetIndex;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    protected Command() {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public Command(int[] targetIndex) {","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.setTargetIndex(targetIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private void setTargetIndex(int[] targetIndex) {","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public int[] getTargetIndex() {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return targetIndex;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    public String execute() {","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"        return \"You need implement the method in child class\";","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Supplies the data the command will operate on.","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setData(TaskList taskList) {","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":5,"-":38}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * delete a task from the taskList based on the index.","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE \u003d \"||\"","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"            + COMMAND_WORD + \": delete a task from the task list based on the index.\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"            + \"Syntax: delete INDEX\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 (this will remove the No.2 task from the task list.)\";","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand(int[] targetIndex) {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        super(targetIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    public String execute() {","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        List\u003cTask\u003e toRemove \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        for (int i : getTargetIndex()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            toRemove.add(taskList.getTaskByIdx(i));","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        taskList.removeTasks(toRemove);","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"        return \"Remove successfully.\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":9,"-":24}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * mark a task as done statement based on the index.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE \u003d \"||\"","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"            + COMMAND_WORD + \": mark a task as done status, there are two syntax.\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"            + \"Syntax 1(without finish time): done INDEX\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 (this command will mark the No.2 task as Done status \"","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"            + \"and the default finish time is the current time)\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"            + \"Syntax 2(with finish time): done INDEX on/TIME(YYYY-MM-dd HHmm)\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2 on/2019-12-01 1200(this command will mark the No.2 task as Done status \"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"            + \"and finish time is 01 Dec 2019 12:00\";","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private LocalDateTime finishTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"     * Constructor of the DoneCommand","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public DoneCommand(int[] targetIndex, LocalDateTime finishTime) {","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        super(targetIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.finishTime \u003d finishTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    public String execute() {","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"        String commandResult \u003d \"\";","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        for (int i : getTargetIndex()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            taskList.getTaskByIdx(i).markAsDone(finishTime);","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"            commandResult +\u003d taskList.getTaskByIdx(i) + \" is done on \"","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"                    + finishTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \"\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"        return commandResult;","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":17,"-":23}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Exit the program.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE \u003d \"||\"","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"            + COMMAND_WORD + \": Exit the program and save the changes to the txt file.\";","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    public String execute() {","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"        return \"See you next time.\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return command instanceof ExitCommand; // instanceof returns false if it is null","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":6,"-":15}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.util.Set;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Finds and lists all tasks in taskList whose description contains any of the argument keywords.","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case-sensitive.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE \u003d \"||\"","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"            + COMMAND_WORD + \": finds the specific tasks based on the keywords you entered.\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"            + \"there is a optional flag after find:\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"            + \"1 indicate \u0027isCombined\u0027 is true which means will only find the task(s) \"","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"            + \"which match all the keywords combined\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"            + \"0 indicate \u0027isCombined\u0027 is false which means will find the task(s) \"","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"            + \"which match all the keywords separately\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"            + \"if omit this flag will default 1\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"            + \"Syntax: find (optional: 0|1) KEYWORDS\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"            + \"Example: \" + COMMAND_WORD + \"find book(will return the task that contains the keyword book.\";","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cString\u003e keywords;","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private boolean isCombined \u003d true;","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public FindCommand(Set\u003cString\u003e keywords) {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"     * Constructor of the FindCommand when user need keyword combined","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public FindCommand(Set\u003cString\u003e keywords, boolean isCombined) {","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.isCombined \u003d isCombined;","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"    public String execute() {","lastModifiedDate":"2022-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final List\u003cTask\u003e foundTasks \u003d getTasksFromKeyword(keywords, isCombined);","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"        String commandResult \u003d \"\";","lastModifiedDate":"2022-02-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"            return \"No Result Found\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c\u003d foundTasks.size(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"            commandResult +\u003d i + \". \" + foundTasks.get(i - 1).toString() + \"\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"        return commandResult;","lastModifiedDate":"2022-02-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Retrieves all tasks in the TaskList whose descriptions contain some specified keywords.","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param keywords   for searching","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param isCombined if true then will match all the keyword combined, else will match all the keyword separately","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @return list of tasks found","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private List\u003cTask\u003e getTasksFromKeyword(Set\u003cString\u003e keywords, boolean isCombined) {","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final List\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (isCombined) {","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            for (Task task : taskList.getAllTasks()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                Set\u003cString\u003e descriptionWords \u003d new HashSet\u003c\u003e(Arrays.asList(task.getDescription().split(\" \")));","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                if (descriptionWords.containsAll(keywords)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                    matchedTasks.add(task);","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            for (Task task : taskList.getAllTasks()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                if (keywords.stream().anyMatch(keyword -\u003e task.getDescription().contains(keyword))) {","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                    matchedTasks.add(task);","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return matchedTasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":26,"-":61}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d \"||\" + COMMAND_WORD + \": Shows program usage instructions.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"    public String execute() {","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"        return AddCommand.MESSAGE_USAGE","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"\\n\" + ClearCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"\\n\" + DeleteCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"\\n\" + DoneCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"\\n\" + FindCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"\\n\" + HelpCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"\\n\" + ListCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"\\n\" + SortCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"\\n\" + ViewDoneCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"\\n\" + ExitCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"                + \"\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":4,"-":19}},{"path":"src/main/java/duke/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Represents an incorrect command. Upon execution, produces some feedback to the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public IncorrectCommand(String feedbackToUser) {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    public String execute() {","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"        return feedbackToUser + \"\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":4,"-":15}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * List all the tasks in the taskList.","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d \"||\" + COMMAND_WORD + \": list the all the tasks in the task list.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    public String execute() {","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"        String commandResult \u003d \"\";","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"            return \"There isn\u0027t any tasks in the list.\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"            commandResult +\u003d i + \". \" + taskList.getTaskByIdx(i).toString() + \"\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        return commandResult;","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":6,"-":19}},{"path":"src/main/java/duke/commands/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Sort the tasks in the list by the task finish time","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE \u003d \"||\"","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"            + COMMAND_WORD + \": sort the all the tasks in the task list by finish date in descending order.\";","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    public String execute() {","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"        String commandResult \u003d \"\";","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"            return \"There isn\u0027t any tasks in the list.\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Collections.sort(taskList.getTasks(), (t1, t2) -\u003e {","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            if (t1.getFinishTime().isAfter(t2.getFinishTime())) {","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                return -1;","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                return 1;","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"            commandResult +\u003d i + \". \" + taskList.getTaskByIdx(i).toString() + \"\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"        return commandResult;","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Ruiting1":8,"-":29}},{"path":"src/main/java/duke/commands/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.commands;","lastModifiedDate":"2022-02-18"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2022-02-18"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":" * Update the task based on the element that want to be updated","lastModifiedDate":"2022-02-18"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":" * @param \u003cT\u003e the new value for updated task, e.g. description, due etc.","lastModifiedDate":"2022-02-18"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2022-02-18"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"public class UpdateCommand\u003cT\u003e extends Command {","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"    public static final String COMMAND_WORD \u003d \"update\";","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE \u003d \"||update\";","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"    private int targetIndex;","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    private String toUpdate;","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    private T newValue;","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"     * Constructor of the UpdateCommand","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    public UpdateCommand(int targetIndex, String toUpdate, T newValue) {","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"        this.toUpdate \u003d toUpdate;","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"        this.newValue \u003d newValue;","lastModifiedDate":"2022-02-18"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    public String execute() {","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"        String commandResult;","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"        Task target \u003d taskList.getTaskByIdx(targetIndex);","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"        String original \u003d target.toString();","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"        switch (toUpdate) {","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"        case \"desc\":","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"        case \"description\":","lastModifiedDate":"2022-02-20"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"            target.updateTask((String) newValue);","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"            break;","lastModifiedDate":"2022-02-20"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"        case \"tasktime\":","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"        default:","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"            target.updateTask((LocalDateTime) newValue);","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"            break;","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"        commandResult \u003d original + \"\\nupdated to\\n\" + taskList.getTaskByIdx(targetIndex).toString();","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"        return commandResult;","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-18"}],"authorContributionMap":{"Ruiting1":46}},{"path":"src/main/java/duke/commands/ViewDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.commands;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * view and list all the tasks which is done during a specific period.","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ViewDoneCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"viewdone\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"    public static final String MESSAGE_USAGE \u003d \"||\"","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"            + COMMAND_WORD + \": view the finished tasks done during a specific period.\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"            + \"Syntax: \" + COMMAND_WORD + \" from/TIME to/TIME (all the time format is YYYY-MM-dd HHmm)\\n\"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"            + \"Example: \" + COMMAND_WORD + \" from/2019-08-08 0800 to/2019-12-12 1200\";","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    private LocalDateTime fromTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    private LocalDateTime toTime;","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"     * Constructor of the ViewDoneCommand","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public ViewDoneCommand(LocalDateTime fromTime, LocalDateTime toTime) {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"    public String execute() {","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"        String commandResult \u003d \"\";","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        final List\u003cTask\u003e foundTasks \u003d getTasksFromTimePeriod(fromTime, toTime);","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"            return \"No Result Found\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c\u003d foundTasks.size(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"            commandResult +\u003d i + \". \" + foundTasks.get(i - 1).toString() + \"\\n\";","lastModifiedDate":"2022-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"        return commandResult;","lastModifiedDate":"2022-02-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Retrieves all tasks in the TaskList whose finishTime is in a specific period","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return list of tasks found","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private List\u003cTask\u003e getTasksFromTimePeriod(LocalDateTime fromTime, LocalDateTime toTime) {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final List\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (Task task : taskList.getAllTasks()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            if (task.isDone() \u0026\u0026 task.getFinishTime().isAfter(fromTime) \u0026\u0026 task.getFinishTime().isBefore(toTime)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return matchedTasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":18,"-":42}},{"path":"src/main/java/duke/common/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.common;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import duke.exception.IllegalValueException;","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Utils {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern BASIC_DATE_TIME_FORMAT \u003d Pattern.compile(\"(?\u003cyear\u003e\\\\d{4})\" + \"-\" + \"(?\u003cmonth\u003e\\\\d{2})\"","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"            + \"-\" + \"(?\u003cday\u003e\\\\d{2})\"","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"            + \" \" + \"(?\u003chour\u003e\\\\d{2})(?\u003cminute\u003e\\\\d{2})\");","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Returns true if every element the given collection are unique by {@link Object#equals(Object)}.","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static boolean elementsAreUnique(Collection\u003c?\u003e items) {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        final Set\u003cObject\u003e testSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        for (Object item : items) {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            final boolean itemAlreadyExists \u003d !testSet.add(item); // set is not allowed duplicate.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            if (itemAlreadyExists) {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * get the LocalDateTime from a basic date time string format(YYYY-MM-dd HHmm)","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param timeString a basic datetime string","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the result LocalDateTime","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException of the string format is not correct","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static LocalDateTime getDatetimeFromString(String timeString) throws IllegalValueException {","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Matcher matcher \u003d BASIC_DATE_TIME_FORMAT.matcher(timeString.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(\"Date format no match, please check your txt file format\");","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return LocalDateTime.of(Integer.parseInt(matcher.group(\"year\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                Integer.parseInt(matcher.group(\"month\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                Integer.parseInt(matcher.group(\"day\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                Integer.parseInt(matcher.group(\"hour\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                Integer.parseInt(matcher.group(\"minute\")));","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":8,"-":43}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.exception;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":1,"-":3}},{"path":"src/main/java/duke/exception/DuplicateTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.exception;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that an operation would have violated the \u0027no duplicates\u0027 task of the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DuplicateTaskException extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"        super(\"There is a same task which already existed in the task list.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":4,"-":8}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.exception;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    private String message;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        return message;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"Ruiting1":2,"-":12}},{"path":"src/main/java/duke/exception/IllegalValueException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.exception;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":1,"-":12}},{"path":"src/main/java/duke/exception/UndefinedTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.exception;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class UndefinedTaskException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"Ruiting1":1,"-":3}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.parser;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.ClearCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.HelpCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.IncorrectCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.SortCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.UpdateCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.ViewDoneCommand;","lastModifiedDate":"2022-02-18"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"import duke.common.Utils;","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"import duke.exception.IllegalValueException;","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class Parser {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"    // one or more keywords separated by whitespace","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Pattern KEYWORDS_ARGS_FORMAT \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"            Pattern.compile(\"(?:(?\u003cisCombined\u003e[01])\\\\s+)?(?\u003ckeywords\u003e\\\\S+(?:\\\\s+\\\\S+)*)\");","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Pattern TASK_TYPE_DEADLINE_ARGS_FORMAT \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            Pattern.compile(\"(?\u003cdeadlineDesc\u003e[^/]+)\"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    + \" by/(?\u003cbyYear\u003e\\\\d{4})\" + \"-\" + \"(?\u003cbyMonth\u003e\\\\d{2})\" + \"-\" + \"(?\u003cbyDay\u003e\\\\d{2})\"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    + \" \" + \"(?\u003cbyHour\u003e\\\\d{2})(?\u003cbyMin\u003e\\\\d{2})\");","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Pattern TASK_TYPE_EVENT_ARGS_FORMAT \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Pattern.compile(\"(?\u003ceventDesc\u003e[^/]+)\"","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    + \" at/(?\u003catYear\u003e\\\\d{4})\" + \"-\" + \"(?\u003catMonth\u003e\\\\d{2})\" + \"-\" + \"(?\u003catDay\u003e\\\\d{2})\"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    + \" \" + \"(?\u003catHour\u003e\\\\d{2})(?\u003catMin\u003e\\\\d{2})\");","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern BASIC_TIME_FORMAT \u003d","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"            Pattern.compile(\"(?\u003cyear\u003e\\\\d{4})\" + \"-\" + \"(?\u003cmonth\u003e\\\\d{2})\" + \"-\" + \"(?\u003cday\u003e\\\\d{2})\"","lastModifiedDate":"2022-02-18"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"                    + \" \" + \"(?\u003chour\u003e\\\\d{2})(?\u003cminute\u003e\\\\d{2})\");","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Pattern TASK_INDEX_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003ctargetIndex\u003e\\\\d+(?:\\\\s+\\\\d+)*)\");","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Pattern TASK_DONE_TIME_FORMAT \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Pattern.compile(\"(?\u003ctargetIndex\u003e\\\\d+(?:\\\\s+\\\\d+)*)\\\\s+\" + \"on/\"","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    + \"(?\u003cyear\u003e\\\\d{4})\" + \"-\" + \"(?\u003cmonth\u003e\\\\d{2})\" + \"-\" + \"(?\u003cday\u003e\\\\d{2})\"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                    + \" \" + \"(?\u003chour\u003e\\\\d{2})(?\u003cminute\u003e\\\\d{2})\");","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final Pattern VIEW_DONE_TASK_BY_TIME_FORMAT \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            Pattern.compile(\"from/(?\u003cfromTime\u003e[^/]+)\" + \" to/(?\u003ctoTime\u003e[^/]+)\");","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern UPDATE_FORMAT \u003d","lastModifiedDate":"2022-02-18"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"            Pattern.compile(\"(?\u003ctargetIndex\u003e\\\\d+)\" + \"\\\\s+(?\u003ctoUpdate\u003edesc|description|tasktime)\" + \"\\\\s+(?\u003cnewValue\u003e.*)\");","lastModifiedDate":"2022-02-20"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param inputCommand full user input string","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Command parse(String inputCommand) {","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(inputCommand.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect format, \"","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"                    + \" you may type the list to see all the commands.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD_ONE:","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return prepareAddTodo(arguments);","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD_TWO:","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return prepareAddDeadline(arguments);","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD_THREE:","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return prepareAddEvent(arguments);","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return prepareDone(arguments);","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return prepareDelete(arguments);","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return prepareFind(arguments);","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case ViewDoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return prepareViewDone(arguments);","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"Ruiting1"},"content":"        case UpdateCommand.COMMAND_WORD:","lastModifiedDate":"2022-02-18"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"            return prepareUpdate(arguments);","lastModifiedDate":"2022-02-18"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return new SortCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Parses arguments in the context of the add todotask command.","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @param args full command args string","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @return the prepared command","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private Command prepareAddTodo(String args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new AddCommand(new Todo(args.trim()));","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses arguments in the context of the add deadline task command.","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @param args full command args string","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @return the prepared command","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private Command prepareAddDeadline(String args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d TASK_TYPE_DEADLINE_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect format, \"","lastModifiedDate":"2022-01-22"},{"lineNumber":146,"author":{"gitId":"Ruiting1"},"content":"                    + \" you may type \u0027help\u0027 to see all the commands.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new AddCommand(new Deadline(matcher.group(\"deadlineDesc\"),","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                LocalDateTime.of(Integer.parseInt(matcher.group(\"byYear\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                        Integer.parseInt(matcher.group(\"byMonth\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                        Integer.parseInt(matcher.group(\"byDay\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                        Integer.parseInt(matcher.group(\"byHour\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                        Integer.parseInt(matcher.group(\"byMin\")))));","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Parses arguments in the context of the add Event task command.","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @param args full command args string","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @return the prepared command","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private Command prepareAddEvent(String args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d TASK_TYPE_EVENT_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":165,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect format, \"","lastModifiedDate":"2022-01-22"},{"lineNumber":166,"author":{"gitId":"Ruiting1"},"content":"                    + \" you may type \u0027help\u0027 to see all the commands.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return new AddCommand(new Event(matcher.group(\"eventDesc\"),","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                LocalDateTime.of(Integer.parseInt(matcher.group(\"atYear\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                        Integer.parseInt(matcher.group(\"atMonth\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                        Integer.parseInt(matcher.group(\"atDay\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                        Integer.parseInt(matcher.group(\"atHour\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                        Integer.parseInt(matcher.group(\"atMin\")))));","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Parses argument in the context of the mark a task as done command.","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @param args full command args string","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * @return the prepared command","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private Command prepareDone(String args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            Matcher matcher \u003d TASK_DONE_TIME_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"Ruiting1"},"content":"                int[] targetIndex \u003d Stream.of(matcher.group(\"targetIndex\")","lastModifiedDate":"2022-01-22"},{"lineNumber":189,"author":{"gitId":"Ruiting1"},"content":"                        .split(\"\\\\s+\")).mapToInt(Integer::parseInt).toArray();","lastModifiedDate":"2022-01-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                return new DoneCommand(targetIndex,","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                        LocalDateTime.of(Integer.parseInt(matcher.group(\"year\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                                Integer.parseInt(matcher.group(\"month\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                                Integer.parseInt(matcher.group(\"day\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                                Integer.parseInt(matcher.group(\"hour\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                                Integer.parseInt(matcher.group(\"minute\"))));","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-09-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                int[] targetIndex \u003d parseArgsAsDisplayedIndex(args);","lastModifiedDate":"2021-09-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                return new DoneCommand(targetIndex, LocalDateTime.now());","lastModifiedDate":"2021-09-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-17"},{"lineNumber":201,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect format, \"","lastModifiedDate":"2022-01-22"},{"lineNumber":202,"author":{"gitId":"Ruiting1"},"content":"                    + \" you may type \u0027help\u0027 to see all the commands.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * Parses argument in the context of the delete a task command.","lastModifiedDate":"2021-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * @param args full command args string","lastModifiedDate":"2021-09-17"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * @return the prepared command","lastModifiedDate":"2021-09-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    private Command prepareDelete(String args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            final int[] targetIndex \u003d parseArgsAsDisplayedIndex(args);","lastModifiedDate":"2021-09-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            for (int i : targetIndex) {","lastModifiedDate":"2021-09-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                assert i \u003e 0 : \"Invalid number, the index should be larger than 0.\";","lastModifiedDate":"2021-09-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return new DeleteCommand(targetIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-17"},{"lineNumber":221,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect format, \"","lastModifiedDate":"2022-01-22"},{"lineNumber":222,"author":{"gitId":"Ruiting1"},"content":"                    + \" you may type the list to see all the commands.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * Parses arguments in the context of the find task command.","lastModifiedDate":"2021-09-17"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * @param args full command args string","lastModifiedDate":"2021-09-17"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @return the prepared command","lastModifiedDate":"2021-09-17"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    private Command prepareFind(String args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d KEYWORDS_ARGS_FORMAT.matcher((args.trim()));","lastModifiedDate":"2021-09-17"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":235,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect format, \"","lastModifiedDate":"2022-01-22"},{"lineNumber":236,"author":{"gitId":"Ruiting1"},"content":"                    + \" you may type \u0027help\u0027 to see all the commands.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // keywords delimited by whitespace","lastModifiedDate":"2021-09-17"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        final String[] keywords \u003d matcher.group(\"keywords\").split(\"\\\\s+\");","lastModifiedDate":"2021-09-17"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        final Set\u003cString\u003e keywordSet \u003d new HashSet\u003c\u003e(Arrays.asList(keywords));","lastModifiedDate":"2021-09-17"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        String isCombined \u003d matcher.group(\"isCombined\");","lastModifiedDate":"2021-09-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        if (isCombined \u003d\u003d null || isCombined.isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return new FindCommand(keywordSet);","lastModifiedDate":"2021-09-17"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            return new FindCommand(keywordSet, isCombined.equals(\"1\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * Parses arguments in the context of the viewdone task Command.","lastModifiedDate":"2021-09-17"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * @param args full command args string","lastModifiedDate":"2021-09-17"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * @return the prepared command","lastModifiedDate":"2021-09-17"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    private Command prepareViewDone(String args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            final Matcher matcher \u003d VIEW_DONE_TASK_BY_TIME_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            if (!matcher.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":259,"author":{"gitId":"Ruiting1"},"content":"                return new IncorrectCommand(\"This is a incorrect format, \"","lastModifiedDate":"2022-01-22"},{"lineNumber":260,"author":{"gitId":"Ruiting1"},"content":"                        + \" you may type \u0027help\u0027 to see all the commands.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return new ViewDoneCommand(Utils.getDatetimeFromString(matcher.group(\"fromTime\")),","lastModifiedDate":"2021-09-17"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    Utils.getDatetimeFromString(matcher.group(\"toTime\")));","lastModifiedDate":"2021-09-17"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-09-17"},{"lineNumber":265,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect format, \"","lastModifiedDate":"2022-01-22"},{"lineNumber":266,"author":{"gitId":"Ruiting1"},"content":"                    + \" you may type \u0027help\u0027 to see all the commands.\");","lastModifiedDate":"2022-01-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":271,"author":{"gitId":"Ruiting1"},"content":"    private Command prepareUpdate(String args) {","lastModifiedDate":"2022-02-18"},{"lineNumber":272,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":273,"author":{"gitId":"Ruiting1"},"content":"        Matcher matcher \u003d UPDATE_FORMAT.matcher(args.trim());","lastModifiedDate":"2022-02-18"},{"lineNumber":274,"author":{"gitId":"Ruiting1"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2022-02-18"},{"lineNumber":275,"author":{"gitId":"Ruiting1"},"content":"            int targetIndex \u003d Integer.parseInt(matcher.group(\"targetIndex\"));","lastModifiedDate":"2022-02-18"},{"lineNumber":276,"author":{"gitId":"Ruiting1"},"content":"            String toUpdate \u003d matcher.group(\"toUpdate\");","lastModifiedDate":"2022-02-18"},{"lineNumber":277,"author":{"gitId":"Ruiting1"},"content":"            String newValue \u003d matcher.group(\"newValue\");","lastModifiedDate":"2022-02-18"},{"lineNumber":278,"author":{"gitId":"Ruiting1"},"content":"            Matcher matcher1 \u003d BASIC_TIME_FORMAT.matcher(newValue.trim());","lastModifiedDate":"2022-02-18"},{"lineNumber":279,"author":{"gitId":"Ruiting1"},"content":"            if (matcher1.matches() ) {","lastModifiedDate":"2022-02-18"},{"lineNumber":280,"author":{"gitId":"Ruiting1"},"content":"                return new UpdateCommand\u003c\u003e(targetIndex, toUpdate,","lastModifiedDate":"2022-02-18"},{"lineNumber":281,"author":{"gitId":"Ruiting1"},"content":"                        LocalDateTime.of(Integer.parseInt(matcher1.group(\"year\")),","lastModifiedDate":"2022-02-18"},{"lineNumber":282,"author":{"gitId":"Ruiting1"},"content":"                        Integer.parseInt(matcher1.group(\"month\")),","lastModifiedDate":"2022-02-18"},{"lineNumber":283,"author":{"gitId":"Ruiting1"},"content":"                        Integer.parseInt(matcher1.group(\"day\")),","lastModifiedDate":"2022-02-18"},{"lineNumber":284,"author":{"gitId":"Ruiting1"},"content":"                        Integer.parseInt(matcher1.group(\"hour\")),","lastModifiedDate":"2022-02-18"},{"lineNumber":285,"author":{"gitId":"Ruiting1"},"content":"                        Integer.parseInt(matcher1.group(\"minute\"))));","lastModifiedDate":"2022-02-18"},{"lineNumber":286,"author":{"gitId":"Ruiting1"},"content":"            } else {","lastModifiedDate":"2022-02-18"},{"lineNumber":287,"author":{"gitId":"Ruiting1"},"content":"                return new UpdateCommand\u003c\u003e(targetIndex, toUpdate, newValue);","lastModifiedDate":"2022-02-18"},{"lineNumber":288,"author":{"gitId":"Ruiting1"},"content":"            }","lastModifiedDate":"2022-02-18"},{"lineNumber":289,"author":{"gitId":"Ruiting1"},"content":"        } else {","lastModifiedDate":"2022-02-18"},{"lineNumber":290,"author":{"gitId":"Ruiting1"},"content":"            return new IncorrectCommand(\"This is a incorrect update format, \"","lastModifiedDate":"2022-02-18"},{"lineNumber":291,"author":{"gitId":"Ruiting1"},"content":"                    + \" you may type \u0027help\u0027 to see all the commands.\");","lastModifiedDate":"2022-02-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":299,"author":{"gitId":"-"},"content":"     * Parses the given arguments string as a single index number.","lastModifiedDate":"2021-09-17"},{"lineNumber":300,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     * @param args arguments string to parse as index number","lastModifiedDate":"2021-09-17"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     * @return the parsed index number","lastModifiedDate":"2021-09-17"},{"lineNumber":303,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    private int[] parseArgsAsDisplayedIndex(String args) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d TASK_INDEX_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            throw new ParseException(\"Could not match to the correct index.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        //return Integer.parseInt(matcher.group(\"targetIndex\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        return Stream.of(matcher.group(\"targetIndex\").split(\"\\\\s+\")).mapToInt(Integer::parseInt).toArray();","lastModifiedDate":"2021-09-26"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":315,"author":{"gitId":"-"},"content":"     * Signals that the user input could not be parsed.","lastModifiedDate":"2021-09-17"},{"lineNumber":316,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    public static class ParseException extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        ParseException(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            super(message);","lastModifiedDate":"2021-09-17"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":72,"-":253}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import duke.exception.IllegalValueException;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Storage {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"     * Default file path used if the user doesn\u0027t provide the file name.","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"duke.txt\";","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public final Path path;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws InvalidStorageFilePathException if the default path is invalid","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Storage() throws InvalidStorageFilePathException {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws InvalidStorageFilePathException if the given file path is invalid","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Storage(String filePath) throws InvalidStorageFilePathException {","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        path \u003d Paths.get(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!isValidPath(path)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new InvalidStorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if the given path is acceptable as a storage file.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The file path is considered acceptable if it ends with \u0027.txt\u0027","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static boolean isValidPath(Path filePath) {","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return filePath.toString().endsWith(\".txt\");","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Saves the {@code taskList} data to the storage file.","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws StorageOperationException if there were errors converting and/or storing data to file.","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void save(TaskList taskList) throws StorageOperationException {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            List\u003cString\u003e encodedTaskList \u003d TaskListEncorder.encodeTaskList(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Files.write(path, encodedTaskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new StorageOperationException(\"Saving went wrong\");","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Loads the {@code taskList} data from this storage file, and then returns it.","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an empty {@code taskList} if the file does not exist, or is not a regular file.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws StorageOperationException if there were errors reading and/or converting data from file.","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public TaskList load() throws StorageOperationException, IOException {","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Files.exists(path) || !Files.isRegularFile(path)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Files.createFile(path);","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new TaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return TaskListDecoder.decodeTaskList(Files.readAllLines(path));","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new StorageOperationException(\"Loading went wrong\");","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new StorageOperationException(\"File contains incorrect format.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Signals that the given file path does not fulfill the storage filepath constraints.","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static class InvalidStorageFilePathException extends IllegalValueException {","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public InvalidStorageFilePathException(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            super(message);","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Signals that some error has occured while trying to convert and read/write data between the application","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * and the storage file.","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static class StorageOperationException extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public StorageOperationException(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            super(message);","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":8,"-":98}},{"path":"src/main/java/duke/storage/TaskListDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import duke.common.Utils;","lastModifiedDate":"2022-01-21"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import duke.exception.IllegalValueException;","lastModifiedDate":"2022-01-21"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-01-21"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import duke.task.Event;","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-21"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-21"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-01-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Decodes the storage data file into an {@code taskList} object.","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class TaskListDecoder {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern TODO_TXT_FILE_FORMAT \u003d Pattern.compile(\"T[|](?\u003cisDone\u003e[01])[|](?\u003ctaskDesc\u003e[^|]+)[|]\"","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"            + \"(?\u003cfinishTime\u003e[^|]*)\");","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern DEADLINE_TXT_FILE_FORMAT \u003d Pattern.compile(\"D[|](?\u003cisDone\u003e[01])\"","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"            + \"[|](?\u003ctaskDesc\u003e[^|]+)\"","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"            + \"[|](?\u003cplanTime\u003e[^|]+)[|]\"","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"            + \"(?\u003cfinishTime\u003e[^|]*)\");","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    public static final Pattern EVENT_TXT_FILE_FORMAT \u003d Pattern.compile(\"E[|](?\u003cisDone\u003e[01])\"","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"            + \"[|](?\u003ctaskDesc\u003e[^|]+)\"","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"            + \"[|](?\u003cplanTime\u003e[^|]+)[|]\"","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"            + \"(?\u003cfinishTime\u003e[^|]*)\");","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Decodes {@code encodedTasklist} into an {@code TaskList} containing the decoded tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if any of the fields in any encoded task string is invalid.","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static TaskList decodeTaskList(List\u003cString\u003e encodedTasklist) throws IllegalValueException {","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final List\u003cTask\u003e decodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        for (String encodedTask : encodedTasklist) {","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            decodedTasks.add(decodeTaskFromString(encodedTask));","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new TaskList(decodedTasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Decodes {@code encodedTask} into a {@code Task}.","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if any field in the {@code encodedTask} is invalid.","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static Task decodeTaskFromString(String encodedTask) throws IllegalValueException {","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final Matcher matcherTodo \u003d TODO_TXT_FILE_FORMAT.matcher(encodedTask.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final Matcher matcherDeadline \u003d DEADLINE_TXT_FILE_FORMAT.matcher(encodedTask.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final Matcher matcherEvent \u003d EVENT_TXT_FILE_FORMAT.matcher(encodedTask.trim());","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        boolean isDone;","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (matcherTodo.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            isDone \u003d \"1\".equals(matcherTodo.group(\"isDone\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new Todo(matcherTodo.group(\"taskDesc\"), isDone,","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    isDone ? Utils.getDatetimeFromString(matcherTodo.group(\"finishTime\")) : null);","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } else if (matcherDeadline.matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            isDone \u003d \"1\".equals(matcherDeadline.group(\"isDone\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new Deadline(matcherDeadline.group(\"taskDesc\"),","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                    Utils.getDatetimeFromString(matcherDeadline.group(\"planTime\")), isDone,","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                    isDone ? Utils.getDatetimeFromString(matcherDeadline.group(\"finishTime\")) : null);","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"        } else if (matcherEvent.matches()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            isDone \u003d \"1\".equals(matcherEvent.group(\"isDone\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new Event(matcherEvent.group(\"taskDesc\"),","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                    Utils.getDatetimeFromString(matcherEvent.group(\"planTime\")), isDone,","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                    isDone ? Utils.getDatetimeFromString(matcherEvent.group(\"finishTime\")) : null);","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"            throw new IllegalValueException(\"No match, please check your txt file format\");","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":21,"-":60}},{"path":"src/main/java/duke/storage/TaskListEncorder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.storage;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Encodes the {@code taskList} object into a data file for storage.","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class TaskListEncorder {","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Encodes all the {@code Task} in the {@code toSave} into a list of decodable and readable string presentation","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * for storage.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static List\u003cString\u003e encodeTaskList(TaskList toSave) {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        final List\u003cString\u003e encodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c\u003d toSave.getSize(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            encodedTasks.add(encodeTaskToString(toSave.getTaskByIdx(i)));","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return encodedTasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Encodes the {@code task} into a decodable and readable string representation.","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static String encodeTaskToString(Task task) {","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        final StringBuilder encodedTaskBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        encodedTaskBuilder.append(task.getTaskType());","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        encodedTaskBuilder.append(\"|\");","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        encodedTaskBuilder.append(task.isDone() ? \"1\" : \"0\");","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        encodedTaskBuilder.append(\"|\");","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        encodedTaskBuilder.append(task.getDescription());","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        encodedTaskBuilder.append(\"|\");","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (task.getTaskType() \u003d\u003d \"D\" || task.getTaskType() \u003d\u003d \"E\") {","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            encodedTaskBuilder.append(task.getTaskTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            encodedTaskBuilder.append(\"|\");","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (task.isDone()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            encodedTaskBuilder.append(task.getFinishTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\")));","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return encodedTaskBuilder.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":4,"-":51}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.task;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Deadline task","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final String TASK_TYPE \u003d \"D\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Constructs a deadline task with description and time","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * by default the isDone is false","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a deadline task with description, time and isDone","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone, LocalDateTime finishTime) {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(description, isDone, finishTime);","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public LocalDateTime getTaskTime() {","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return by;","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return TASK_TYPE;","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"    @Override","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"    public void updateTask(LocalDateTime newValue){","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"        this.by \u003d newValue;","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"        if (!super.equals(obj)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"        if (this.getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Deadline d \u003d (Deadline) obj;","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this.by.equals(d.by);","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Ruiting1":12,"-":52}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.task;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Event task","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    //protected String at;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final String TASK_TYPE \u003d \"E\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //public Event(String description, String at) {","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    //    super(description);","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    //    this.at\u003dat;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    //}","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a event task with description and time","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * by default the isDone is false","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a event task with description, time and isDone","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Event(String description, LocalDateTime at, boolean isDone, LocalDateTime finishTime) {","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(description, isDone, finishTime);","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LocalDateTime getTaskTime() {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return at;","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"    public void updateTask(LocalDateTime newValue){","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"        this.at \u003d newValue;","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return TASK_TYPE;","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"        if (!super.equals(obj)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"            return false;","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"        if (this.getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Event e \u003d (Event) obj;","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this.at.equals(e.at);","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\")) + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Ruiting1":11,"-":57}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.task;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a task in the taskList","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"    private static final String TASK_TYPE \u003d \"A\";","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private String description;","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private LocalDateTime taskTime \u003d LocalDateTime.of(2000, 1, 1, 0, 0);","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private LocalDateTime finishTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"     * Constructor of the Task when create without done status and finishTime","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"     * Constructor of the Task when create with done status and finishTime","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Task(String description, boolean isDone, LocalDateTime finishTime) {","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            this.finishTime \u003d finishTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LocalDateTime getFinishTime() {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return finishTime \u003d\u003d null ? LocalDateTime.of(9999, 1, 1, 0, 0) : this.finishTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Gets the displayed icon from isDone status","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return a string icon to display the status","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        //return (isDone ? \"\\u2714\" : \"\\u2718\"); //return tick or X symbols","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return (isDone ? \"Done\" + \" : \" + finishTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"))","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : \"X\"); //return tick or X symbols","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Marks a task as done status","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param finishTime","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void markAsDone(LocalDateTime finishTime) {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.finishTime \u003d finishTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return description;","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return isDone;","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return TASK_TYPE;","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public LocalDateTime getTaskTime() {","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return taskTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"    public void updateTask(String newValue) {","lastModifiedDate":"2022-02-20"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"        this.description \u003d newValue;","lastModifiedDate":"2022-02-20"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"    public void updateTask(LocalDateTime newValue){","lastModifiedDate":"2022-02-20"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"        this.taskTime \u003d newValue;","lastModifiedDate":"2022-02-20"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Task otherTask \u003d (Task) obj;","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return obj \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                || (obj instanceof Task // instanceof handles nulls","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherTask.description.equals(this.description)","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherTask.isDone \u003d\u003d this.isDone","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherTask.taskTime.equals(this.taskTime));","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Ruiting1":20,"-":83}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.task;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import java.util.List;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A list of tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Construct an empty taskList.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    public TaskList() {","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * z","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Construct a taskList with the given tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public TaskList(Task[] tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        final List\u003cTask\u003e initialTasks \u003d Arrays.asList(tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        taskList.addAll(initialTasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a taskList from the items in the given collection.","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param tasks a collection of tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public TaskList(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        taskList.addAll(tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a shallow copy of the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public TaskList(TaskList source) {","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        taskList.addAll(source.taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Adds a task to the list","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param toAdd the task to add","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addTask(Task toAdd) throws DuplicateTaskException {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        taskList.add(toAdd);","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * check if a task is already exist in the taskList","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param toCheck the task to check","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (task.equals(toCheck)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * gets the specific task by index in the list","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param taskIdx the index in the taskList","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @return a Task","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Task getTaskByIdx(int taskIdx) {","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return taskList.get(taskIdx - 1);","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Remove a task from a list based on Task Object","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param toRemove the Task to remove","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void removeTask(Task toRemove) {","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        taskList.remove(toRemove);","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"Ruiting1"},"content":"     * Remove a task from the list based on the index","lastModifiedDate":"2022-01-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"Ruiting1"},"content":"     * @param toRemoveIdx the index in the taskList","lastModifiedDate":"2022-01-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"Ruiting1"},"content":"    public void removeTask(int toRemoveIdx) {","lastModifiedDate":"2022-01-22"},{"lineNumber":98,"author":{"gitId":"Ruiting1"},"content":"        taskList.remove(toRemoveIdx);","lastModifiedDate":"2022-01-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"Ruiting1"},"content":"     * Remove a tasks set from a list based on {@link List} of {@link Task}","lastModifiedDate":"2022-01-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"Ruiting1"},"content":"     * @param toRemove the task set to remove","lastModifiedDate":"2022-01-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"Ruiting1"},"content":"    public void removeTasks(List\u003cTask\u003e toRemove) {","lastModifiedDate":"2022-01-22"},{"lineNumber":107,"author":{"gitId":"Ruiting1"},"content":"        taskList.removeAll(toRemove);","lastModifiedDate":"2022-01-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * gets the size of the taskList","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @return the int size","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return taskList.size();","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * gets taskList","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @return the tasklist","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return taskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * gets all the tasks in the taskList","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @return a new TaskList","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public TaskList getAllTasks() {","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return new TaskList(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * clear all the task in the tasklist","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void clear() {","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        taskList.clear();","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return taskList.iterator();","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Signals that an operation would have violated the \u0027no duplicates\u0027 task of the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static class DuplicateTaskException extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public DuplicateTaskException() {","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(\"There is a same task which already existed in the task list.\");","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":12,"-":145}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.task;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a todoTask","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String TASK_TYPE \u003d \"T\";","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a todoTask with description","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * by default the isDone is false","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a todoTask with description and isDone","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Todo(String description, boolean isDone, LocalDateTime finishTime) {","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(description, isDone, finishTime);","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return TASK_TYPE;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"        if (!super.equals(obj)) {","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"        if (this.getClass() !\u003d obj.getClass()) {","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"            return false;","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"        } else {","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"            return true;","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Ruiting1":8,"-":41}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.ui;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"public class DialogBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    private static final String FXML \u003d \"DialogBox.fxml\";","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    private Text dialog;","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    private Circle displayPicture;","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"    private HBox dialogBoxPane;","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"    private TextFlow textFlow;","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"    private DialogBox(String text, Image img, boolean isUser) {","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"        super(FXML);","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-08"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"        textFlow.setStyle(isUser ? \"-fx-background-color: #cde6c8\" : \"-fx-background-color: #ffffff\");","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-08"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"    private void flip() {","lastModifiedDate":"2022-02-08"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(dialogBoxPane.getChildren());","lastModifiedDate":"2022-02-08"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"        dialogBoxPane.getChildren().setAll(tmp);","lastModifiedDate":"2022-02-08"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"        dialogBoxPane.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-08"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-08"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"        return new DialogBox(text, img, true);","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-08"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"        var db \u003d new DialogBox(text, img, false);","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"        db.flip();","lastModifiedDate":"2022-02-08"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"        return db;","lastModifiedDate":"2022-02-08"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"Ruiting1":64}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.ui;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    private Stage stage;","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    private Ui ui;","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    private Storage storage;","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-08"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    //private Duke duke;","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"    private Image userImage;","lastModifiedDate":"2022-02-08"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"    private Image dukeImage;","lastModifiedDate":"2022-02-08"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage}, {@code Ui},","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"     * {@code Storage} and {@code TaskList}","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"    public MainWindow(Stage stage, Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2022-02-08"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"        super(FXML, stage);","lastModifiedDate":"2022-02-08"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-02-08"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-02-08"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-02-08"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"     * initialize the MainWindow","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-08"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"        userImage \u003d new Image(Duke.class.getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-08"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"        dukeImage \u003d new Image(Duke.class.getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-08"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-08"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-08"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"                DialogBox.getDukeDialog(\"hello\", dukeImage).getRoot(),","lastModifiedDate":"2022-02-08"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"                DialogBox.getDukeDialog(\"I am Duke\", dukeImage).getRoot()","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"        );","lastModifiedDate":"2022-02-08"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"    public void show() {","lastModifiedDate":"2022-02-08"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"        stage.show();","lastModifiedDate":"2022-02-08"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-08"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-08"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"    @FXML","lastModifiedDate":"2022-02-08"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"    private void handleUserInput() throws Storage.StorageOperationException {","lastModifiedDate":"2022-02-08"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-08"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"        Command c \u003d new Parser().parse(input);","lastModifiedDate":"2022-02-08"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"        c.setData(tasks);","lastModifiedDate":"2022-02-08"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"        String response \u003d c.execute();","lastModifiedDate":"2022-02-08"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"        //String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-08"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-08"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"                DialogBox.getUserDialog(input, userImage).getRoot(),","lastModifiedDate":"2022-02-08"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"                DialogBox.getDukeDialog(response, dukeImage).getRoot()","lastModifiedDate":"2022-02-08"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"        );","lastModifiedDate":"2022-02-08"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-08"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"        storage.save(tasks);","lastModifiedDate":"2022-02-08"},{"lineNumber":91,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":92,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"Ruiting1":92}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.ui;","lastModifiedDate":"2022-01-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Ui {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String SEPARATE_LINE \u003d \"_________________________________________________\";","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String ERROR_LOADING_MSG \u003d \"Failed to load this Duke Application from storage file.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"    private final Scanner in;","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    private final PrintStream out;","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Ui() {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this(System.in, System.out);","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"     * Constructor of Ui","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.out \u003d out;","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Prints the welcome message upon the start of the application.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"    public String showWelcome() {","lastModifiedDate":"2022-02-08"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"        return \"Hello from\\n\" + LOGO + SEPARATE_LINE","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"                + \"Hello! I am Duke\\nWhat can I do for you?\" + SEPARATE_LINE;","lastModifiedDate":"2022-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * read command from the userInput","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the string of user input","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        out.print(\"Enter Command: \");","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return line;","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"    public void showResponse(String commandResult) {","lastModifiedDate":"2022-02-08"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"        out.println(commandResult);","lastModifiedDate":"2022-02-08"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * show the divider line.","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void showLine() {","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        out.println(SEPARATE_LINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * show the error message","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"     *","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param message the passed message to show","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void showError(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        out.println(message);","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * show the loading error message to the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        out.print(ERROR_LOADING_MSG);","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Ruiting1":18,"-":61}},{"path":"src/main/java/duke/ui/UiPart.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"package duke.ui;","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"import java.net.URL;","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import duke.Duke;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"/**","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2022-02-08"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":" */","lastModifiedDate":"2022-02-08"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2022-02-08"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2022-02-08"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2022-02-08"},{"lineNumber":34,"author":{"gitId":"Ruiting1"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"Ruiting1"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"Ruiting1"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2022-02-08"},{"lineNumber":38,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":40,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":41,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2022-02-08"},{"lineNumber":42,"author":{"gitId":"Ruiting1"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2022-02-08"},{"lineNumber":43,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":44,"author":{"gitId":"Ruiting1"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2022-02-08"},{"lineNumber":45,"author":{"gitId":"Ruiting1"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2022-02-08"},{"lineNumber":46,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":47,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":48,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":49,"author":{"gitId":"Ruiting1"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"Ruiting1"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2022-02-08"},{"lineNumber":51,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":52,"author":{"gitId":"Ruiting1"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2022-02-08"},{"lineNumber":53,"author":{"gitId":"Ruiting1"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2022-02-08"},{"lineNumber":54,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":55,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":56,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":57,"author":{"gitId":"Ruiting1"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2022-02-08"},{"lineNumber":58,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":59,"author":{"gitId":"Ruiting1"},"content":"    public T getRoot() {","lastModifiedDate":"2022-02-08"},{"lineNumber":60,"author":{"gitId":"Ruiting1"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2022-02-08"},{"lineNumber":61,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":62,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":63,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":64,"author":{"gitId":"Ruiting1"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2022-02-08"},{"lineNumber":65,"author":{"gitId":"Ruiting1"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2022-02-08"},{"lineNumber":66,"author":{"gitId":"Ruiting1"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2022-02-08"},{"lineNumber":67,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":68,"author":{"gitId":"Ruiting1"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2022-02-08"},{"lineNumber":69,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(location);","lastModifiedDate":"2022-02-08"},{"lineNumber":70,"author":{"gitId":"Ruiting1"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2022-02-08"},{"lineNumber":71,"author":{"gitId":"Ruiting1"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2022-02-08"},{"lineNumber":72,"author":{"gitId":"Ruiting1"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2022-02-08"},{"lineNumber":73,"author":{"gitId":"Ruiting1"},"content":"        try {","lastModifiedDate":"2022-02-08"},{"lineNumber":74,"author":{"gitId":"Ruiting1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-08"},{"lineNumber":75,"author":{"gitId":"Ruiting1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-08"},{"lineNumber":76,"author":{"gitId":"Ruiting1"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2022-02-08"},{"lineNumber":77,"author":{"gitId":"Ruiting1"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":78,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":79,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":80,"author":{"gitId":"Ruiting1"},"content":"    /**","lastModifiedDate":"2022-02-08"},{"lineNumber":81,"author":{"gitId":"Ruiting1"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2022-02-08"},{"lineNumber":82,"author":{"gitId":"Ruiting1"},"content":"     */","lastModifiedDate":"2022-02-08"},{"lineNumber":83,"author":{"gitId":"Ruiting1"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2022-02-08"},{"lineNumber":84,"author":{"gitId":"Ruiting1"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2022-02-08"},{"lineNumber":85,"author":{"gitId":"Ruiting1"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2022-02-08"},{"lineNumber":86,"author":{"gitId":"Ruiting1"},"content":"        URL fxmlFileUrl \u003d Duke.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2022-02-08"},{"lineNumber":87,"author":{"gitId":"Ruiting1"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2022-02-08"},{"lineNumber":88,"author":{"gitId":"Ruiting1"},"content":"    }","lastModifiedDate":"2022-02-08"},{"lineNumber":89,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":90,"author":{"gitId":"Ruiting1"},"content":"}","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"Ruiting1":90}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"\u003cHBox fx:id\u003d\"dialogBoxPane\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"598.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"      \u003cTextFlow fx:id\u003d\"textFlow\" maxWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"            \u003cInsets bottom\u003d\"15.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"            \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"            \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"      \u003c/TextFlow\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"      \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"#1f93ff00\" radius\u003d\"30.0\" stroke\u003d\"#c6c6c6\" strokeType\u003d\"OUTSIDE\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"Ruiting1":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ruiting1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":2,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":12,"author":{"gitId":"Ruiting1"},"content":"\u003cfx:root title\u003d\"Duke\" type\u003d\"Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":13,"author":{"gitId":"Ruiting1"},"content":"   \u003cscene\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":14,"author":{"gitId":"Ruiting1"},"content":"      \u003cScene\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":15,"author":{"gitId":"Ruiting1"},"content":"          \u003cstylesheets\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"Ruiting1"},"content":"              \u003cURL value\u003d\"@MainTheme.css\" /\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"          \u003c/stylesheets\u003e","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"Ruiting1"},"content":"         \u003croot\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":19,"author":{"gitId":"Ruiting1"},"content":"            \u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"600.0\"\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":20,"author":{"gitId":"Ruiting1"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":21,"author":{"gitId":"Ruiting1"},"content":"                    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"521.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":22,"author":{"gitId":"Ruiting1"},"content":"                    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"523.0\" layoutY\u003d\"658.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"                    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"657.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"                        \u003ccontent\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":25,"author":{"gitId":"Ruiting1"},"content":"                            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"655.0\" prefWidth\u003d\"599.0\" /\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":26,"author":{"gitId":"Ruiting1"},"content":"                        \u003c/content\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":27,"author":{"gitId":"Ruiting1"},"content":"                    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":28,"author":{"gitId":"Ruiting1"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":29,"author":{"gitId":"Ruiting1"},"content":"            \u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":30,"author":{"gitId":"Ruiting1"},"content":"         \u003c/root\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":31,"author":{"gitId":"Ruiting1"},"content":"      \u003c/Scene\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":32,"author":{"gitId":"Ruiting1"},"content":"   \u003c/scene\u003e","lastModifiedDate":"2022-02-08"},{"lineNumber":33,"author":{"gitId":"Ruiting1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-08"}],"authorContributionMap":{"Ruiting1":33}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"Ruiting1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DukeTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"Ruiting1":2,"-":10}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ParserTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Tests for 0-argument commands \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    //@Test","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    //public void parse_helpCommand_parsedCorrectly() {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    //    final String input \u003d \"help\";","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    //    parseAndAssertCommandType(input, HelpCommand.class);","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    //}","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    //@Test","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    //public void parse_clearCommand_parsedCorrectly() {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    //    final String input \u003d \"clear\";","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    //    parseAndAssertCommandType(input, ClearCommand.class);","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    //}","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parse_listCommand_parsedCorrectly() {","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final String input \u003d \"list\";","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        parseAndAssertCommandType(input, ListCommand.class);","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parse_exitCommand_parsedCorrectly() {","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String input \u003d \"bye\";","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        parseAndAssertCommandType(input, ExitCommand.class);","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses input and asserts the class/type of the returned command object.","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param input to be parsed","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param expectedCommandClass expected class of returned command","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return the parsed command object","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private \u003cT extends Command\u003e T parseAndAssertCommandType(String input, Class\u003cT\u003e expectedCommandClass) {","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final Command result \u003d parser.parse(input);","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return (T) result;","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"Ruiting1":5,"-":58}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"Ruiting1"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"Ruiting1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"Ruiting1"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"Ruiting1"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"Ruiting1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"Ruiting1"},"content":"import duke.storage.Storage.StorageOperationException;","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StorageTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Path testFolder;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"Ruiting1"},"content":"    private static final String TEST_DATA_FOLDER \u003d \"src/test/data\";","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void load_invalidFormat_exceptionThrown() throws Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // The file contains valid txt data, but does not match the task list format","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Storage storage \u003d getStorage(\"InvalidDuke.txt\");","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"Ruiting1"},"content":"        assertThrows(StorageOperationException.class, () -\u003e storage.load() ,","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"Ruiting1"},"content":"                \"StorageOperationException was expected\");","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Storage getStorage(String fileName) throws Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Storage(TEST_DATA_FOLDER + \"/\" + fileName);","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"Ruiting1":9,"-":21}}]
