[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"plugins {","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"repositories {","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"    mavenCentral()","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"dependencies {","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"e0373972"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"e0373972"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"e0373972"},"content":"test {","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"e0373972"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"e0373972"},"content":"    testLogging {","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"e0373972"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"e0373972"},"content":"        showExceptions true","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"e0373972"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"e0373972"},"content":"        showCauses true","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"e0373972"},"content":"        showStackTraces true","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"e0373972"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"e0373972"},"content":"application {","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"e0373972"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"e0373972"},"content":"shadowJar {","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"e0373972"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"e0373972"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"e0373972"},"content":"checkstyle {","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"e0373972"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"e0373972"},"content":"jar {","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"e0373972"},"content":"    manifest {","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"e0373972"},"content":"        attributes \u0027Main-Class\u0027: \u0027duke.Launcher\u0027","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"e0373972"},"content":"run{","lastModifiedDate":"2022-01-17"},{"lineNumber":65,"author":{"gitId":"e0373972"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-01-17"},{"lineNumber":66,"author":{"gitId":"e0373972"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-01-17"},{"lineNumber":67,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"e0373972":67}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"D|1|return book|2/12/2019 1800","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"T|1|afd","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"T|1|abc","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"T|0|daf","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"T|0|AER","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"D|0|return book|2/12/2021 1800","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"T|0|work from home","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"T|0|e","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"T|0|adf","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"e0373972":3,"-":6}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"@rem","lastModifiedDate":"2022-01-17"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-01-17"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"@rem","lastModifiedDate":"2022-01-17"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"@rem","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-01-17"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"@rem","lastModifiedDate":"2022-01-17"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-01-17"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-01-17"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-01-17"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-01-17"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"@rem","lastModifiedDate":"2022-01-17"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-01-17"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-17"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"@rem","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"@rem","lastModifiedDate":"2022-01-17"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-17"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-17"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-01-17"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":27,"author":{"gitId":"e0373972"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-01-17"},{"lineNumber":28,"author":{"gitId":"e0373972"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-01-17"},{"lineNumber":29,"author":{"gitId":"e0373972"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-01-17"},{"lineNumber":30,"author":{"gitId":"e0373972"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-01-17"},{"lineNumber":31,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":32,"author":{"gitId":"e0373972"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-01-17"},{"lineNumber":33,"author":{"gitId":"e0373972"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-01-17"},{"lineNumber":34,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":35,"author":{"gitId":"e0373972"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-01-17"},{"lineNumber":36,"author":{"gitId":"e0373972"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-01-17"},{"lineNumber":37,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":38,"author":{"gitId":"e0373972"},"content":"@rem Find java.exe","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"e0373972"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"e0373972"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-01-17"},{"lineNumber":42,"author":{"gitId":"e0373972"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-01-17"},{"lineNumber":43,"author":{"gitId":"e0373972"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-01-17"},{"lineNumber":44,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":45,"author":{"gitId":"e0373972"},"content":"echo.","lastModifiedDate":"2022-01-17"},{"lineNumber":46,"author":{"gitId":"e0373972"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-01-17"},{"lineNumber":47,"author":{"gitId":"e0373972"},"content":"echo.","lastModifiedDate":"2022-01-17"},{"lineNumber":48,"author":{"gitId":"e0373972"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"e0373972"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"e0373972"},"content":"goto fail","lastModifiedDate":"2022-01-17"},{"lineNumber":52,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":53,"author":{"gitId":"e0373972"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-01-17"},{"lineNumber":54,"author":{"gitId":"e0373972"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-01-17"},{"lineNumber":55,"author":{"gitId":"e0373972"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-01-17"},{"lineNumber":56,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":57,"author":{"gitId":"e0373972"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-01-17"},{"lineNumber":58,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":59,"author":{"gitId":"e0373972"},"content":"echo.","lastModifiedDate":"2022-01-17"},{"lineNumber":60,"author":{"gitId":"e0373972"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-01-17"},{"lineNumber":61,"author":{"gitId":"e0373972"},"content":"echo.","lastModifiedDate":"2022-01-17"},{"lineNumber":62,"author":{"gitId":"e0373972"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-17"},{"lineNumber":63,"author":{"gitId":"e0373972"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-17"},{"lineNumber":64,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":65,"author":{"gitId":"e0373972"},"content":"goto fail","lastModifiedDate":"2022-01-17"},{"lineNumber":66,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":67,"author":{"gitId":"e0373972"},"content":":execute","lastModifiedDate":"2022-01-17"},{"lineNumber":68,"author":{"gitId":"e0373972"},"content":"@rem Setup the command line","lastModifiedDate":"2022-01-17"},{"lineNumber":69,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":70,"author":{"gitId":"e0373972"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-01-17"},{"lineNumber":71,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":72,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":73,"author":{"gitId":"e0373972"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-01-17"},{"lineNumber":74,"author":{"gitId":"e0373972"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-01-17"},{"lineNumber":75,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":76,"author":{"gitId":"e0373972"},"content":":end","lastModifiedDate":"2022-01-17"},{"lineNumber":77,"author":{"gitId":"e0373972"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-17"},{"lineNumber":78,"author":{"gitId":"e0373972"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-01-17"},{"lineNumber":79,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":80,"author":{"gitId":"e0373972"},"content":":fail","lastModifiedDate":"2022-01-17"},{"lineNumber":81,"author":{"gitId":"e0373972"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-01-17"},{"lineNumber":82,"author":{"gitId":"e0373972"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-01-17"},{"lineNumber":83,"author":{"gitId":"e0373972"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-01-17"},{"lineNumber":84,"author":{"gitId":"e0373972"},"content":"exit /b 1","lastModifiedDate":"2022-01-17"},{"lineNumber":85,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":86,"author":{"gitId":"e0373972"},"content":":mainEnd","lastModifiedDate":"2022-01-17"},{"lineNumber":87,"author":{"gitId":"e0373972"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-01-17"},{"lineNumber":88,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":89,"author":{"gitId":"e0373972"},"content":":omega","lastModifiedDate":"2022-01-17"}],"authorContributionMap":{"e0373972":89}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-02-06"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-02-06"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-02-06"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-02-06"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-02-06"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-06"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"import java.util.Collections;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"class DialogBox extends HBox {","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"    private Text dialog;","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"e0373972"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"e0373972"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"e0373972"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"e0373972"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"e0373972"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"e0373972"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"e0373972"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"e0373972"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"e0373972"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"e0373972"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"e0373972"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"e0373972"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"e0373972"},"content":"        Circle clip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2022-02-06"},{"lineNumber":42,"author":{"gitId":"e0373972"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2022-02-06"},{"lineNumber":43,"author":{"gitId":"e0373972"},"content":"        this.setSpacing(10);","lastModifiedDate":"2022-02-06"},{"lineNumber":44,"author":{"gitId":"e0373972"},"content":"        this.setBackground(new Background(new BackgroundFill(","lastModifiedDate":"2022-02-06"},{"lineNumber":45,"author":{"gitId":"e0373972"},"content":"                Color.rgb(0, 255, 255), new CornerRadii(10), new Insets(5, 5, 5, 5))));","lastModifiedDate":"2022-02-06"},{"lineNumber":46,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"e0373972"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"e0373972"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"e0373972"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"e0373972"},"content":"    private void flip() {","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"e0373972"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"e0373972"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"e0373972"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"e0373972"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"e0373972"},"content":"    static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"e0373972"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"e0373972"},"content":"    static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"e0373972"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-01-28"},{"lineNumber":64,"author":{"gitId":"e0373972"},"content":"        db.flip();","lastModifiedDate":"2022-01-28"},{"lineNumber":65,"author":{"gitId":"e0373972"},"content":"        return db;","lastModifiedDate":"2022-01-28"},{"lineNumber":66,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":67,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"e0373972":67}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"import duke.command.ViewSchedulesCommand;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.NoSuchFileException;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs Duke application.","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"     * @param filePath The file path of the save file for tasks storage.","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        TaskList tasks;","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            if (!(e instanceof NoSuchFileException)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"e0373972"},"content":"                ui.showLoadingError(\"☹ OOPS!!! Cannot load tasks. May overwrite old tasks, if continue\");","lastModifiedDate":"2022-02-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        parser.capture(\"todo\", ToDo.getCommand(tasks, storage));","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        parser.capture(\"event\", Event.getCommand(tasks, storage));","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        parser.capture(\"deadline\", Deadline.getCommand(tasks, storage));","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        parser.capture(\"list\", new ListCommand(tasks));","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        parser.capture(\"done\", new DoneCommand(tasks, storage));","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        parser.capture(\"delete\", new DeleteCommand(tasks, storage));","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        parser.capture(\"bye\", new ByeCommand());","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        parser.capture(\"find\", new FindCommand(tasks));","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"e0373972"},"content":"        parser.capture(\"viewschedules\", new ViewSchedulesCommand(tasks));","lastModifiedDate":"2022-02-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    static void checkWord(String keyWord) throws DukeCheckLineException {","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String keyword \u003d keyWord.toLowerCase();","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!keyword.equals(\"list\") \u0026\u0026 !keyword.equals(\"bye\")","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 !keyword.equals(\"todo\") \u0026\u0026 !keyword.equals(\"done\")","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 !keyword.equals(\"event\") \u0026\u0026 !keyword.equals(\"deadline\")","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"e0373972"},"content":"                \u0026\u0026 !keyword.equals(\"delete\") \u0026\u0026 !keyword.equals(\"find\")","lastModifiedDate":"2022-02-07"},{"lineNumber":61,"author":{"gitId":"e0373972"},"content":"                \u0026\u0026 !keyword.equals(\"viewschedules\")) {","lastModifiedDate":"2022-02-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new DukeCheckLineException();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Run Duke application.","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void run() {","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        while (!isExit \u0026\u0026 ui.hasNextLine()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            String[] fullCommand \u003d ui.readCommand().split(\" \");","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            ui.printWithLine(List.of());","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                checkWord(fullCommand[0]);","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                Command c \u003d parser.parse(fullCommand);","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                ui.printCommand(c.run(fullCommand));","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"e0373972"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"e0373972"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"e0373972"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"e0373972"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            } catch (DukeCheckLineException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                ui.showError(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":96,"author":{"gitId":"e0373972"},"content":"    String getResponse(String input) {","lastModifiedDate":"2022-01-28"},{"lineNumber":97,"author":{"gitId":"e0373972"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":98,"author":{"gitId":"e0373972"},"content":"            String[] fullCommand \u003d input.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":99,"author":{"gitId":"e0373972"},"content":"            Command command \u003d parser.parse(fullCommand);","lastModifiedDate":"2022-01-28"},{"lineNumber":100,"author":{"gitId":"e0373972"},"content":"            return String.join(\"\\n\", command.run(fullCommand));","lastModifiedDate":"2022-01-28"},{"lineNumber":101,"author":{"gitId":"e0373972"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":102,"author":{"gitId":"e0373972"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-28"},{"lineNumber":103,"author":{"gitId":"e0373972"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":104,"author":{"gitId":"e0373972"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-28"},{"lineNumber":105,"author":{"gitId":"e0373972"},"content":"            return e.getMessage();","lastModifiedDate":"2022-01-28"},{"lineNumber":106,"author":{"gitId":"e0373972"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":107,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":108,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":109,"author":{"gitId":"e0373972"},"content":"    boolean isExit(String input) {","lastModifiedDate":"2022-01-28"},{"lineNumber":110,"author":{"gitId":"e0373972"},"content":"        String[] fullCommand \u003d input.split(\" \");","lastModifiedDate":"2022-01-28"},{"lineNumber":111,"author":{"gitId":"e0373972"},"content":"        try {","lastModifiedDate":"2022-02-04"},{"lineNumber":112,"author":{"gitId":"e0373972"},"content":"            return parser.parse(fullCommand).isExit();","lastModifiedDate":"2022-01-28"},{"lineNumber":113,"author":{"gitId":"e0373972"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-02-04"},{"lineNumber":114,"author":{"gitId":"e0373972"},"content":"            return false;","lastModifiedDate":"2022-02-04"},{"lineNumber":115,"author":{"gitId":"e0373972"},"content":"        }","lastModifiedDate":"2022-02-04"},{"lineNumber":116,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"e0373972":34,"-":83}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-02-04"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"        super(message);","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"e0373972":3,"-":4}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"public class Launcher {","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"     * Runs Duke command line arguments.","lastModifiedDate":"2022-01-29"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"     *","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"e0373972":18}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"public class Main extends Application {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"    private Duke duke \u003d new Duke(\"tasks.txt\");","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"        try {","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"            stage.getIcons().add(new Image(\"/images/Icon.png\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"e0373972"},"content":"            stage.setTitle(\"Wenwei\");","lastModifiedDate":"2022-02-06"},{"lineNumber":28,"author":{"gitId":"e0373972"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"e0373972"},"content":"            stage.show();","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"e0373972"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"e0373972"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"e0373972"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"e0373972":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"/**","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":" */","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"    private TextField userInput;","lastModifiedDate":"2022-01-28"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"    private Button sendButton;","lastModifiedDate":"2022-01-28"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"    private Duke duke;","lastModifiedDate":"2022-01-28"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"e0373972"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":28,"author":{"gitId":"e0373972"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-01-28"},{"lineNumber":29,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"e0373972"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":31,"author":{"gitId":"e0373972"},"content":"    public void initialize() {","lastModifiedDate":"2022-01-28"},{"lineNumber":32,"author":{"gitId":"e0373972"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"e0373972"},"content":"        showWelcome();","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"e0373972"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"e0373972"},"content":"        duke \u003d d;","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":39,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":40,"author":{"gitId":"e0373972"},"content":"    private void showWelcome() {","lastModifiedDate":"2022-01-28"},{"lineNumber":41,"author":{"gitId":"e0373972"},"content":"        DialogBox welcome \u003d DialogBox.getDukeDialog(\"Hello! I\u0027m Duke\\n What can I do for you?\", dukeImage);","lastModifiedDate":"2022-01-28"},{"lineNumber":42,"author":{"gitId":"e0373972"},"content":"        dialogContainer.getChildren().add(welcome);","lastModifiedDate":"2022-01-28"},{"lineNumber":43,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":44,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":45,"author":{"gitId":"e0373972"},"content":"    /**","lastModifiedDate":"2022-01-28"},{"lineNumber":46,"author":{"gitId":"e0373972"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"e0373972"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"e0373972"},"content":"     */","lastModifiedDate":"2022-01-28"},{"lineNumber":49,"author":{"gitId":"e0373972"},"content":"    @FXML","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"e0373972"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"e0373972"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"e0373972"},"content":"        if (duke.isExit(input)) {","lastModifiedDate":"2022-01-28"},{"lineNumber":53,"author":{"gitId":"e0373972"},"content":"            Platform.exit();","lastModifiedDate":"2022-01-28"},{"lineNumber":54,"author":{"gitId":"e0373972"},"content":"            return;","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"e0373972"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"e0373972"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"e0373972"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-01-28"},{"lineNumber":58,"author":{"gitId":"e0373972"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"e0373972"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"e0373972"},"content":"        );","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"e0373972"},"content":"        userInput.clear();","lastModifiedDate":"2022-01-28"},{"lineNumber":62,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"e0373972":63}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Parser {","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private Map\u003cString, Command\u003e commands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Capture a command to be returned later.","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"     * @param name    The key word that trigger the command.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"     * @param command For mapping the name and to be returned later.","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void capture(String name, Command command) {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        commands.put(name, command);","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * To check and return an appropriate command.","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"     * @param fullCommand The input from user.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"     * @return Command to use for the next processing.","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"e0373972"},"content":"    public Command parse(String[] fullCommand) throws DukeException {","lastModifiedDate":"2022-02-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Command command \u003d commands.get(fullCommand[0].toLowerCase());","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"e0373972"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2022-02-04"},{"lineNumber":30,"author":{"gitId":"e0373972"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-02-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return command;","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"e0373972":8,"-":26}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Storage {","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private Path path;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public Storage(String fileLocation) {","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        path \u003d Paths.get(fileLocation);","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Save the provided list of lines to a file.","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"     * @param lines List of lines to save.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"     * @throws IOException If the task cannot be recorded.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void store(List\u003cString\u003e lines) throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Files.write(path, lines);","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Read the file and return the list of lines.","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"e0373972"},"content":"     * @return List of lines loaded.","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"e0373972"},"content":"     * @throws IOException If the lines cannot be loaded.","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    List\u003cString\u003e load() throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return Files.readAllLines(path);","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"e0373972":4,"-":31}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Ui {","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        printWithLine(List.of(\"Hello from\\n\" + logo));","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        printWithLine(List.of(\"Hello! I\u0027m Duke\", \"What can I do for you?\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Return whether there is another line of input.","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"     * @return Whether there is another line of input.","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    boolean hasNextLine() {","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return in.hasNextLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Read a line from the user input.","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"e0373972"},"content":"     * @return Next line of input.","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    String readCommand() {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void showLoadingError(String message) {","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        printWithLine(List.of());","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        printWithLine(List.of(message));","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Show an error message.","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"e0373972"},"content":"     * @param message Error message.","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void showError(String message) {","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        printWithLine(List.of(message));","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Show output of a list messages.","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"e0373972"},"content":"     * @param messages The list of messages.","lastModifiedDate":"2022-01-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static void printCommand(List\u003cString\u003e messages) {","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            printWithLine(List.of(message));","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"e0373972"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":64,"author":{"gitId":"e0373972"},"content":"     * Show output of a list of lines.","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"e0373972"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"e0373972"},"content":"     * @param messages List of lines.","lastModifiedDate":"2022-01-23"},{"lineNumber":67,"author":{"gitId":"e0373972"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static void printWithLine(List\u003cString\u003e messages) {","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            System.out.println(\"   \" + message);","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        System.out.println(\"   _____________________________________\");","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"e0373972":9,"-":65}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * Returns the message to user when he/she leave.","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"     * @param line Array of string input from user.","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"     * @return Message to show the user.","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e run(String[] line) {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return List.of(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Return true to exit the program.","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"     * @return True, when execute this command to exit the program.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"e0373972":4,"-":23}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"import java.util.List;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Returns the message to user after the command is run.","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"     * @param fullCommand Array of command from the user input.","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"     * @return Message to the user.","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    List\u003cString\u003e run(String[] fullCommand) throws DukeException, IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Return false when execute this command.","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"     * @return False by default, the program should not exit when run this command.","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    default boolean isExit() {","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"e0373972":5,"-":21}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public DeleteCommand(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Remove a task according to the index input by the user.","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"     * @param fullCommand Array of command from the user input.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"     * @return Message to the user.","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"     * @throws NumberFormatException Catch an error if the user input is not a number.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"     * @throws IndexOutOfBoundsException Catch an error if the input index is out of bound.","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"     * @throws IOException If the task cannot be recorded.","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e run(String[] fullCommand) throws NumberFormatException, IndexOutOfBoundsException, IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Task deleteItem \u003d tasks.remove(Integer.parseInt(fullCommand[1]) - 1);","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            storage.store(tasks.convertAsLines());","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return List.of(\"Noted. I\u0027ve removed this task: \" + System.lineSeparator() + \"     \" + deleteItem);","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return List.of(\"☹ OOPS!!! This is not a number: \" + fullCommand[1]);","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return List.of(\"☹ OOPS!!! The index out of bound: \" + fullCommand[1]);","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"e0373972":6,"-":34}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public DoneCommand(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Marks the task as done and returns the message to user.","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"     * @param fullCommand Array of command from the user input.","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"     * @return A message to user.","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"     * @throws NumberFormatException Catch an error if the user input is not a number.","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"     * @throws IndexOutOfBoundsException Catch an error if the input index is out of bound.","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"     * @throws IOException If the task cannot be recorded.","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e run(String[] fullCommand) throws NumberFormatException, IndexOutOfBoundsException, IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Task markItem \u003d tasks.get(Integer.parseInt(fullCommand[1]) - 1);","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            markItem.markAsDone();","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            storage.store(tasks.convertAsLines());","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return List.of(\"Nice! I\u0027ve marked this task as done: \" + System.lineSeparator() + \"     \" + markItem);","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return List.of(\"☹ OOPS!!! This is not a number: \" + fullCommand[1]);","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return List.of(\"☹ OOPS!!! The index out of bound: \" + fullCommand[1]);","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"e0373972":6,"-":35}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public FindCommand(TaskList tasks) {","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Return a message with the matching task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"     * @param fullCommand Array of command from the user input.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"     * @return A matching task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e run(String[] fullCommand) {","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String keyWord \u003d String.join(\" \", Arrays.copyOfRange(fullCommand, 1, fullCommand.length));","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        messages.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            if (tasks.get(i).toString().contains(keyWord)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                count++;","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                messages.add(\"    \" + count + \".\" + tasks.get(i));","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return messages;","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"e0373972":3,"-":33}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public ListCommand(TaskList tasks) {","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Return a message with the task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"     * @param fullCommand Array of command from the user input.","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"     * @return Message to the user.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e run(String[] fullCommand) {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        messages.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            messages.add((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return messages;","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"e0373972":3,"-":27}},{"path":"src/main/java/duke/command/ViewSchedulesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke.command;","lastModifiedDate":"2022-02-07"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import duke.task.Task;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-02-07"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"import duke.task.Time;","lastModifiedDate":"2022-02-07"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-02-07"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-07"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-07"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-02-07"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"import java.util.List;","lastModifiedDate":"2022-02-07"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"public class ViewSchedulesCommand implements Command {","lastModifiedDate":"2022-02-07"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-02-07"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"    public ViewSchedulesCommand(TaskList tasks) {","lastModifiedDate":"2022-02-07"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-02-07"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"    @Override","lastModifiedDate":"2022-02-07"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"    public List\u003cString\u003e run(String[] fullComand) {","lastModifiedDate":"2022-02-07"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"        LocalDate dateFormat;","lastModifiedDate":"2022-02-07"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"        String dateString \u003d String.join(\" \", Arrays.copyOfRange(fullComand, 1, fullComand.length));","lastModifiedDate":"2022-02-07"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"        try {","lastModifiedDate":"2022-02-07"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"            dateFormat \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2022-02-07"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-07"},{"lineNumber":27,"author":{"gitId":"e0373972"},"content":"            return List.of(\"Please enter the date in the format d/M/yyyy e.g. 06/02/2022\");","lastModifiedDate":"2022-02-07"},{"lineNumber":28,"author":{"gitId":"e0373972"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":29,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":30,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e message \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-07"},{"lineNumber":31,"author":{"gitId":"e0373972"},"content":"        message.add(\"Here is the schedule for \" + dateString + \":\");","lastModifiedDate":"2022-02-07"},{"lineNumber":32,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":33,"author":{"gitId":"e0373972"},"content":"        int countNumber \u003d 0;","lastModifiedDate":"2022-02-07"},{"lineNumber":34,"author":{"gitId":"e0373972"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"e0373972"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"e0373972"},"content":"            if (task instanceof Time \u0026\u0026 ((Time) task).isOn(dateFormat)) {","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"e0373972"},"content":"                countNumber++;","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"e0373972"},"content":"                message.add(countNumber + \".\" + task);","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"e0373972"},"content":"            }","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"e0373972"},"content":"        }","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"e0373972"},"content":"        return message;","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"e0373972":43}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.DukeCheckLineException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Deadline extends Time {","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public Deadline(String description, String time) {","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        super(description, time);","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void checkDescription(int index) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"            throw new DukeException(\"☹ OOPS!!!, the description cannot be empty.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void checkTime(int index) throws DukeCheckLineException {","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new DukeCheckLineException();","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * To generate a Deadline detail and store in the tasks list according to user input.","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"e0373972"},"content":"     * @param tasks The list of tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"e0373972"},"content":"     * @param storage To save the deadline detail of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"e0373972"},"content":"     * @return A command which generates deadlines task.","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Command getCommand(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return fullCommand -\u003e {","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            List\u003cString\u003e commandList \u003d List.of(fullCommand);","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            int position \u003d commandList.indexOf(\"/by\");","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                checkDescription(position);","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                checkTime(position);","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                String description \u003d String.join(\" \", commandList.subList(1, position));","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                String time \u003d String.join(\" \", commandList.subList(position + 1, fullCommand.length));","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                Task deadlineTask \u003d new Deadline(description, time);","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                tasks.add(deadlineTask);","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                storage.store(tasks.convertAsLines());","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"e0373972"},"content":"                return List.of(\"Got it. I\u0027ve added this task: \" + System.lineSeparator()","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"e0373972"},"content":"                        + \"     \" + deadlineTask + System.lineSeparator()","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"e0373972"},"content":"                        + \"   Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                return List.of(\"☹ OOPS!!! The description of a \" + \"Deadline\" + \" cannot be empty.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            } catch (DukeCheckLineException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                return List.of(\"☹ OOPS!!! A deadline must have a time.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Return a list of strings that can be saved.","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"e0373972"},"content":"     * @return A task list for saving.","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getList() {","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        list.add(\"D\");","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        list.addAll(super.getList());","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        list.add(convertSaveTimeString());","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return list;","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Return a list of strings to user.","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"e0373972"},"content":"     * @return This string task.","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + convertTimeString() + \")\";","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"e0373972":10,"-":72}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import duke.DukeCheckLineException;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Event extends Time {","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        super(description, time);","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void checkDescription(int index) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"            throw new DukeException(\"☹ OOPS!!!, the description cannot be empty.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void checkTime(int index) throws DukeCheckLineException {","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new DukeCheckLineException();","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"e0373972"},"content":"     * To generate an Event detail and store in the tasks list according to user input.","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"e0373972"},"content":"     * @param tasks The list of tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"e0373972"},"content":"     * @param storage To save the event detail of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return a command which generates events task.","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Command getCommand(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return fullCommand -\u003e {","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            List\u003cString\u003e commandList \u003d List.of(fullCommand);","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            int position \u003d commandList.indexOf(\"/at\");","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                checkDescription(position);","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                checkTime(position);","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                String description \u003d String.join(\" \", commandList.subList(1, position));","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                String time \u003d String.join(\" \", commandList.subList(position + 1, fullCommand.length));","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                Task eventTask \u003d new Event(description, time);","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                tasks.add(eventTask);","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                storage.store(tasks.convertAsLines());","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"e0373972"},"content":"                return List.of(\"Got it. I\u0027ve added this task: \" + System.lineSeparator()","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"e0373972"},"content":"                        + \"     \" + eventTask + System.lineSeparator()","lastModifiedDate":"2022-01-17"},{"lineNumber":50,"author":{"gitId":"e0373972"},"content":"                        + \"   Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                return List.of(\"☹ OOPS!!! The description of a \" + \"Event\" + \" cannot be empty.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            } catch (DukeCheckLineException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                return List.of(\"☹ OOPS!!! An event must have a time.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Return a list of strings that can be saved.","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"e0373972"},"content":"     * @return A task list for saving.","lastModifiedDate":"2022-01-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getList() {","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        list.add(\"E\");","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        list.addAll(super.getList());","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        list.add(convertSaveTimeString());","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return list;","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Return a list of strings to user.","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"e0373972"},"content":"     * @return This string task.","lastModifiedDate":"2022-01-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + convertTimeString() + \")\";","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"e0373972":10,"-":72}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Task {","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Marks this task as done.","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Display the status icon of this task (\" \" or \"x\" symbols) to the user.","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"     * @return Status icon.","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return (isDone ? \"x\" : \" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Return a list of strings to user.","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"e0373972"},"content":"     * @return This string task.","lastModifiedDate":"2022-01-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return \"[\" + getStatusIcon() + \"]\" + description;","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Return a list of strings that can be saved.","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"e0373972"},"content":"     * @return A task list for saving.","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getList() {","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return List.of(isDone ? \"1\" : \"0\", description);","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"e0373972":4,"-":45}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TaskList {","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Constructs a new empty task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parse the given string to a task.","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"     * @param line Line to parse.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"     * @return Parsed task.","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String[] load \u003d line.split(\"\\\\|\");","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Task task;","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        switch (load[0]) {","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        case \"T\":","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            task \u003d new ToDo(load[2]);","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        case \"D\":","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            task \u003d new Deadline(load[2], load[3]);","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        case \"E\":","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            task \u003d new Event(load[2], load[3]);","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return null;","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (load[1].equals(\"1\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            task.markAsDone();","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return task;","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs a task list with the parsed tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"e0373972"},"content":"     * @param lines List of lines to parse tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public TaskList(List\u003cString\u003e lines) {","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (String line : lines) {","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            tasks.add(parseTask(line));","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts the task list into a list of lines for saving.","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"e0373972"},"content":"     * @return A list of converted tasks.","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e convertAsLines() {","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        List\u003cString\u003e saveIn \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            saveIn.add(getSaveIn(task));","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return saveIn;","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts the provided task to a string for saving.","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"e0373972"},"content":"     * @param task To convert into a string.","lastModifiedDate":"2022-01-23"},{"lineNumber":72,"author":{"gitId":"e0373972"},"content":"     * @return String for saving.","lastModifiedDate":"2022-01-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private String getSaveIn(Task task) {","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        StringJoiner joiner \u003d new StringJoiner(\"|\");","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (String stringLine : task.getList()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            joiner.add(stringLine);","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return joiner.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"e0373972"},"content":"     * @param task Task to add.","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Remove a task from the task list according to index provided by the user.","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"e0373972"},"content":"     * @param index Position of the task in the list.","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"e0373972"},"content":"     * @return The removed task.","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Task remove(int index) {","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return tasks.remove(index);","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Return the task of given index in the list.","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"e0373972"},"content":"     * @param index Position of the task in the list.","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"e0373972"},"content":"     * @return The requested task.","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Return of the size of the task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"e0373972"},"content":"     * @return The size of the task list.","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public int size() {","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"e0373972":12,"-":107}},{"path":"src/main/java/duke/task/Time.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Time extends Task {","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private LocalDateTime time;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    Time(String description, String timeString) {","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        time \u003d LocalDateTime.parse(timeString, formatter);","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * To convert the time for saving.","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"     * @return Time as a string.","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    String convertSaveTimeString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return formatter.format(time);","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Send a converted time string to display to the user.","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"e0373972"},"content":"     * @return A formatted timing.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    String convertTimeString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\").format(time);","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"e0373972"},"content":"    /**","lastModifiedDate":"2022-02-07"},{"lineNumber":35,"author":{"gitId":"e0373972"},"content":"     * Return whether this task is on the given date.","lastModifiedDate":"2022-02-07"},{"lineNumber":36,"author":{"gitId":"e0373972"},"content":"     *","lastModifiedDate":"2022-02-07"},{"lineNumber":37,"author":{"gitId":"e0373972"},"content":"     * @param date Date which the task is checked to be on.","lastModifiedDate":"2022-02-07"},{"lineNumber":38,"author":{"gitId":"e0373972"},"content":"     * @return If the date match the given date, return the task.","lastModifiedDate":"2022-02-07"},{"lineNumber":39,"author":{"gitId":"e0373972"},"content":"     */","lastModifiedDate":"2022-02-07"},{"lineNumber":40,"author":{"gitId":"e0373972"},"content":"    public boolean isOn(LocalDate date) {","lastModifiedDate":"2022-02-07"},{"lineNumber":41,"author":{"gitId":"e0373972"},"content":"        return time.toLocalDate().isEqual(date);","lastModifiedDate":"2022-02-07"},{"lineNumber":42,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-02-07"},{"lineNumber":43,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"e0373972":13,"-":31}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void checkDescription(String[] command) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"            throw new DukeException(\"☹ OOPS!!!, the description cannot be empty.\");","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * To generate a Todo detail and store in the tasks list according to user input.","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"     * @param tasks The list of tasks;","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"e0373972"},"content":"     * @param storage To save the todo detail of the task.","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"e0373972"},"content":"     * @return A command which generates todo task.","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Command getCommand(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return fullCommand -\u003e {","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                checkDescription(fullCommand);","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String[] keyword \u003d Arrays.copyOfRange(fullCommand, 1, fullCommand.length);","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                Task todoTask \u003d new ToDo(String.join(\" \", keyword));","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                tasks.add(todoTask);","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                storage.store(tasks.convertAsLines());","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"e0373972"},"content":"                return List.of(\"Got it. I\u0027ve added this task: \" + System.lineSeparator()","lastModifiedDate":"2022-01-17"},{"lineNumber":39,"author":{"gitId":"e0373972"},"content":"                        + \"     \" + todoTask + System.lineSeparator()","lastModifiedDate":"2022-01-17"},{"lineNumber":40,"author":{"gitId":"e0373972"},"content":"                        + \"   Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-01-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                return List.of(\"☹ OOPS!!! The description of a \" + \"todo\" + \" cannot be empty.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Return a list of strings to user.","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"e0373972"},"content":"     * @return This string task.","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Return a list of strings that can be saved.","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"e0373972"},"content":"     * @return A task list for saving.","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getList() {","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        list.add(\"T\");","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        list.addAll(super.getList());","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return list;","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"e0373972":10,"-":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"    \u003cTextFlow snapToPixel\u003d\"false\"\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"        \u003cText fx:id\u003d\"dialog\" fontSmoothingType\u003d\"LCD\"/\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"          \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"    \u003c/TextFlow\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"e0373972":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2022-01-28"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"            fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"                vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"e0373972":20}},{"path":"src/test/java/duke/DukeCheckLineExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"class DukeCheckLineExceptionTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"    void testDukeCheckLineException() {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"        DukeCheckLineException exception \u003d new DukeCheckLineException();","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"        assertNull(exception.getMessage());","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"e0373972":13}},{"path":"src/test/java/duke/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-04"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"class DukeExceptionTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"    void testDukeException() {","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"        DukeException exception \u003d new DukeException(\"Test\");","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"        assertEquals(\"Test\", exception.getMessage());","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"e0373972":13}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import duke.command.Command;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"class ParserTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"    private Parser parser;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"    @BeforeEach","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"    void  elementary() {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"        parser.capture(\"wang\", fullCommand -\u003e List.of(fullCommand[0]));","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"        parser.capture(\"wenwei\", fullCommand -\u003e List.of(fullCommand[1]));","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"    void parserValidCommandWang() throws DukeException, IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"        Command command \u003d parser.parse(new String[]{\"wang\"});","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"        assertEquals(\"wang\", command.run(new String[]{\"wang\", \"input\"}).get(0));","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"e0373972"},"content":"    void parserValidCommandWenwei() throws DukeException, IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"e0373972"},"content":"        Command command \u003d parser.parse(new String[]{\"wenwei\"});","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"e0373972"},"content":"        assertEquals(\"input\", command.run(new String[]{\"wenwei\", \"input\"}).get(0));","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"e0373972":34}},{"path":"src/test/java/duke/StorageTemp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class StorageTemp extends Storage {","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e stored;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public StorageTemp() {","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"StorageTemp.txt\");","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void store(List\u003cString\u003e lines) {","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        stored \u003d lines;","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"e0373972":1,"-":15}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"class StorageTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"    private static final String location \u003d \"StorageTest.txt\";","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"    private static final List\u003cString\u003e data \u003d List.of(\"This is a test file.\", \"You can delete it.\");","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"    void storeAndLoadTest() throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"        new Storage(location).store(data);","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e loadData \u003d new Storage(location).load();","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"        assertEquals(data, loadData);","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"        assertTrue(Files.deleteIfExists(Paths.get(location)));","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"e0373972":24}},{"path":"src/test/java/duke/command/ByeCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"class ByeCommandTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"    void run() {","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e message \u003d new ByeCommand().run(new String[]{\"bye\"});","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"        assertEquals(List.of(\"Bye. Hope to see you again soon!\"), message);","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"    void isExit() {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"        assertTrue(new ByeCommand().isExit());","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"e0373972":22}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import duke.StorageTemp;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"import duke.task.Task;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"import duke.task.TaskListTemp;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"class DeleteCommandTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"    private static final TaskListTemp taskListTemp \u003d new TaskListTemp();","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"    private static final StorageTemp storageTemp \u003d new StorageTemp();","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"    void run() throws IOException {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"        String removeString \u003d new Task(\"remove 3\").toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e expected \u003d List.of(\"Noted. I\u0027ve removed this task: \" + System.lineSeparator() + \"     \"","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"                + removeString);","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e actual \u003d new DeleteCommand(taskListTemp, storageTemp).run(","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"                new String[]{\"delete\", \"4\"});","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"        assertEquals(removeString, taskListTemp.doTask.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"e0373972"},"content":"        assertEquals(removeString, storageTemp.stored.get(0));","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"e0373972":29}},{"path":"src/test/java/duke/command/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.command;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import duke.StorageTemp;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import duke.task.TaskListTemp;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"class DoneCommandTest {","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final TaskListTemp taskListTemp \u003d new TaskListTemp();","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final StorageTemp storageTemp \u003d new StorageTemp();","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    void run() throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e expected \u003d List.of(\"Nice! I\u0027ve marked this task as done: \" + System.lineSeparator()","lastModifiedDate":"2022-01-17"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"                + \"     \" + \"[x]get 2\");","lastModifiedDate":"2022-01-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e actual \u003d new DoneCommand(taskListTemp, storageTemp).run(new String[]{\"done\", \"3\"});","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"e0373972":4,"-":20}},{"path":"src/test/java/duke/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import duke.task.TaskListTemp;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"class FindCommandTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"    private static final TaskListTemp taskListTemp \u003d new TaskListTemp();","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"    void run() {","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e expected \u003d List.of(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e actual \u003d new FindCommand(taskListTemp).run(new String[]{\"find\", \"ww\"});","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"e0373972":21}},{"path":"src/test/java/duke/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke.command;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import duke.task.TaskListTemp;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"class ListCommandTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"    private static final TaskListTemp taskListTemp \u003d new TaskListTemp();","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"    void run() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"        expected.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"        for (int i \u003d 0; i \u003c taskListTemp.size(); i++) {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"            expected.add(i + 1 + \".\" + taskListTemp.get(i));","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e actual \u003d new ListCommand(taskListTemp).run(new String[]{\"list\"});","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"e0373972":25}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"import duke.StorageTemp;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"class DeadlineTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"    private static final TaskListTemp taskListTemp \u003d new TaskListTemp();","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"    private static final StorageTemp storageTemp \u003d new StorageTemp();","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"    void getCommand() throws IOException, DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"        String deadlineString \u003d new Deadline(\"return book\", \"5/12/2022 1800\").toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e line \u003d Deadline.getCommand(taskListTemp, storageTemp).run(","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"                new String[]{\"deadline\", \"return book\", \"/by\", \"5/12/2022 1800\"});","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"        assertEquals(List.of(\"Got it. I\u0027ve added this task: \" + System.lineSeparator()","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"                + \"     \" + deadlineString + System.lineSeparator()","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"                + \"   Now you have \" + taskListTemp.size() + \" tasks in the list.\"), line);","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"        assertEquals(deadlineString, taskListTemp.doTask.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"e0373972"},"content":"        assertEquals(deadlineString, storageTemp.stored.get(0));","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"e0373972"},"content":"    void getList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e list \u003d new Deadline(\"return book\", \"5/12/2022 1800\").getList();","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"e0373972"},"content":"        assertEquals(List.of(\"D\", \"0\", \"return book\", \"5/12/2022 1800\"), list);","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"e0373972"},"content":"    void testToString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"e0373972"},"content":"        String output \u003d new Deadline(\" return book\", \"5/12/2022 1800\").toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"e0373972"},"content":"        String crossSymbol \u003d \" \";","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"e0373972"},"content":"        assertEquals(\"[D][\" + crossSymbol + \"] return book (by: Dec 5 2022 1800)\", output);","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"e0373972"},"content":"    @AfterEach","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"e0373972"},"content":"    void clearTask() {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"e0373972"},"content":"        taskListTemp.doTask \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"e0373972"},"content":"        storageTemp.stored \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"e0373972":48}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"import duke.StorageTemp;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"class EventTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"    private static final TaskListTemp taskListTemp \u003d new TaskListTemp();","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"    private static final StorageTemp storageTemp \u003d new StorageTemp();","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"    void getCommand() throws IOException, DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"        String eventString \u003d new Event(\"project meeting\", \"5/12/2022 1800\").toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e line \u003d Event.getCommand(taskListTemp, storageTemp).run(","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"                new String[]{\"event\", \"project meeting\", \"/at\", \"5/12/2022 1800\"});","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"        assertEquals(List.of(\"Got it. I\u0027ve added this task: \" + System.lineSeparator()","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"                + \"     \" + eventString + System.lineSeparator()","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"                + \"   Now you have \" + taskListTemp.size() + \" tasks in the list.\"), line);","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"        assertEquals(eventString, taskListTemp.doTask.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"e0373972"},"content":"        assertEquals(eventString, storageTemp.stored.get(0));","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"e0373972"},"content":"    void getList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e list \u003d new Event(\"project meeting\", \"5/12/2022 1800\").getList();","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"e0373972"},"content":"        assertEquals(List.of(\"E\", \"0\", \"project meeting\", \"5/12/2022 1800\"), list);","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"e0373972"},"content":"    void testToString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"e0373972"},"content":"        String output \u003d new Event(\" project meeting\", \"5/12/2022 1800\").toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"e0373972"},"content":"        String crossSymbol \u003d \" \";","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"e0373972"},"content":"        assertEquals(\"[E][\" + crossSymbol + \"] project meeting (at: Dec 5 2022 1800)\", output);","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"e0373972"},"content":"    @AfterEach","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"e0373972"},"content":"    void clearTask() {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"e0373972"},"content":"        taskListTemp.doTask \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"e0373972"},"content":"        storageTemp.stored \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"e0373972":48}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"class TaskListTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"    void add() {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"        Task task \u003d new Task(\"borrow book\");","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"        taskList.add(task);","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"        assertEquals(task, taskList.get(0));","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"    void remove() {","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"        Task task1 \u003d new Task(\"borrow book 1\");","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"        Task task2 \u003d new Task(\"borrow book 2\");","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"        taskList.add(task1);","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"        taskList.add(task2);","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"        assertEquals(task1, taskList.remove(0));","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"        assertEquals(task2, taskList.get(0));","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"e0373972"},"content":"    void get() {","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"e0373972"},"content":"        ToDo toDo \u003d new ToDo(\"todo\");","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"e0373972"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", \"24/1/2022 1400\");","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"e0373972"},"content":"        Event event \u003d new Event(\"event\", \"24/1/2022 1400\");","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"e0373972"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"e0373972"},"content":"        taskList.add(toDo);","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"e0373972"},"content":"        taskList.add(deadline);","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"e0373972"},"content":"        taskList.add(event);","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"e0373972"},"content":"        TaskList list \u003d new TaskList(taskList.convertAsLines());","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"e0373972"},"content":"        assertEquals(toDo.toString(), list.get(0).toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"e0373972"},"content":"        assertEquals(deadline.toString(), list.get(1).toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"e0373972"},"content":"        assertEquals(event.toString(), list.get(2).toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"e0373972"},"content":"    void size() {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"e0373972"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"e0373972"},"content":"        taskList.add(new Task(\"borrow book 1\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"e0373972"},"content":"        taskList.add(new Task(\"borrow book 2\"));","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"e0373972"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"e0373972":50}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke.task;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"class TaskTest {","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Task task \u003d new Task(\"read book\");","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void getStatusIconIncomplete() {","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    void getStatusIconComplete() {","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        task.markAsDone();","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(\"x\", task.getStatusIcon());","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void getListIncomplete() {","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertEquals(List.of(\"0\", \"read book\"), task.getList());","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    void getListComplete() {","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        task.markAsDone();","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(List.of(\"1\", \"read book\"), task.getList());","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void testToStringComplete() {","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(\"[\" + \" \" + \"]\" + \"read book\", task.toString());","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void testToStringIncomplete() {","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        task.markAsDone();","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"[\" + \"x\" + \"]\" + \"read book\", task.toString());","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"e0373972":2,"-":42}},{"path":"src/test/java/duke/task/TimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"class TimeTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"    void convertSaveTimeString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"        String save \u003d new Time(\"borrow book\", \"24/1/2022 1400\").convertSaveTimeString();","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"        assertEquals(\"24/1/2022 1400\", save);","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"    void convertTimeString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"        String save \u003d new Time(\"borrow book\", \"24/1/2022 1400\").convertTimeString();","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"        assertEquals(\"Jan 24 2022 1400\", save);","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"e0373972":20}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"package duke.task;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"import duke.DukeException;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"import duke.StorageTemp;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"import java.util.List;","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":12,"author":{"gitId":"e0373972"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-24"},{"lineNumber":13,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":14,"author":{"gitId":"e0373972"},"content":"class ToDoTest {","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"e0373972"},"content":"    private static final TaskListTemp taskListTemp \u003d new TaskListTemp();","lastModifiedDate":"2022-01-24"},{"lineNumber":16,"author":{"gitId":"e0373972"},"content":"    private static final StorageTemp storageTemp \u003d new StorageTemp();","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":19,"author":{"gitId":"e0373972"},"content":"    void getCommand() throws IOException, DukeException {","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"e0373972"},"content":"        String toDoString \u003d new ToDo(\"return book\").toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":21,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e line \u003d ToDo.getCommand(taskListTemp, storageTemp).run(","lastModifiedDate":"2022-01-24"},{"lineNumber":22,"author":{"gitId":"e0373972"},"content":"                new String[]{\"todo\", \"return book\"});","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"e0373972"},"content":"        assertEquals(List.of(\"Got it. I\u0027ve added this task: \" + System.lineSeparator()","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"e0373972"},"content":"                + \"     \" + toDoString + System.lineSeparator()","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"e0373972"},"content":"                + \"   Now you have \" + taskListTemp.size() + \" tasks in the list.\"), line);","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"e0373972"},"content":"        assertEquals(toDoString, taskListTemp.doTask.toString());","lastModifiedDate":"2022-01-24"},{"lineNumber":27,"author":{"gitId":"e0373972"},"content":"        assertEquals(toDoString, storageTemp.stored.get(0));","lastModifiedDate":"2022-01-24"},{"lineNumber":28,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":29,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":30,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":31,"author":{"gitId":"e0373972"},"content":"    void getList() {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"e0373972"},"content":"        List\u003cString\u003e list \u003d new ToDo(\"return book\").getList();","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"e0373972"},"content":"        assertEquals(List.of(\"T\", \"0\", \"return book\"), list);","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"e0373972"},"content":"    @Test","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"e0373972"},"content":"    void testToString() {","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"e0373972"},"content":"        String output \u003d new ToDo(\" return book\").toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"e0373972"},"content":"        String crossSymbol \u003d \" \";","lastModifiedDate":"2022-01-24"},{"lineNumber":40,"author":{"gitId":"e0373972"},"content":"        assertEquals(\"[T][\" + crossSymbol + \"] return book\", output);","lastModifiedDate":"2022-01-24"},{"lineNumber":41,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":42,"author":{"gitId":"e0373972"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"e0373972"},"content":"    @AfterEach","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"e0373972"},"content":"    void clearTask() {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"e0373972"},"content":"        taskListTemp.doTask \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"e0373972"},"content":"        storageTemp.stored \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"e0373972"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"e0373972"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"e0373972":48}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"e0373972"},"content":"T|1|afa","lastModifiedDate":"2022-02-06"},{"lineNumber":2,"author":{"gitId":"e0373972"},"content":"T|0|adfa","lastModifiedDate":"2022-01-28"},{"lineNumber":3,"author":{"gitId":"e0373972"},"content":"T|0|work","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"e0373972"},"content":"T|0|FFF","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"e0373972"},"content":"T|0|d","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"e0373972"},"content":"D|0|return book|2/12/2021 1800","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"e0373972"},"content":"E|0|project meeting|2/12/2021 1700","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"e0373972"},"content":"D|0|return book|2/12/2021 1800","lastModifiedDate":"2022-02-04"},{"lineNumber":9,"author":{"gitId":"e0373972"},"content":"D|0|afda|12/2/2022 1200","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"e0373972"},"content":"E|0|afadf|23/2/2022 1200","lastModifiedDate":"2022-02-07"}],"authorContributionMap":{"e0373972":10}}]
