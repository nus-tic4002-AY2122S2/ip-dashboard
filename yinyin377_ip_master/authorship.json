[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"# duke project template","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"yinyin377"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**text-based scheduler**","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"_easy to learn_","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* SUPER FAST to use","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* All you need to do is,","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"download it from here.","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. double-click it.","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"2. add your tasks.","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"3. let it manage your tasks for you ðŸ˜‰","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"4. And it is FREE!","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"###Features:###","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"- Managing tasks","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"- Managing deadlines","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"- Reminders","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"yinyin377":2,"-":43}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"yinyin377"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.8.2\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"yinyin377"},"content":"    mainClassName \u003d \"duke.duke\"","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":50,"author":{"gitId":"yinyin377"},"content":"repositories {","lastModifiedDate":"2022-02-03"},{"lineNumber":51,"author":{"gitId":"yinyin377"},"content":"    mavenCentral()","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"yinyin377"},"content":"}","lastModifiedDate":"2022-02-03"},{"lineNumber":53,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":54,"author":{"gitId":"yinyin377"},"content":"dependencies {","lastModifiedDate":"2022-02-03"},{"lineNumber":55,"author":{"gitId":"yinyin377"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":56,"author":{"gitId":"yinyin377"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":57,"author":{"gitId":"yinyin377"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":58,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":59,"author":{"gitId":"yinyin377"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":60,"author":{"gitId":"yinyin377"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-02-20"},{"lineNumber":61,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":62,"author":{"gitId":"yinyin377"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":63,"author":{"gitId":"yinyin377"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":64,"author":{"gitId":"yinyin377"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":65,"author":{"gitId":"yinyin377"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":66,"author":{"gitId":"yinyin377"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":67,"author":{"gitId":"yinyin377"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":68,"author":{"gitId":"yinyin377"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":69,"author":{"gitId":"yinyin377"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":70,"author":{"gitId":"yinyin377"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":71,"author":{"gitId":"yinyin377"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":72,"author":{"gitId":"yinyin377"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":73,"author":{"gitId":"yinyin377"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":74,"author":{"gitId":"yinyin377"},"content":"}","lastModifiedDate":"2022-02-03"},{"lineNumber":75,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":76,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":77,"author":{"gitId":"yinyin377"},"content":"/*","lastModifiedDate":"2022-02-10"},{"lineNumber":78,"author":{"gitId":"yinyin377"},"content":"name: Java CI","lastModifiedDate":"2022-02-10"},{"lineNumber":79,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":80,"author":{"gitId":"yinyin377"},"content":"on: [push, pull_request]","lastModifiedDate":"2022-02-10"},{"lineNumber":81,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":82,"author":{"gitId":"yinyin377"},"content":"jobs:","lastModifiedDate":"2022-02-10"},{"lineNumber":83,"author":{"gitId":"yinyin377"},"content":"  build:","lastModifiedDate":"2022-02-10"},{"lineNumber":84,"author":{"gitId":"yinyin377"},"content":"    strategy:","lastModifiedDate":"2022-02-10"},{"lineNumber":85,"author":{"gitId":"yinyin377"},"content":"      matrix:","lastModifiedDate":"2022-02-10"},{"lineNumber":86,"author":{"gitId":"yinyin377"},"content":"        platform: [ubuntu-latest, macos-latest, windows-latest]","lastModifiedDate":"2022-02-10"},{"lineNumber":87,"author":{"gitId":"yinyin377"},"content":"    runs-on: ${{ matrix.platform }}","lastModifiedDate":"2022-02-10"},{"lineNumber":88,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":89,"author":{"gitId":"yinyin377"},"content":"    steps:","lastModifiedDate":"2022-02-10"},{"lineNumber":90,"author":{"gitId":"yinyin377"},"content":"      - name: Set up repository","lastModifiedDate":"2022-02-10"},{"lineNumber":91,"author":{"gitId":"yinyin377"},"content":"        uses: actions/checkout@master","lastModifiedDate":"2022-02-10"},{"lineNumber":92,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":93,"author":{"gitId":"yinyin377"},"content":"      - name: Set up repository","lastModifiedDate":"2022-02-10"},{"lineNumber":94,"author":{"gitId":"yinyin377"},"content":"        uses: actions/checkout@master","lastModifiedDate":"2022-02-10"},{"lineNumber":95,"author":{"gitId":"yinyin377"},"content":"        with:","lastModifiedDate":"2022-02-10"},{"lineNumber":96,"author":{"gitId":"yinyin377"},"content":"          ref: master","lastModifiedDate":"2022-02-10"},{"lineNumber":97,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":98,"author":{"gitId":"yinyin377"},"content":"      - name: Merge to master","lastModifiedDate":"2022-02-10"},{"lineNumber":99,"author":{"gitId":"yinyin377"},"content":"        run: git checkout --progress --force ${{ github.sha }}","lastModifiedDate":"2022-02-10"},{"lineNumber":100,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":101,"author":{"gitId":"yinyin377"},"content":"      - name: Validate Gradle Wrapper","lastModifiedDate":"2022-02-10"},{"lineNumber":102,"author":{"gitId":"yinyin377"},"content":"        uses: gradle/wrapper-validation-action@v1","lastModifiedDate":"2022-02-10"},{"lineNumber":103,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":104,"author":{"gitId":"yinyin377"},"content":"      - name: Setup JDK 11","lastModifiedDate":"2022-02-10"},{"lineNumber":105,"author":{"gitId":"yinyin377"},"content":"        uses: actions/setup-java@v1","lastModifiedDate":"2022-02-10"},{"lineNumber":106,"author":{"gitId":"yinyin377"},"content":"        with:","lastModifiedDate":"2022-02-10"},{"lineNumber":107,"author":{"gitId":"yinyin377"},"content":"          java-version: \u002711\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":108,"author":{"gitId":"yinyin377"},"content":"          java-package: jdk+fx","lastModifiedDate":"2022-02-10"},{"lineNumber":109,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":110,"author":{"gitId":"yinyin377"},"content":"      - name: Build and check with Gradle","lastModifiedDate":"2022-02-10"},{"lineNumber":111,"author":{"gitId":"yinyin377"},"content":"        run: ./gradlew check","lastModifiedDate":"2022-02-10"},{"lineNumber":112,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":113,"author":{"gitId":"yinyin377"},"content":"      - name: Perform IO redirection test (*NIX)","lastModifiedDate":"2022-02-10"},{"lineNumber":114,"author":{"gitId":"yinyin377"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":115,"author":{"gitId":"yinyin377"},"content":"        working-directory:  ${{ github.workspace }}/text-ui-test","lastModifiedDate":"2022-02-10"},{"lineNumber":116,"author":{"gitId":"yinyin377"},"content":"        run: ./runtest.sh","lastModifiedDate":"2022-02-10"},{"lineNumber":117,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":118,"author":{"gitId":"yinyin377"},"content":"      - name: Perform IO redirection test (MacOS)","lastModifiedDate":"2022-02-10"},{"lineNumber":119,"author":{"gitId":"yinyin377"},"content":"        if: always() \u0026\u0026 runner.os \u003d\u003d \u0027macOS\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":120,"author":{"gitId":"yinyin377"},"content":"        working-directory:  ${{ github.workspace }}/text-ui-test","lastModifiedDate":"2022-02-10"},{"lineNumber":121,"author":{"gitId":"yinyin377"},"content":"        run: ./runtest.sh","lastModifiedDate":"2022-02-10"},{"lineNumber":122,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":123,"author":{"gitId":"yinyin377"},"content":"      - name: Perform IO redirection test (Windows)","lastModifiedDate":"2022-02-10"},{"lineNumber":124,"author":{"gitId":"yinyin377"},"content":"        if: always() \u0026\u0026 runner.os \u003d\u003d \u0027Windows\u0027","lastModifiedDate":"2022-02-10"},{"lineNumber":125,"author":{"gitId":"yinyin377"},"content":"        working-directory:  ${{ github.workspace }}/text-ui-test","lastModifiedDate":"2022-02-10"},{"lineNumber":126,"author":{"gitId":"yinyin377"},"content":"        shell: cmd","lastModifiedDate":"2022-02-10"},{"lineNumber":127,"author":{"gitId":"yinyin377"},"content":"        run: runtest.bat","lastModifiedDate":"2022-02-10"},{"lineNumber":128,"author":{"gitId":"yinyin377"},"content":" */","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"yinyin377":83,"-":45}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"T | 1 | school work | ","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"yinyin377":1}},{"path":"src/main/java/Duke1.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"yinyin377"},"content":"public class Duke1 {","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"yinyin377"},"content":"//    private static ArrayList\u003cTask\u003e tasklist\u003dnew ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"yinyin377"},"content":"//    private static int taskCount \u003d 0;","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"yinyin377"},"content":"//","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"yinyin377"},"content":"//    public static void addTask(Task s){","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"yinyin377"},"content":"//        tasklist.add(taskCount,s);","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"yinyin377"},"content":"//        taskCount++;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"yinyin377"},"content":"//    }","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"yinyin377"},"content":"//","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"yinyin377"},"content":"//    public static void printLine(){","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"yinyin377"},"content":"//        System.out.println(\"______________________________\");","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"yinyin377"},"content":"//    }","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void showGreetings(){","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"yinyin377"},"content":"        System.out.println(\"Hello! I\u0027m duke\");","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"yinyin377"},"content":"//    public static void showFarewell(){","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"yinyin377"},"content":"//        printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"yinyin377"},"content":"//        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"yinyin377"},"content":"//        printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"yinyin377"},"content":"//    }","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"yinyin377"},"content":"//","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"yinyin377"},"content":"//    public static void showAddedTasks(String addedTask,int numOfTask){","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"yinyin377"},"content":"//        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"yinyin377"},"content":"//        System.out.println(addedTask);","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"yinyin377"},"content":"//        System.out.println(\"Now you have \" + numOfTask + \" tasks in the list.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"yinyin377"},"content":"//    }","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"yinyin377"},"content":"//","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"yinyin377"},"content":"//    public static void checkException(String message){","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"yinyin377"},"content":"//        try{","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"yinyin377"},"content":"//            throw new DukeException(message);","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"yinyin377"},"content":"//        }","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"yinyin377"},"content":"//        catch (DukeException ex){","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"yinyin377"},"content":"//            System.out.println(ex.getMessage());","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"yinyin377"},"content":"//        }","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"yinyin377"},"content":"//        printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"yinyin377"},"content":"//    }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static void main(String[] args){","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showGreetings();","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"yinyin377"},"content":"//        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"yinyin377"},"content":"//        String userInput;","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"yinyin377"},"content":"//        while (myObj.hasNextLine()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"yinyin377"},"content":"//            userInput \u003d myObj.nextLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"yinyin377"},"content":"//            String[] split \u003d userInput.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"yinyin377"},"content":"//            String first \u003d split[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"yinyin377"},"content":"//            if (userInput.equals(\"list\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"yinyin377"},"content":"//                //Print list of tasks","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"yinyin377"},"content":"//                printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"yinyin377"},"content":"//                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"yinyin377"},"content":"//                for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2022-01-27"},{"lineNumber":63,"author":{"gitId":"yinyin377"},"content":"//                    System.out.println((i + 1) + \". \" + tasklist.get(i).toString());","lastModifiedDate":"2022-01-27"},{"lineNumber":64,"author":{"gitId":"yinyin377"},"content":"//                }","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"yinyin377"},"content":"//                printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"yinyin377"},"content":"//                continue;","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"yinyin377"},"content":"//            }","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"yinyin377"},"content":"//            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"yinyin377"},"content":"//                break;","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"yinyin377"},"content":"//            }","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"yinyin377"},"content":"//            else if (first.equals(\"done\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"yinyin377"},"content":"//                //Get task index to mark as done","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"yinyin377"},"content":"//                String second \u003d split[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"yinyin377"},"content":"//                tasklist.get(Integer.parseInt(second) - 1).markAsDone();","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"yinyin377"},"content":"//                printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"yinyin377"},"content":"//                System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"yinyin377"},"content":"//                System.out.println(tasklist.get(Integer.parseInt(second) - 1).getStatusIcon() + \" \" + tasklist.get(Integer.parseInt(second) - 1).description);","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"yinyin377"},"content":"//                printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"yinyin377"},"content":"//            } else {","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"yinyin377"},"content":"//                printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":81,"author":{"gitId":"yinyin377"},"content":"//                if (first.equals(\"todo\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":82,"author":{"gitId":"yinyin377"},"content":"//                    //add to-do task and return exception if task name is empty","lastModifiedDate":"2022-01-27"},{"lineNumber":83,"author":{"gitId":"yinyin377"},"content":"//                    try{","lastModifiedDate":"2022-01-27"},{"lineNumber":84,"author":{"gitId":"yinyin377"},"content":"//                        String[] split01 \u003d userInput.split(\" \");","lastModifiedDate":"2022-01-27"},{"lineNumber":85,"author":{"gitId":"yinyin377"},"content":"//                        String firstTD \u003d split01[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":86,"author":{"gitId":"yinyin377"},"content":"//                        String secondTD \u003d split01[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":87,"author":{"gitId":"yinyin377"},"content":"//                        addTask(new ToDo(secondTD));","lastModifiedDate":"2022-01-27"},{"lineNumber":88,"author":{"gitId":"yinyin377"},"content":"//                        showAddedTasks(tasklist.get(taskCount-1).toString(),taskCount);","lastModifiedDate":"2022-01-27"},{"lineNumber":89,"author":{"gitId":"yinyin377"},"content":"//                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":90,"author":{"gitId":"yinyin377"},"content":"//                    catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2022-01-27"},{"lineNumber":91,"author":{"gitId":"yinyin377"},"content":"//                        checkException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":92,"author":{"gitId":"yinyin377"},"content":"//                        continue;","lastModifiedDate":"2022-01-27"},{"lineNumber":93,"author":{"gitId":"yinyin377"},"content":"//                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":94,"author":{"gitId":"yinyin377"},"content":"//                }","lastModifiedDate":"2022-01-27"},{"lineNumber":95,"author":{"gitId":"yinyin377"},"content":"//                if (first.equals(\"deadline\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":96,"author":{"gitId":"yinyin377"},"content":"//                    //add deadline task and return exception if task name is empty","lastModifiedDate":"2022-01-27"},{"lineNumber":97,"author":{"gitId":"yinyin377"},"content":"//                    try{","lastModifiedDate":"2022-01-27"},{"lineNumber":98,"author":{"gitId":"yinyin377"},"content":"//                        String[] headerSplit02 \u003d userInput.split(\"deadline\");","lastModifiedDate":"2022-01-27"},{"lineNumber":99,"author":{"gitId":"yinyin377"},"content":"//                        String[] split02 \u003d headerSplit02[1].split(\"/by\");","lastModifiedDate":"2022-01-27"},{"lineNumber":100,"author":{"gitId":"yinyin377"},"content":"//                        String firstD \u003d split02[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":101,"author":{"gitId":"yinyin377"},"content":"//                        String secondD \u003d split02[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":102,"author":{"gitId":"yinyin377"},"content":"//                        addTask(new Deadline(firstD, secondD));","lastModifiedDate":"2022-01-27"},{"lineNumber":103,"author":{"gitId":"yinyin377"},"content":"//                        showAddedTasks(tasklist.get(taskCount-1).toString(),taskCount);","lastModifiedDate":"2022-01-27"},{"lineNumber":104,"author":{"gitId":"yinyin377"},"content":"//                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":105,"author":{"gitId":"yinyin377"},"content":"//                    catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2022-01-27"},{"lineNumber":106,"author":{"gitId":"yinyin377"},"content":"//                        checkException(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":107,"author":{"gitId":"yinyin377"},"content":"//                        continue;","lastModifiedDate":"2022-01-27"},{"lineNumber":108,"author":{"gitId":"yinyin377"},"content":"//                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":109,"author":{"gitId":"yinyin377"},"content":"//                }","lastModifiedDate":"2022-01-27"},{"lineNumber":110,"author":{"gitId":"yinyin377"},"content":"//                if (first.equals(\"event\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":111,"author":{"gitId":"yinyin377"},"content":"//                    //add event task and return exception if task name is empty","lastModifiedDate":"2022-01-27"},{"lineNumber":112,"author":{"gitId":"yinyin377"},"content":"//                    try{","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"yinyin377"},"content":"//                        String[] headerSplit03 \u003d userInput.split(\"event\");","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"yinyin377"},"content":"//                        String[] split03 \u003d headerSplit03[1].split(\"/at\");","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"yinyin377"},"content":"//                        String firstE \u003d split03[0];","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"yinyin377"},"content":"//                        String secondE \u003d split03[1];","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"yinyin377"},"content":"//                        addTask(new Event(firstE, secondE));","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"yinyin377"},"content":"//                        showAddedTasks(tasklist.get(taskCount-1).toString(),taskCount);","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"yinyin377"},"content":"//                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"yinyin377"},"content":"//                    catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2022-01-27"},{"lineNumber":121,"author":{"gitId":"yinyin377"},"content":"//                        checkException(\"â˜¹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2022-01-27"},{"lineNumber":122,"author":{"gitId":"yinyin377"},"content":"//                        continue;","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"yinyin377"},"content":"//                    }","lastModifiedDate":"2022-01-27"},{"lineNumber":124,"author":{"gitId":"yinyin377"},"content":"//                }","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"yinyin377"},"content":"//                else if (!first.equals(\"event\") \u0026\u0026 !first.equals(\"deadline\") \u0026\u0026!first.equals(\"todo\")) {","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"yinyin377"},"content":"//                    checkException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-01-27"},{"lineNumber":127,"author":{"gitId":"yinyin377"},"content":"//                    continue;","lastModifiedDate":"2022-01-27"},{"lineNumber":128,"author":{"gitId":"yinyin377"},"content":"//                }","lastModifiedDate":"2022-01-27"},{"lineNumber":129,"author":{"gitId":"yinyin377"},"content":"//                printLine();","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"yinyin377"},"content":"//            }","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"yinyin377"},"content":"//        }","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"yinyin377"},"content":"//        showFarewell();","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yinyin377":115,"-":19}},{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  AddCommand.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines the \u0027Add\u0027 action flow to insert tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    protected Task task;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs Add Command object with parsed task.","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param Parsed task.","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * This method \u0027Executes\u0027 the command and display message","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * after successfully inserting task.","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tasks Object of Task class.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param ui Object of UI class - User Interface.","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param storage Object of Storage class.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        //add task into task list","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        tasks.addTask(task);","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        //display successful message and task count","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        System.out.println(\"\\t \" + task.toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        System.out.println(\"\\tNow you have \" + tasks.getTaskSize() + \" tasks in the list.\");","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns not to exit program.","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"yinyin377"},"content":"     * @return false Command \u0027duke\u0027 not to exit","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * after add command.","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"yinyin377":2,"-":44}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  Command.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines the abstract Command class that all commands have the following method.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * This method \u0027Executes\u0027 the command.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * @param tasks Object of Task class.","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * @param ui Object of UI class - User Interface.","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * @param storage Object of Storage class.","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public abstract void execute(TaskList tasks, UI ui, Storage storage);","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns to or not to exit program.","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"yinyin377"},"content":"     * @return Command \u0027duke\u0027 to or not to exit","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"yinyin377":2,"-":19}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  Deadline.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines the Deadline task.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected String by;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Constructs Deadline object","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param by Task\u0027s deadline in datetime.","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(by,formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.by \u003d dateTime.format(formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs Deadline object","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param by Task\u0027s deadline in datetime.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param status Task\u0027s completion status.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Deadline(String status,String description, String by) {","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(by,formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.by \u003d dateTime.format(formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.setStatus(status);","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns Deadline task","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return \u0027D\u0027 Deadline task.","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public char getTaskType() {","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return \u0027D\u0027;","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns Deadline message","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return details of Deadline task.","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns Deadline Datetime","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @return Datetime in yyyy-MM-dd HH:mm format.","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String getLast(){","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        //get deadline\u0027s datetime and print it in yyyy-mm-dd hh:mm format","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(by,formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.by \u003d dateTime.format(formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return by;","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Set Deadline\u0027s date and Time.","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setLast(String by) {","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        //set deadline\u0027s datetime in yyyy-mm-dd hh:mm format","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(by,formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.by \u003d dateTime.format(formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"yinyin377":1,"-":78}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  DeleteCommand.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines the \u0027Delete\u0027 action flow to delete tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private int index;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs Delete Command object with parsed task.","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param Parsed task.","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public DeleteCommand(int index){","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns not to exit program.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"yinyin377"},"content":"     * @return false Command \u0027duke\u0027 not to exit","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * after delete command.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * This method \u0027Executes\u0027 the command and display message","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * after successfully deleting task.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param tasks Object of Task class.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param ui Object of UI class - User Interface.","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param storage Object of Storage class.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        //delete task from task list","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Task task \u003d tasks.deleteTask(index-1);","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //display successful message and task count","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        System.out.println(\"\\tNow you have \" + tasks.getTaskSize() + \" tasks in the list.\");","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"yinyin377":2,"-":44}},{"path":"src/main/java/duke/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  DoneCommand.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines the \u0027Done\u0027 action flow to mark tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" *  as completed or done.","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private int index;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Constructs Done Command object with task index.","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param index Parsed task index.","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public DoneCommand(int index){","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * This method \u0027Executes\u0027 the command and display message","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * after successfully marking task as completed.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param tasks Object of Task class.","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param ui Object of UI class - User Interface.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param storage Object of Storage class.","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        //mark task as completed","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Task task \u003d tasks.doneTask(index-1);","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        //display successful message","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        System.out.println(\"\\t  \" + task.toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns not to exit program.","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"yinyin377"},"content":"     * @return false Command \u0027duke\u0027 not to exit","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * after done command.","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"yinyin377":2,"-":43}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    private UI ui;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"yinyin377"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"yinyin377"},"content":"     *  Constructs duke object.","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     *  @param filePath Define file location.","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        //Creates User interface","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        ui \u003d new UI();","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        //Reading data from file stated in filepath","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"yinyin377"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"yinyin377"},"content":"     *  This method shows the flow of \u0027duke\u0027.","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void run() {","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                storage.save(tasks.getTaskList());","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ui.displayError(e.getMessage());","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            } finally {","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"yinyin377"},"content":"    /**","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"yinyin377"},"content":"     *  This is the main method.","lastModifiedDate":"2022-02-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *  @param args Arguments.","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"yinyin377"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yinyin377":10,"-":45}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  DukeException.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"yinyin377"},"content":" *  Defines the Exception of \u0027duke\u0027.","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    //default exception message thrown","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private String message \u003d \"\\tâ˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns exception message when description of task is empty.","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param message Type of task.","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.message \u003d \"\\tâ˜¹ OOPS!!! The description of a \" + message + \" cannot be empty.\";","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"yinyin377"},"content":"     *  Constructs duke object.","lastModifiedDate":"2022-02-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *  @return default message","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public DukeException() {","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns exception message.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @return message Exception message.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getMessage(){","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return message;","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"yinyin377":3,"-":32}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  Event.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines the Event task.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected String at;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Constructs Event object","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param at Task\u0027s event date and time.","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(at,formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.at \u003d dateTime.format(formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs Event object","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param at Task\u0027s event date and time.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param status Task\u0027s completion status.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Event(String status, String description, String at) {","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(at,formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.at \u003d dateTime.format(formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.setStatus(status);","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns Event task","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return \u0027E\u0027 Event task.","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public char getTaskType() {","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return \u0027E\u0027;","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns Event message","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return details of Event task.","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns Event Date and time","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @return Datetime in yyyy-MM-dd HH:mm format.","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String getLast(){","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        //get event\u0027s date and print it in yyyy-mm-dd hh:mm format","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(at,formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.at \u003d dateTime.format(formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return at;","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Set Event\u0027s date and Time.","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setLast(String at) {","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        //set event\u0027s date in yyyy-mm-dd hh:mm format","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(at,formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.at \u003d dateTime.format(formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"yinyin377":1,"-":79}},{"path":"src/main/java/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  ExitCommand.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines the \u0027Exit\u0027 action flow to exit program.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     *  Constructs Exit Command object.","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public ExitCommand(){","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * This method \u0027Executes\u0027 the command and","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *  display \u0027Goodbye\u0027 message.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param tasks Object of Task class.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param ui Object of UI class - User Interface.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param storage Object of Storage class.","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        //save and store all tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        //display goodbye message","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns to exit program.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"yinyin377"},"content":"     * @return false Command \u0027duke\u0027 not to exit","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * after exit command.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"yinyin377":2,"-":38}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*  Recommit to correct naming.","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  FindCommand.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines the \u0027Find\u0027 action to search tasks using keywords.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private String keyWord;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     *  Constructs Find Command object.","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public FindCommand(String keyWord){","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * This method \u0027Executes\u0027 the command and","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *  display searched tasks in the task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param tasks Object of Task class.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param ui Object of UI class - User Interface.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param storage Object of Storage class.","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        System.out.println(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        //print all tasks in task list","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c tasks.getTaskSize() + 1; i++) {","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Task task \u003d tasks.getTaskList().get(i - 1);","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            if(description.contains(keyWord)){","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                System.out.println(\"\\t\"+String.format(i + \".\" + task, task.getStatusIcon()));","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns not to exit program.","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"yinyin377"},"content":"     * @return false Command \u0027duke\u0027 not to exit","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * after list command.","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"yinyin377":2,"-":43}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  ListCommand.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines the \u0027List\u0027 action flow to list tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     *  Constructs List Command object.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public ListCommand(){","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * This method \u0027Executes\u0027 the command and","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *  display all tasks in the task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param tasks Object of Task class.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param ui Object of UI class - User Interface.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param storage Object of Storage class.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        //print all tasks in task list","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c tasks.getTaskSize() + 1; i++) {","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Task task \u003d tasks.getTaskList().get(i - 1);","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            System.out.println(\"\\t\"+String.format(i + \".\" + task, task.getStatusIcon()));","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns not to exit program.","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"yinyin377"},"content":"     * @return false Command \u0027duke\u0027 not to exit","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * after list command.","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"yinyin377":2,"-":39}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  Parser.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines the flow of commands parse from user\u0027s input.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Parser {","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * @param command Command from user\u0027s input.","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * @return Command object.","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * @throws DukeException Exception handled.","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    static Command parse(String command) throws DukeException{","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        //task split by the first spacing","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String[] task \u003d command.split(\" \",2);","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        //stores task size","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        int taskLen \u003d task.length;","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        //command defined by user","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        command \u003d task[0];","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        switch (command){","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            case \"list\":","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                return new ListCommand();","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            case \"bye\":","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            case \"done\":","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                return new DoneCommand(Integer.parseInt(task[1]));","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            case \"update\":","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                if(taskLen \u003c 2) {","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    throw new DukeException(command);","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    assert task[1].contains(\"/to\") : \"Missing /to arguments for update\";","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    String[] descrip \u003d task[1].split(\" /to \", 2);","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    UpdateCommand upCommand \u003d new UpdateCommand(Integer.parseInt(descrip[0]), descrip[1]);","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    return upCommand;","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            case \"find\":","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                if(taskLen \u003c 2) {","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    throw new DukeException(command);","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    return new FindCommand(task[1]);","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            case \"view\":","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                if(taskLen \u003c 2) {","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    throw new DukeException(command);","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    return new ViewCommand(task[1]);","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            case \"delete\":","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                if(taskLen \u003c 2) {","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    throw new DukeException(command);","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    return new DeleteCommand(Integer.parseInt(task[1]));","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                if(taskLen \u003c 2) {","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    throw new DukeException(command);","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    return new AddCommand(new ToDo(task[1]));","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            case \"event\":","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                if(taskLen \u003c 2) {","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    throw new DukeException(command);","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                    assert task[1].contains(\"/at\") : \"Missing /at arguments for event\";","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                    String[] descrip \u003d task[1].split(\" /at \", 2);","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    AddCommand addCommand \u003d new AddCommand(new Event(descrip[0], descrip[1]));","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    return addCommand;","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                if(taskLen \u003c 2) {","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    throw new DukeException(command);","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                    assert task[1].contains(\"/by\") : \"Missing /by arguments for deadline\";","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                    String[] descrip \u003d task[1].split(\" /by \", 2);","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    AddCommand addCommand \u003d new AddCommand(new Deadline(descrip[0], descrip[1]));","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    return addCommand;","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                throw new DukeException();","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"yinyin377":1,"-":86}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  Storage.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines method to load and save tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.*;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Storage {","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private String filePath;","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private BufferedReader reader;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Constructs Storage object","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param filePath Define file location.","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Storage(String filePath){","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            reader \u003d new BufferedReader(new FileReader(\"data/tasks.txt\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /* This method loads task list with tasks in file.","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @return tasks Task object.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws DukeException Exception handled.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        //initialize Array list as tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            String line;","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            //reads all task written in the file","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String[] readData \u003d line.split(\" \\\\| \");","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                Task newTask \u003d null;","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                if (readData[0].equals(\"T\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    newTask \u003d new ToDo(readData[1], readData[2]);","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                } else if (readData[0].equals(\"D\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    newTask \u003d new Deadline(readData[1], readData[2], readData[3]);","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                } else if (readData[0].equals(\"E\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    newTask \u003d new Event(readData[1], readData[2], readData[3]);","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                if (newTask !\u003d null) {","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            reader.close();","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            //prints exception message.","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return tasks;","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /* This method save task list with tasks in file.","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param task Task stored in array list.","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"data/tasks.txt\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            //writes all tasks into file","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                char type \u003d task.getTaskType();","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                String status \u003d (task.getStatusIcon().equals(\"[\\u2713]\")) ? \"1\" : \"0\";","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                String description \u003d task.getDescription();","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                String last \u003d \"\";","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                if (type !\u003d \u0027T\u0027){","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                    last \u003d task.getLast();","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                writer.write(type + \" | \" + status + \" | \" + description + \" | \" + last);","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                writer.newLine();","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            writer.close();","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (IOException e){","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            //prints exception message.","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"yinyin377":1,"-":82}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  Task.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines task.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"abstract class Task {","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private String description;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Constructs Task object","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.setDescription(description);","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs Task object","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param isDone Task\u0027s completion status.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Task(String description,boolean isDone) {","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.setDescription(description);","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Return Task\u0027s completion status in tick or cross symbol.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @return Task\u0027s completion status in tick or cross symbol.","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return \"[\" +(isDone ? \"\\u2713\" : \"\\u2718\")+\"]\" ; //return tick or X symbols","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Set Task\u0027s completion status.","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setStatus(String status) {","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.isDone \u003d (status.equals(\"1\")) ? true : false;","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set Task\u0027s completion status as completed or done.","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String markAsDone() {","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return (getStatusIcon()); //return tick or X symbols","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns default task","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return \u0027n\u0027 task.","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public char getTaskType() {","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027n\u0027;","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns task details","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @return details of task.","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString(){","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns task description","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @return description of task.","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return description;","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Set Task\u0027s description.","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns task date and time","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @return date and time of task.","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String getLast() {","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return getLast();","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"yinyin377":1,"-":92}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  TaskList.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TaskList {","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Constructs TaskList object","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    TaskList(){","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        taskList\u003dnew ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs TaskList object","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tasklist List of task.","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    TaskList(ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.taskList\u003dtaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * This method add task into task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param s Object of Task class.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void addTask(Task s){","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        taskList.add(s);","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * This method delete task from task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param index Task\u0027s index .","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return task Deleted Task object.","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Task deleteTask(int index){","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        taskList.remove(index);","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return task;","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * This method mark task as done.","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param index Task\u0027s index .","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @return task Task object marked as done.","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Task doneTask(int index){","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        task.markAsDone();","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return task;","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * This method updates task\u0027s date and time.","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index Task\u0027s index .","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param datetime Task\u0027s updated date and time.","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @return task Updated Task object.","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Task updateTask(int index,String datetime){","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if(task.getTaskType()\u003d\u003d\u0027E\u0027){","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Event event;","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            event \u003d (Event) taskList.get(index);","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            event.setLast(datetime);","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if(task.getTaskType()\u003d\u003d\u0027D\u0027){","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Deadline deadline;","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            deadline \u003d (Deadline) taskList.get(index);","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            deadline.setLast(datetime);","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return task;","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns number of tasks in task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    int getTaskSize(){","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return taskList.size();","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * This method returns all task in task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @return task All task object stored in task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return taskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"yinyin377":1,"-":91}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  ToDo.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines the ToDo task.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    protected String by;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs ToDo object","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs Todo object","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param status Task\u0027s completion status.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public ToDo(String status, String description){","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.setStatus(status);","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns ToDo task","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @return \u0027T\u0027 ToDo task.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public char getTaskType() {","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return \u0027T\u0027;","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns ToDo message","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return details of ToDo task.","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"yinyin377":1,"-":47}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  UI.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"yinyin377"},"content":" *  Defines the UI - User Interface of \u0027duke\u0027.","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class UI {","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    UI() {}","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"yinyin377"},"content":"     * This method shows the duke\u0027s Welcome message","lastModifiedDate":"2022-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    void showWelcome(){","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        showLine();","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"yinyin377"},"content":"        System.out.println(\"Hello! I\u0027m duke\");","lastModifiedDate":"2022-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showLine();","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * This method show the divider line.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    void showLine(){","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        System.out.println(\"\\t_____________________________________________________________\");","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns input from user","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return myObj Input from user","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    String readCommand(){","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return myObj.nextLine();","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * This method show error during loading.","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void showLoadingError() {","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        System.out.println(\"No record loaded into task list.\");","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * This method display error message.","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param message Error message","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void displayError(String message){","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        System.out.println(message);","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"yinyin377":4,"-":55}},{"path":"src/main/java/duke/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  UpdateCommand.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines the \u0027update\u0027 action flow to update","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" *  Date and Time of Event or Deadline Object.","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class UpdateCommand extends Command{","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private int index;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private String dateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs Update Command object with task index.","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param index Parsed task index.","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param datetime Updated data and time","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public UpdateCommand(int index,String dateTime){","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * This method \u0027Executes\u0027 the command and display message","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * after successfully updated date and time.","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param tasks Object of Task class.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param ui Object of UI class - User Interface.","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param storage Object of Storage class.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        //mark task as completed","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Task task \u003d tasks.updateTask(index-1,dateTime);","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        //display successful message","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        System.out.println(\"\\tNice! I\u0027ve updated this task:\");","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        System.out.println(\"\\t  \" + task.toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns not to exit program.","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"yinyin377"},"content":"     * @return false Command \u0027duke\u0027 not to exit","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * after done command.","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"yinyin377":2,"-":46}},{"path":"src/main/java/duke/ViewCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"package duke;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":" *  ViewCommand.java","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *  Defines the \u0027View\u0027 action to view","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" *  schedule for a specific date.","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ViewCommand extends Command{","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private String keyWord;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     *  Constructs View Command object.","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public ViewCommand(String keyWord){","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * This method \u0027Executes\u0027 the command and","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *  display searched tasks in the task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tasks Object of Task class.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param ui Object of UI class - User Interface.","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param storage Object of Storage class.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        System.out.println(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        //print all tasks in task list","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c tasks.getTaskSize() + 1; i++) {","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Task task \u003d tasks.getTaskList().get(i - 1);","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            String dateTime \u003d \"\";","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            if(task.getTaskType()\u003d\u003d\u0027E\u0027){","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                Event event;","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                event \u003d (Event) tasks.getTaskList().get(i - 1);","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                dateTime \u003d event.getLast();","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            if(task.getTaskType()\u003d\u003d\u0027D\u0027){","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Deadline deadline;","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                deadline \u003d (Deadline) tasks.getTaskList().get(i - 1);","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                dateTime \u003d deadline.getLast();","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            if(dateTime.contains(keyWord)){","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                System.out.println(\"\\t\"+String.format(i + \".\" + task, task.getStatusIcon()));","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns not to exit program.","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"yinyin377"},"content":"     * @return false Command \u0027duke\u0027 not to exit","lastModifiedDate":"2022-02-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * after list command.","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"yinyin377":2,"-":54}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class DukeTest {","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"yinyin377"},"content":"    void name() {","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        assertEquals(2,2);","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"yinyin377"},"content":"}","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"yinyin377":2,"-":9}},{"path":"src/test/java/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yinyin377"},"content":"import duke.ExitCommand;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"yinyin377"},"content":"    void ExitCommand_Return_ExitIsTrue_ByDefault_Test() {","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        assertEquals(true,new ExitCommand().isExit());","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"yinyin377"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"yinyin377":3,"-":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yinyin377"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yinyin377":1,"-":20}}]
