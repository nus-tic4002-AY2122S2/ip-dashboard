[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"plugins {","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"repositories {","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"    mavenCentral()","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"dependencies {","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"test {","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"    testLogging {","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"        showExceptions true","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"        showCauses true","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"        showStackTraces true","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"application {","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"shadowJar {","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"checkstyle {","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"run{","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"YangShuogeng":47}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"@rem","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"@rem","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\"","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"@rem Find java.exe","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"echo.","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"echo.","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"goto fail","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"echo.","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"echo.","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"goto fail","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"YangShuogeng"},"content":":init","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"YangShuogeng"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"YangShuogeng"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"YangShuogeng"},"content":":win9xME_args","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"YangShuogeng"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"YangShuogeng"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"YangShuogeng"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"YangShuogeng"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"YangShuogeng"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"YangShuogeng"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"YangShuogeng"},"content":":execute","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"YangShuogeng"},"content":"@rem Setup the command line","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"YangShuogeng"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"YangShuogeng"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"YangShuogeng"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"YangShuogeng"},"content":":end","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"YangShuogeng"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"YangShuogeng"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"YangShuogeng"},"content":":fail","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"YangShuogeng"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"YangShuogeng"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"YangShuogeng"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-01-22"},{"lineNumber":79,"author":{"gitId":"YangShuogeng"},"content":"exit /b 1","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"YangShuogeng"},"content":":mainEnd","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"YangShuogeng"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-01-22"},{"lineNumber":83,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":84,"author":{"gitId":"YangShuogeng"},"content":":omega","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"YangShuogeng":84}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import commands.Command;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import exceptions.DukeDateTimeError;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import exceptions.DukeStorageError;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import exceptions.DukeTaskInputException;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import task_classes.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"/*","lastModifiedDate":"2022-01-15"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"    15th Jan 2022, Repo to the new upstream repo (https://github.com/nus-tic4002-AY2122S2/ip)","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":" */","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * initialize Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param filePath the target file location in local drive to store or extract task data from","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException handles all input error","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws DukeStorageError handles all error during local file extraction and save","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Duke (String filePath) throws IOException, DukeStorageError {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ui.showGreetingMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        storage \u003d new Storage (filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (DukeStorageError |  DukeDateTimeError e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Start Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws IOException Handle all input errors","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private void run() throws IOException {","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                Ui.toPrintSeparateLine(); // show the divider line (\"________\")","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } catch (DukeTaskInputException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                String errorType \u003d DukeTaskInputException.getErrorType();","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                switch (errorType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    case \"taskListEmpty\":","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"YangShuogeng"},"content":"                        DukeTaskInputException.toPrintListIsEmptyError();","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    case \"commandCreateError\":","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                        DukeTaskInputException.toPrintCommandCreateError();","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    case \"cannotUnderstand\":","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                        DukeTaskInputException.invalidFirstWordInput();","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                    default:","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                        DukeTaskInputException.formatWrong();","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            } catch(Exception  e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                DukeTaskInputException.formatWrong();","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            } catch (DukeDateTimeError e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                System.out.println(\"     OOps! The input dateTime format wrong. Please try again.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            } finally {","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                Ui.toPrintSeparateLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                System.out.println(\"\");","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        storage.transferToFile(taskList.getVectorList());","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static void main(String[] args) throws IOException, DukeStorageError {","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        new Duke(\"data/dukeTasks.txt\").run();","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":83,"YangShuogeng":5}},{"path":"src/main/java/exceptions/DukeTaskInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package exceptions;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class DukeTaskInputException extends Exception {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    private static String errorType;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * To initialize DukeTaskInputException","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * @param errorTypeInput the error type","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public DukeTaskInputException(String errorTypeInput) {","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        errorType \u003d errorTypeInput;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * To get the error type","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @return the error type","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static String getErrorType() {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return errorType;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * To print the error message if user try to reach any task in empty task list","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"    public static void toPrintListIsEmptyError() {","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        System.out.println(\"     ☹ OOPS!!! The Task List is empty.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * The method to print command creation error","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static void toPrintCommandCreateError() {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        System.out.println(\"     ☹ OOPS!!! The Command you just input was in wrong format.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * To print the error message for the wrong input format","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static void formatWrong() {","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        //Ui.toPrintSeparateLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        System.out.println(\"     \\u2639 OOPS!!! The input format wrong, please try again. :-(\");","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * To print the error message if the first word of user input is not in the detection list:","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static void invalidFirstWordInput() {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        //Ui.toPrintSeparateLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        System.out.println(\"     \\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        //Ui.toPrintSeparateLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"-":53,"YangShuogeng":3}}]
