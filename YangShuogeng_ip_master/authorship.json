[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"plugins {","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"repositories {","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"    mavenCentral()","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"dependencies {","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"test {","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"    testLogging {","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"        showExceptions true","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"        showCauses true","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"        showStackTraces true","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"application {","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"YangShuogeng"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"YangShuogeng"},"content":"shadowJar {","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"YangShuogeng"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"YangShuogeng"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"YangShuogeng"},"content":"checkstyle {","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"YangShuogeng"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"YangShuogeng"},"content":"    configFile file(\"${project.rootDir}/config/checkstyle/checkstyle.xml\")","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"YangShuogeng"},"content":"run{","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"YangShuogeng"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"YangShuogeng"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"YangShuogeng":64}},{"path":"data/dukeTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"D | 0 | return books | 2022-02-11 23:59","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"D | 0 | return money to Micheal | 2022-02-11 23:00","lastModifiedDate":"2022-02-11"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"T | 0 | sss","lastModifiedDate":"2022-02-11"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"T | 0 | interesting","lastModifiedDate":"2022-02-11"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"E | 0 | Birthday Party | 2022-02-10 18:00 | 2022-02-11 03:30","lastModifiedDate":"2022-02-11"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"T | 0 | return book","lastModifiedDate":"2022-02-11"}],"authorContributionMap":{"YangShuogeng":6}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"T | 1 | sleep","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"D | 1 | return books | 2021-12-11 23:59","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"T | 1 | read book","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"T | 0 | have dinner","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"D | 1 | submit homeword | 2021-12-22 23:59","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"T | 0 | buy books","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"E | 0 | project meeting | 2021-12-31 11:00 | 2021-12-31 12:00","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"D | 1 | return cash | 2021-11-11 23:59","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"YangShuogeng":8}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-01-22"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-22"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"@rem","lastModifiedDate":"2022-01-22"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-01-22"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"@rem","lastModifiedDate":"2022-01-22"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-22"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-22"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-01-22"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-01-22"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-01-22"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-01-22"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-01-22"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-01-22"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\"","lastModifiedDate":"2022-01-22"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"@rem Find java.exe","lastModifiedDate":"2022-01-22"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-01-22"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-01-22"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-01-22"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2022-01-22"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"echo.","lastModifiedDate":"2022-01-22"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"echo.","lastModifiedDate":"2022-01-22"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-22"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-22"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"goto fail","lastModifiedDate":"2022-01-22"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-01-22"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-01-22"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-01-22"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2022-01-22"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"echo.","lastModifiedDate":"2022-01-22"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-01-22"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"echo.","lastModifiedDate":"2022-01-22"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-22"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-22"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"goto fail","lastModifiedDate":"2022-01-22"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":48,"author":{"gitId":"YangShuogeng"},"content":":init","lastModifiedDate":"2022-01-22"},{"lineNumber":49,"author":{"gitId":"YangShuogeng"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2022-01-22"},{"lineNumber":50,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":51,"author":{"gitId":"YangShuogeng"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2022-01-22"},{"lineNumber":52,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":53,"author":{"gitId":"YangShuogeng"},"content":":win9xME_args","lastModifiedDate":"2022-01-22"},{"lineNumber":54,"author":{"gitId":"YangShuogeng"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2022-01-22"},{"lineNumber":55,"author":{"gitId":"YangShuogeng"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2022-01-22"},{"lineNumber":56,"author":{"gitId":"YangShuogeng"},"content":"set _SKIP\u003d2","lastModifiedDate":"2022-01-22"},{"lineNumber":57,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":58,"author":{"gitId":"YangShuogeng"},"content":":win9xME_args_slurp","lastModifiedDate":"2022-01-22"},{"lineNumber":59,"author":{"gitId":"YangShuogeng"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2022-01-22"},{"lineNumber":60,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":61,"author":{"gitId":"YangShuogeng"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2022-01-22"},{"lineNumber":62,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":63,"author":{"gitId":"YangShuogeng"},"content":":execute","lastModifiedDate":"2022-01-22"},{"lineNumber":64,"author":{"gitId":"YangShuogeng"},"content":"@rem Setup the command line","lastModifiedDate":"2022-01-22"},{"lineNumber":65,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":66,"author":{"gitId":"YangShuogeng"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-01-22"},{"lineNumber":67,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":68,"author":{"gitId":"YangShuogeng"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-01-22"},{"lineNumber":69,"author":{"gitId":"YangShuogeng"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2022-01-22"},{"lineNumber":70,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":71,"author":{"gitId":"YangShuogeng"},"content":":end","lastModifiedDate":"2022-01-22"},{"lineNumber":72,"author":{"gitId":"YangShuogeng"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-22"},{"lineNumber":73,"author":{"gitId":"YangShuogeng"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-01-22"},{"lineNumber":74,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":75,"author":{"gitId":"YangShuogeng"},"content":":fail","lastModifiedDate":"2022-01-22"},{"lineNumber":76,"author":{"gitId":"YangShuogeng"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-01-22"},{"lineNumber":77,"author":{"gitId":"YangShuogeng"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-01-22"},{"lineNumber":78,"author":{"gitId":"YangShuogeng"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-01-22"},{"lineNumber":79,"author":{"gitId":"YangShuogeng"},"content":"exit /b 1","lastModifiedDate":"2022-01-22"},{"lineNumber":80,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":81,"author":{"gitId":"YangShuogeng"},"content":":mainEnd","lastModifiedDate":"2022-01-22"},{"lineNumber":82,"author":{"gitId":"YangShuogeng"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-01-22"},{"lineNumber":83,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-22"},{"lineNumber":84,"author":{"gitId":"YangShuogeng"},"content":":omega","lastModifiedDate":"2022-01-22"}],"authorContributionMap":{"YangShuogeng":84}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"    private void flip() {","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"YangShuogeng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"YangShuogeng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"YangShuogeng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"YangShuogeng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"YangShuogeng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"YangShuogeng"},"content":"        db.flip();","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"YangShuogeng"},"content":"        return db;","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"YangShuogeng":60}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import commands.Command;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import exceptions.DukeDateTimeError;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import exceptions.DukeStorageError;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import exceptions.DukeTaskInputException;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import parser.Parser;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"/*","lastModifiedDate":"2022-01-15"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"    15th Jan 2022, Repo to the new upstream repo (https://github.com/nus-tic4002-AY2122S2/ip)","lastModifiedDate":"2022-01-15"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":" */","lastModifiedDate":"2022-01-15"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"     * initialize Duke function","lastModifiedDate":"2022-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param filePath the target file location in local drive to store or extract task data from","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws IOException handles all input error","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"        //ui.showGreetingMessage();","lastModifiedDate":"2022-02-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (DukeStorageError | DukeDateTimeError e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"            //ui.showLoadingError();","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"    public Duke() {","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"     * To start parsing user input","lastModifiedDate":"2022-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"YangShuogeng"},"content":"     * @param input user input","lastModifiedDate":"2022-02-02"},{"lineNumber":50,"author":{"gitId":"YangShuogeng"},"content":"     * @return the result based on the user input","lastModifiedDate":"2022-02-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"YangShuogeng"},"content":"    private String runDuke(String input) {","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":54,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"YangShuogeng"},"content":"        String errorInfo \u003d \"     \"","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"YangShuogeng"},"content":"                + \"\\\\U+2639\"","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"YangShuogeng"},"content":"                + \" OOPS!!! \";","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"YangShuogeng"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2022-02-01"},{"lineNumber":60,"author":{"gitId":"YangShuogeng"},"content":"            return \"     Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":63,"author":{"gitId":"YangShuogeng"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":64,"author":{"gitId":"YangShuogeng"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2022-02-01"},{"lineNumber":65,"author":{"gitId":"YangShuogeng"},"content":"            echoInfo \u003d c.execute(taskList, ui, storage);","lastModifiedDate":"2022-02-01"},{"lineNumber":66,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"YangShuogeng"},"content":"            storage.transferToFile(taskList.getVectorList());","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":69,"author":{"gitId":"YangShuogeng"},"content":"            return echoInfo;","lastModifiedDate":"2022-02-01"},{"lineNumber":70,"author":{"gitId":"YangShuogeng"},"content":"        } catch (DukeTaskInputException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":71,"author":{"gitId":"YangShuogeng"},"content":"            String errorType \u003d DukeTaskInputException.getErrorType();","lastModifiedDate":"2022-02-01"},{"lineNumber":72,"author":{"gitId":"YangShuogeng"},"content":"            switch (errorType) {","lastModifiedDate":"2022-02-01"},{"lineNumber":73,"author":{"gitId":"YangShuogeng"},"content":"            case \"taskListEmpty\":","lastModifiedDate":"2022-02-01"},{"lineNumber":74,"author":{"gitId":"YangShuogeng"},"content":"                errorInfo \u003d errorInfo","lastModifiedDate":"2022-02-01"},{"lineNumber":75,"author":{"gitId":"YangShuogeng"},"content":"                        + \"The Task List is empty.\";","lastModifiedDate":"2022-02-01"},{"lineNumber":76,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":77,"author":{"gitId":"YangShuogeng"},"content":"                return errorInfo;","lastModifiedDate":"2022-02-01"},{"lineNumber":78,"author":{"gitId":"YangShuogeng"},"content":"            case \"commandCreateError\":","lastModifiedDate":"2022-02-01"},{"lineNumber":79,"author":{"gitId":"YangShuogeng"},"content":"                errorInfo \u003d errorInfo","lastModifiedDate":"2022-02-01"},{"lineNumber":80,"author":{"gitId":"YangShuogeng"},"content":"                        + \"The Command you just input was in wrong format.\";","lastModifiedDate":"2022-02-01"},{"lineNumber":81,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":82,"author":{"gitId":"YangShuogeng"},"content":"                return errorInfo;","lastModifiedDate":"2022-02-01"},{"lineNumber":83,"author":{"gitId":"YangShuogeng"},"content":"            case \"cannotUnderstand\":","lastModifiedDate":"2022-02-01"},{"lineNumber":84,"author":{"gitId":"YangShuogeng"},"content":"                errorInfo \u003d errorInfo","lastModifiedDate":"2022-02-01"},{"lineNumber":85,"author":{"gitId":"YangShuogeng"},"content":"                        + \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-02-01"},{"lineNumber":86,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":87,"author":{"gitId":"YangShuogeng"},"content":"                return errorInfo;","lastModifiedDate":"2022-02-01"},{"lineNumber":88,"author":{"gitId":"YangShuogeng"},"content":"            default:","lastModifiedDate":"2022-02-01"},{"lineNumber":89,"author":{"gitId":"YangShuogeng"},"content":"                errorInfo \u003d errorInfo","lastModifiedDate":"2022-02-01"},{"lineNumber":90,"author":{"gitId":"YangShuogeng"},"content":"                        + \"The input format wrong, please try again. :-(\";","lastModifiedDate":"2022-02-01"},{"lineNumber":91,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":92,"author":{"gitId":"YangShuogeng"},"content":"                return errorInfo;","lastModifiedDate":"2022-02-01"},{"lineNumber":93,"author":{"gitId":"YangShuogeng"},"content":"            }","lastModifiedDate":"2022-02-01"},{"lineNumber":94,"author":{"gitId":"YangShuogeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":95,"author":{"gitId":"YangShuogeng"},"content":"            errorInfo \u003d errorInfo","lastModifiedDate":"2022-02-01"},{"lineNumber":96,"author":{"gitId":"YangShuogeng"},"content":"                    + \"The input format wrong, please try again. :-(\";","lastModifiedDate":"2022-02-01"},{"lineNumber":97,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":98,"author":{"gitId":"YangShuogeng"},"content":"            return errorInfo;","lastModifiedDate":"2022-02-01"},{"lineNumber":99,"author":{"gitId":"YangShuogeng"},"content":"        } catch (DukeDateTimeError e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":100,"author":{"gitId":"YangShuogeng"},"content":"            return \"     OOps! The input dateTime format wrong. Please try again.\";","lastModifiedDate":"2022-02-01"},{"lineNumber":101,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":104,"author":{"gitId":"YangShuogeng"},"content":"    String getResponse(String input) throws IOException {","lastModifiedDate":"2022-02-01"},{"lineNumber":105,"author":{"gitId":"YangShuogeng"},"content":"        String filePath \u003d \"data/dukeTasks.txt\";","lastModifiedDate":"2022-02-01"},{"lineNumber":106,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":107,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":108,"author":{"gitId":"YangShuogeng"},"content":"        Duke dk \u003d new Duke (filePath);","lastModifiedDate":"2022-02-01"},{"lineNumber":109,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":110,"author":{"gitId":"YangShuogeng"},"content":"        echoInfo \u003d dk.runDuke(input);","lastModifiedDate":"2022-02-02"},{"lineNumber":111,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":112,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":40,"YangShuogeng":74}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":" * A Launcher class to workaround classpath issues.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"public class Launcher {","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"     * The program to start Duke","lastModifiedDate":"2022-02-02"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"     * @param args the supplied command-line arguments as an array of String objects","lastModifiedDate":"2022-02-02"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-29"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"YangShuogeng":15}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"        try {","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"            stage.show();","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"YangShuogeng":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-02"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-02"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"/**","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":" */","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"    private Duke duke;","lastModifiedDate":"2022-02-01"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-01"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"     * Function to initialize MainWindow","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-02-02"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"                DialogBox.getDukeDialog(Ui.showGreetingMessageGui(), dukeImage)","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"        );","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"        duke \u003d d;","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"YangShuogeng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"YangShuogeng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-01"},{"lineNumber":50,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":51,"author":{"gitId":"YangShuogeng"},"content":"    @FXML","lastModifiedDate":"2022-02-01"},{"lineNumber":52,"author":{"gitId":"YangShuogeng"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2022-02-01"},{"lineNumber":53,"author":{"gitId":"YangShuogeng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-01"},{"lineNumber":54,"author":{"gitId":"YangShuogeng"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2022-02-01"},{"lineNumber":55,"author":{"gitId":"YangShuogeng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-01"},{"lineNumber":56,"author":{"gitId":"YangShuogeng"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2022-02-01"},{"lineNumber":57,"author":{"gitId":"YangShuogeng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2022-02-01"},{"lineNumber":58,"author":{"gitId":"YangShuogeng"},"content":"        );","lastModifiedDate":"2022-02-01"},{"lineNumber":59,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":60,"author":{"gitId":"YangShuogeng"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-01"},{"lineNumber":61,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":62,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"YangShuogeng":62}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import java.util.Vector;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import exceptions.DukeDateTimeError;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import exceptions.DukeTaskInputException;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"import storage.Storage;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Event;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Todo;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private String type;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private String[] inputWords;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private String description;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The method to initialize AddCommand","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param type the task type","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param inputWords the entire input in String[] type","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws DukeTaskInputException handle all the errors during user input","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public AddCommand(String type, String[] inputWords) throws DukeTaskInputException {","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.inputWords \u003d inputWords;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.description \u003d Parser.toExtractDescription(inputWords);","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * To add Todo type task to the task list","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * The output (message print onto screen) will be included in this method","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param list the entire task list","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"    private String addTodoTask(Vector\u003cTask\u003e list) {","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Todo inputTask \u003d new Todo (description);","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"        boolean isDuplicated \u003d duplicatedCheck(inputTask, list);","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"        if(isDuplicated) {","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"            return \"The task you input is duplicated.\\nPlease check again.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":48,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        list.add(inputTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d Ui.printTodoAddedOutput(inputTask, list.size());","lastModifiedDate":"2022-02-02"},{"lineNumber":52,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * To add Deadline type task to the task list","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * The output (message print onto screen) will be included in this method after task added","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param list the entire task list","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"YangShuogeng"},"content":"    private String addDeadlineTask (Vector\u003cTask\u003e list) throws DukeTaskInputException, DukeDateTimeError {","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String date \u003d Parser.toExtractDate(inputWords);","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Deadline newTask \u003d new Deadline(description, false, date);","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"YangShuogeng"},"content":"        boolean isDuplicated \u003d duplicatedCheck(newTask, list);","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"YangShuogeng"},"content":"        if(isDuplicated) {","lastModifiedDate":"2022-02-11"},{"lineNumber":69,"author":{"gitId":"YangShuogeng"},"content":"            return \"The task you input is duplicated.\\nPlease check again.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":70,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        list.add(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"YangShuogeng"},"content":"        return Ui.printDeadlineAddedOutput(newTask, list.size());","lastModifiedDate":"2022-02-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * To add Event type task to the task list","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The output (message print onto screen) will be included in this method after task added","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param list the entire task list","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"YangShuogeng"},"content":"    private String addEventTask (Vector\u003cTask\u003e list) throws DukeTaskInputException, DukeDateTimeError {","lastModifiedDate":"2022-02-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String date \u003d Parser.toExtractDate(inputWords);","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String startingDateTime \u003d Parser.extractStartingDateTime(date);","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String endingDateTime \u003d Parser.extractEndingDateTime(date);","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Event newTask \u003d new Event(description, false, startingDateTime, endingDateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"YangShuogeng"},"content":"        boolean isDuplicated \u003d duplicatedCheck(newTask, list);","lastModifiedDate":"2022-02-11"},{"lineNumber":93,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":94,"author":{"gitId":"YangShuogeng"},"content":"        if(isDuplicated) {","lastModifiedDate":"2022-02-11"},{"lineNumber":95,"author":{"gitId":"YangShuogeng"},"content":"            return \"The task you input is duplicated.\\nPlease check again.\";","lastModifiedDate":"2022-02-11"},{"lineNumber":96,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":97,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        list.add(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"YangShuogeng"},"content":"        return Ui.printEventAddedOutput(newTask, list.size());","lastModifiedDate":"2022-02-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The method to execute command","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param taskList contain all the task","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param ui Ui class","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param storage Storage class","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws DukeTaskInputException throw all errors about input command","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws DukeDateTimeError throw all errors about date and time","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"YangShuogeng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeTaskInputException, DukeDateTimeError {","lastModifiedDate":"2022-02-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Vector\u003cTask\u003e list \u003d taskList.getVectorList();","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        switch (type) {","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"YangShuogeng"},"content":"            echoInfo \u003d addTodoTask(list);","lastModifiedDate":"2022-02-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"YangShuogeng"},"content":"            echoInfo \u003d addDeadlineTask(list);","lastModifiedDate":"2022-02-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        case \"event\":","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"YangShuogeng"},"content":"            echoInfo \u003d addEventTask(list);","lastModifiedDate":"2022-02-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"YangShuogeng"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"YangShuogeng"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":131,"author":{"gitId":"YangShuogeng"},"content":"        //return \"Add Command\";","lastModifiedDate":"2022-02-02"},{"lineNumber":132,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * The method to let system know whether the command is to exit the Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @return return false, the program continue","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":144,"author":{"gitId":"YangShuogeng"},"content":"    private boolean duplicatedCheck(Task inputTask, Vector\u003cTask\u003e list) {","lastModifiedDate":"2022-02-11"},{"lineNumber":145,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":146,"author":{"gitId":"YangShuogeng"},"content":"        String inputDescription \u003d inputTask.getDescription();","lastModifiedDate":"2022-02-11"},{"lineNumber":147,"author":{"gitId":"YangShuogeng"},"content":"        String inputType \u003d inputTask.getType();","lastModifiedDate":"2022-02-11"},{"lineNumber":148,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":149,"author":{"gitId":"YangShuogeng"},"content":"        for(Task tsk : list) {","lastModifiedDate":"2022-02-11"},{"lineNumber":150,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":151,"author":{"gitId":"YangShuogeng"},"content":"            String tskDescription \u003d tsk.getDescription();","lastModifiedDate":"2022-02-11"},{"lineNumber":152,"author":{"gitId":"YangShuogeng"},"content":"            String tskType \u003d tsk.getType();","lastModifiedDate":"2022-02-11"},{"lineNumber":153,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":154,"author":{"gitId":"YangShuogeng"},"content":"            if(tskType.equals(inputType)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":155,"author":{"gitId":"YangShuogeng"},"content":"                if(tskType.equals(\"T\") \u0026\u0026 tskDescription.equals(inputDescription)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":156,"author":{"gitId":"YangShuogeng"},"content":"                    return true;","lastModifiedDate":"2022-02-11"},{"lineNumber":157,"author":{"gitId":"YangShuogeng"},"content":"                } else if(tskDescription.equals(inputDescription)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":158,"author":{"gitId":"YangShuogeng"},"content":"                    if(tskType.equals(\"D\") \u0026\u0026 tsk.getDeadlineDateTimeString().equals(inputTask.getDeadlineDateTimeString())) {","lastModifiedDate":"2022-02-11"},{"lineNumber":159,"author":{"gitId":"YangShuogeng"},"content":"                        return true;","lastModifiedDate":"2022-02-11"},{"lineNumber":160,"author":{"gitId":"YangShuogeng"},"content":"                    } else if(tskType.equals(\"E\") \u0026\u0026 tsk.getStartingDateTime().equals(inputTask.getStartingDateTime())) {","lastModifiedDate":"2022-02-11"},{"lineNumber":161,"author":{"gitId":"YangShuogeng"},"content":"                        return true;","lastModifiedDate":"2022-02-11"},{"lineNumber":162,"author":{"gitId":"YangShuogeng"},"content":"                    }","lastModifiedDate":"2022-02-11"},{"lineNumber":163,"author":{"gitId":"YangShuogeng"},"content":"                }","lastModifiedDate":"2022-02-11"},{"lineNumber":164,"author":{"gitId":"YangShuogeng"},"content":"            }","lastModifiedDate":"2022-02-11"},{"lineNumber":165,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":166,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":167,"author":{"gitId":"YangShuogeng"},"content":"        return false;","lastModifiedDate":"2022-02-11"},{"lineNumber":168,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"-":102,"YangShuogeng":67}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import exceptions.DukeDateTimeError;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import exceptions.DukeTaskInputException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    Command() {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The method to execute command","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param taskList contain all the task","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param ui Ui class","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param storage Storage class","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws DukeTaskInputException throw all errors about input command","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws DukeDateTimeError throw all errors about date and time","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"            throws DukeDateTimeError, DukeTaskInputException;","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The method to let system know whether the command is to exit the Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @return false / true. False means program continue. True means this command is used to exit Duke program","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"-":30,"YangShuogeng":3}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import exceptions.DukeTaskInputException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int index;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To initialize DeleteCommand","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"     * @param index the index number of the task in the task list, not the index in Task type Vector","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The method to execute command","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param taskList contain all the task","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param ui Ui class","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param storage Storage class","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws DukeTaskInputException throw all errors about input command","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"    public String execute (TaskList taskList, Ui ui, Storage storage) throws DukeTaskInputException {","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new DukeTaskInputException(\"listIsEmpty\");","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Task deletedTask \u003d taskList.getTask(index);","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"        echoInfo \u003d Ui.toPrintTaskDeletedMessage(deletedTask, taskList.size());","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * The method to let system know whether the command is to exit the Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return return false, the program continue","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"-":44,"YangShuogeng":10}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * The method to execute command","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param taskList contain all the task","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param ui Ui class","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param storage Storage class","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"        //Ui.printGoodbyeOutput();","lastModifiedDate":"2022-02-01"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"        return \"Exist Command\";","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The method to let system know whether the command is to exit the Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @return return true, the program needs to be terminated. Exit Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"-":30,"YangShuogeng":5}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import java.util.Vector;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import exceptions.DukeTaskInputException;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private String keyword;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * To initialize FindCommand","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param keyword the keyword for find to search in the task list","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FindCommand (String keyword) {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The method to execute command","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param taskList contain all the task","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param ui Ui class","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param storage Storage class","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws DukeTaskInputException throw all errors about input command","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeTaskInputException {","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Vector\u003cTask\u003e list \u003d taskList.getVectorList();","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Vector\u003cTask\u003e matchedTaskList \u003d getMatchedTasks(list);","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"        echoInfo \u003d TaskList.toPrintEntireTaskList(matchedTaskList); // print all the matched task","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * The method to let system know whether the command is to exit the Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return return false, the program continue","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * The method to extract all the matched task in the taskList","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param list the task list which contain all the tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @return the matched task(s)","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private Vector\u003cTask\u003e getMatchedTasks (Vector\u003cTask\u003e list) {","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Vector\u003cTask\u003e matchedTaskList \u003d new Vector\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (Task task: list) {","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"YangShuogeng"},"content":"            String description \u003d task.getDescription().toLowerCase();","lastModifiedDate":"2022-02-11"},{"lineNumber":65,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":66,"author":{"gitId":"YangShuogeng"},"content":"            if(description.contains(keyword)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":67,"author":{"gitId":"YangShuogeng"},"content":"                matchedTaskList.add(task);","lastModifiedDate":"2022-02-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return matchedTaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"-":57,"YangShuogeng":16}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public ListCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * The method to execute command","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param taskList contain all the task","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param ui Ui class","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param storage Storage class","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-01"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-02-01"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"        //For GUI type","lastModifiedDate":"2022-02-01"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"        echoInfo \u003d taskList.toPrintEntireTaskListGui();","lastModifiedDate":"2022-02-02"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * The method to let system know whether the command is to exit the Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @return return false, the program continue","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"-":30,"YangShuogeng":8}},{"path":"src/main/java/commands/MarkAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package commands;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import exceptions.DukeTaskInputException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.TaskList;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class MarkAsDoneCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private int index;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * The method to initialize MarkAsDoneCommand","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"     * @param index the index of the task in the task list, not in the Task type Vector","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public MarkAsDoneCommand(int index) {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.index \u003d index - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The method to execute command","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param taskList contain all the task","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param ui Ui class","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param storage Storage class","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws DukeTaskInputException throw all errors about input command","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeTaskInputException {","lastModifiedDate":"2022-02-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        int taskListSize \u003d taskList.size();","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"        if (index \u003e\u003d taskListSize || index \u003c 0) {","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new DukeTaskInputException(\"listIsEmpty\");","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        taskList.getTask(index).markAsDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"        echoInfo \u003d ui.printMarkAsDoneOutput(taskList.getTask(index));","lastModifiedDate":"2022-02-02"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * The method to let system know whether the command is to exit the Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return return false, the program continue","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"-":45,"YangShuogeng":9}},{"path":"src/main/java/commands/Schedule.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"package commands;","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import dukedatetime.DateTimeDuke;","lastModifiedDate":"2022-02-10"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"import exceptions.DukeDateTimeError;","lastModifiedDate":"2022-02-10"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import exceptions.DukeTaskInputException;","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"import storage.Storage;","lastModifiedDate":"2022-02-10"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Task;","lastModifiedDate":"2022-02-11"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.TaskList;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"import ui.Ui;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"import java.util.Vector;","lastModifiedDate":"2022-02-11"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"public class Schedule extends Command {","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"    private DateTimeDuke date;","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"    public Schedule (String date) throws DukeDateTimeError {","lastModifiedDate":"2022-02-10"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"        date +\u003d \" 11:11\";","lastModifiedDate":"2022-02-11"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"        this.date \u003d new DateTimeDuke(date);","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"    private Vector\u003cTask\u003e getMatchedTasks(Vector\u003cTask\u003e list, String scheduleDate) {","lastModifiedDate":"2022-02-11"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"        Vector\u003cTask\u003e matchedTasks \u003d new Vector\u003c\u003e();","lastModifiedDate":"2022-02-11"},{"lineNumber":24,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"        for(Task tsk : list) {","lastModifiedDate":"2022-02-11"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"           String tskType \u003d tsk.getType();","lastModifiedDate":"2022-02-11"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"           String tskDate \u003d \"\";","lastModifiedDate":"2022-02-11"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"           switch (tskType) {","lastModifiedDate":"2022-02-11"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"           case \"D\":","lastModifiedDate":"2022-02-11"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"               tskDate \u003d tsk.getDeadlineTime().convertToStringTypeIII();","lastModifiedDate":"2022-02-11"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"               break;","lastModifiedDate":"2022-02-11"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"           case \"E\":","lastModifiedDate":"2022-02-11"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"               tskDate \u003d tsk.getStartingTime().convertToStringTypeIII();","lastModifiedDate":"2022-02-11"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"               break;","lastModifiedDate":"2022-02-11"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"           default:","lastModifiedDate":"2022-02-11"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"               break;","lastModifiedDate":"2022-02-11"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"           }","lastModifiedDate":"2022-02-11"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"           if(tskDate.equals(scheduleDate)) {","lastModifiedDate":"2022-02-11"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"               matchedTasks.add(tsk);","lastModifiedDate":"2022-02-11"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"           }","lastModifiedDate":"2022-02-11"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-02-11"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"        return matchedTasks;","lastModifiedDate":"2022-02-11"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"YangShuogeng"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"YangShuogeng"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeDateTimeError, DukeTaskInputException {","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"YangShuogeng"},"content":"        Vector\u003cTask\u003e list \u003d taskList.getVectorList();","lastModifiedDate":"2022-02-11"},{"lineNumber":52,"author":{"gitId":"YangShuogeng"},"content":"        Vector\u003cTask\u003e matchedTaskList \u003d getMatchedTasks(list, this.date.convertToStringTypeIII());","lastModifiedDate":"2022-02-11"},{"lineNumber":53,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-11"},{"lineNumber":54,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-11"},{"lineNumber":55,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"YangShuogeng"},"content":"        echoInfo \u003d TaskList.toPrintEntireTaskList(matchedTaskList); // print all the matched task","lastModifiedDate":"2022-02-11"},{"lineNumber":57,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-11"},{"lineNumber":59,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"YangShuogeng"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"YangShuogeng"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"YangShuogeng"},"content":"        return false;","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"YangShuogeng"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"YangShuogeng":66}},{"path":"src/main/java/dukedatetime/DateTimeDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"package dukedatetime;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import exceptions.DukeDateTimeError;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Deadline:","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *          YYYY-MM-DD Hour(0-23):Minute(0-59)","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Event:","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *          YYYY-MM-DD Hour(0-23):Minute(0-59) -\u003e YYYY-MM-DD Hour(0-23):Minute(0-59)","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DateTimeDuke {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private LocalDateTime localDateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The method to initialize DateTimeDuke","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param date the string contain year, month, day, hour, and minute. Format: yyyy-MM-dd HH:mm","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public DateTimeDuke(String date) throws DukeDateTimeError {","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            localDateTime \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new DukeDateTimeError(\"inputFormatWrong\");","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * The method to convert DateTimeDuke type to String in pattern: MMM d yyyy HH:mm","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return DateTime information in String in MMM d yyyy HH:mm","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String convertToStringTypeI() {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return localDateTime.format(formatter);","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"     * The method to convert DateTimeDuke type to String in pattern: yyyy-MM-dd HH:mm","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return DateTime information in String in MMM d yyyy HH:mm","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String convertToStringTypeII() {","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return localDateTime.format(formatter);","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":55,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"YangShuogeng"},"content":"     * The method to convert DateTimeDuke type to String in pattern: yyyy-MM-dd","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"YangShuogeng"},"content":"     * @return DateTime information in String in yyyy-MM-dd format","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"YangShuogeng"},"content":"    public String convertToStringTypeIII() {","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"YangShuogeng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"YangShuogeng"},"content":"        return localDateTime.format(formatter);","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"-":50,"YangShuogeng":15}},{"path":"src/main/java/exceptions/DukeTaskInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package exceptions;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class DukeTaskInputException extends Exception {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    private static String errorType;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * To initialize DukeTaskInputException","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * @param errorTypeInput the error type","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public DukeTaskInputException(String errorTypeInput) {","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        errorType \u003d errorTypeInput;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * To get the error type","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @return the error type","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static String getErrorType() {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return errorType;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * To print the error message if user try to reach any task in empty task list","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"YangShuogeng"},"content":"    public static void toPrintListIsEmptyError() {","lastModifiedDate":"2022-01-22"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"        System.out.print(\"     \" + \"\\\\U+2639\" + \" OOPS!!! \");","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"        System.out.println(\"The Task List is empty.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * The method to print command creation error","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static void toPrintCommandCreateError() {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"        System.out.print(\"     \" + \"\\\\U+2639\" + \" OOPS!!! \");","lastModifiedDate":"2022-01-23"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"        System.out.println(\"The Command you just input was in wrong format.\");","lastModifiedDate":"2022-01-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * To print the error message for the wrong input format","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static void formatWrong() {","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        //Ui.toPrintSeparateLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        System.out.println(\"     \\u2639 OOPS!!! The input format wrong, please try again. :-(\");","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * To print the error message if the first word of user input is not in the detection list:","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static void invalidFirstWordInput() {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        //Ui.toPrintSeparateLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        System.out.println(\"     \\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        //Ui.toPrintSeparateLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"-":51,"YangShuogeng":5}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import commands.AddCommand;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"import commands.Command;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"import commands.ExitCommand;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"import commands.FindCommand;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"import commands.ListCommand;","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"import commands.MarkAsDoneCommand;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"import exceptions.DukeDateTimeError;","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"import exceptions.DukeTaskInputException;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"import commands.Schedule;","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Parser {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * To extract task description information from user input","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param inputWords all user input in String[] type","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the description in String type","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"     * @throws DukeTaskInputException throw all input errors","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String toExtractDescription(String[] inputWords) throws DukeTaskInputException {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArrayList\u003cString\u003e bufferA \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"        /* If the input is to add todo task,","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"           then the length of the array must greater then 1 or there is no description","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"         */","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (inputWords.length \u003c 2) {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new DukeTaskInputException(\"descriptionMissing\");","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        switch (inputWords[0]) {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            bufferA.addAll(Arrays.asList(inputWords).subList(1, inputWords.length));","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return convertStringArrayToString(bufferA);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            for (int n \u003d inputWords.length - 1; n \u003e 0; n--) {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                if (inputWords[n].equals(\"/by\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    if (n \u003d\u003d 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        throw new DukeTaskInputException(\"descriptionMissing\");","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    if (n \u003d\u003d inputWords.length - 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"YangShuogeng"},"content":"                        throw new DukeTaskInputException(\"dukedatetime\");","lastModifiedDate":"2022-01-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    bufferA.addAll(Arrays.asList(inputWords).subList(1, n));","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    return convertStringArrayToString(bufferA);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case \"event\":","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            for (int n \u003d inputWords.length - 1; n \u003e 0; n--) {","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                if (inputWords[n].equals(\"/at\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    if (n \u003d\u003d 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                        throw new DukeTaskInputException(\"descriptionMissing\");","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    if (n \u003d\u003d inputWords.length - 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"YangShuogeng"},"content":"                        throw new DukeTaskInputException(\"dukedatetime\");","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                    bufferA.addAll(Arrays.asList(inputWords).subList(1, n));","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    return convertStringArrayToString(bufferA);","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"YangShuogeng"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":75,"author":{"gitId":"YangShuogeng"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"YangShuogeng"},"content":"        throw new DukeTaskInputException(\"dukedatetime\");","lastModifiedDate":"2022-01-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * To extract time/date information from user input","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param inputWords all user input in String[] type","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return the time/date information in String type","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"YangShuogeng"},"content":"     * @throws DukeTaskInputException Throw all input error","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static String toExtractDate(String[] inputWords) throws DukeTaskInputException {","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ArrayList\u003cString\u003e bufferA \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"YangShuogeng"},"content":"        /* If the input is to add todo task,","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"YangShuogeng"},"content":"           then the length of the array must greater then 1 or there is no description */","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (inputWords.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DukeTaskInputException(\"descriptionMissing\");","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        switch (inputWords[0]) {","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            bufferA.addAll(Arrays.asList(inputWords).subList(1, inputWords.length));","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return convertStringArrayToString(bufferA);","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            for (int n \u003d inputWords.length - 1; n \u003e 0; n--) {","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                if (inputWords[n].equals(\"/by\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                    if (n \u003d\u003d 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                        throw new DukeTaskInputException(\"descriptionMissing\");","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                    if (n \u003d\u003d inputWords.length - 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"YangShuogeng"},"content":"                        throw new DukeTaskInputException(\"dukedatetime\");","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                    bufferA.addAll(Arrays.asList(inputWords).subList(n + 1, inputWords.length));","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                    return convertStringArrayToString(bufferA);","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        case \"event\":","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            for (int n \u003d inputWords.length - 1; n \u003e 0; n--) {","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                if (inputWords[n].equals(\"/at\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                    if (n \u003d\u003d 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                        throw new DukeTaskInputException(\"descriptionMissing\");","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    if (n \u003d\u003d inputWords.length - 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"YangShuogeng"},"content":"                        throw new DukeTaskInputException(\"dukedatetime\");","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                    bufferA.addAll(Arrays.asList(inputWords).subList(n + 1, inputWords.length));","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    return convertStringArrayToString(bufferA);","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":134,"author":{"gitId":"YangShuogeng"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":135,"author":{"gitId":"YangShuogeng"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":138,"author":{"gitId":"YangShuogeng"},"content":"        throw new DukeTaskInputException(\"dukedatetime\");","lastModifiedDate":"2022-01-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * To convert String[] to String type","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @param strArr String[] information","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @return String[] information in String type","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static String convertStringArrayToString(ArrayList\u003cString\u003e strArr) {","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"YangShuogeng"},"content":"        for (String str : strArr) {","lastModifiedDate":"2022-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            sb.append(str).append(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-01-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return sb.substring(0, sb.length() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * To check customer input String. If the input only has one word and not \"list\" and \"bye\".","lastModifiedDate":"2021-08-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * This function will throw an error which will tell user that the input in incorrect and please try again;","lastModifiedDate":"2021-08-29"},{"lineNumber":158,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":159,"author":{"gitId":"YangShuogeng"},"content":"     * @param firstWord  The first word of the customer input which used to compare the condition;","lastModifiedDate":"2022-01-23"},{"lineNumber":160,"author":{"gitId":"YangShuogeng"},"content":"     * @param inputWords The customer input which used to check length;","lastModifiedDate":"2022-01-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @throws DukeTaskInputException The error which the input is not correct.","lastModifiedDate":"2021-08-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"YangShuogeng"},"content":"    private static void inputLengthChecking(String firstWord, String[] inputWords) throws DukeTaskInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":164,"author":{"gitId":"YangShuogeng"},"content":"        if (!firstWord.equals(\"list\")","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"YangShuogeng"},"content":"                \u0026\u0026 !firstWord.equals(\"bye\")","lastModifiedDate":"2022-01-23"},{"lineNumber":166,"author":{"gitId":"YangShuogeng"},"content":"                \u0026\u0026 !firstWord.equals(\"help\")","lastModifiedDate":"2022-01-23"},{"lineNumber":167,"author":{"gitId":"YangShuogeng"},"content":"                \u0026\u0026 !firstWord.equals(\"update\")","lastModifiedDate":"2022-01-23"},{"lineNumber":168,"author":{"gitId":"YangShuogeng"},"content":"                \u0026\u0026 !firstWord.equals(\"search\")","lastModifiedDate":"2022-01-23"},{"lineNumber":169,"author":{"gitId":"YangShuogeng"},"content":"                \u0026\u0026 !firstWord.equals(\"datetype\")","lastModifiedDate":"2022-01-23"},{"lineNumber":170,"author":{"gitId":"YangShuogeng"},"content":"                \u0026\u0026 !firstWord.equals(\"timetype\")","lastModifiedDate":"2022-01-23"},{"lineNumber":171,"author":{"gitId":"YangShuogeng"},"content":"                \u0026\u0026 !firstWord.equals(\"find\")","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"YangShuogeng"},"content":"                \u0026\u0026 !firstWord.equals(\"todoafter\")","lastModifiedDate":"2022-01-23"},{"lineNumber":173,"author":{"gitId":"YangShuogeng"},"content":"                \u0026\u0026 !firstWord.equals(\"processing\")","lastModifiedDate":"2022-01-23"},{"lineNumber":174,"author":{"gitId":"YangShuogeng"},"content":"                \u0026\u0026 !firstWord.equals(\"delete\")","lastModifiedDate":"2022-01-23"},{"lineNumber":175,"author":{"gitId":"YangShuogeng"},"content":"                \u0026\u0026 !firstWord.equals(\"todo\")","lastModifiedDate":"2022-01-23"},{"lineNumber":176,"author":{"gitId":"YangShuogeng"},"content":"                \u0026\u0026 !firstWord.equals(\"event\")","lastModifiedDate":"2022-01-23"},{"lineNumber":177,"author":{"gitId":"YangShuogeng"},"content":"                \u0026\u0026 !firstWord.equals(\"deadline\")","lastModifiedDate":"2022-01-23"},{"lineNumber":178,"author":{"gitId":"YangShuogeng"},"content":"                \u0026\u0026 inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2022-01-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new DukeTaskInputException(\"cannotUnderstand\");","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * The method to extract task index from the user input for done and delete input","lastModifiedDate":"2021-09-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * @param inputWords user input int String[] type","lastModifiedDate":"2021-09-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @return task index","lastModifiedDate":"2021-09-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @throws DukeTaskInputException all error handler","lastModifiedDate":"2021-09-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private static int toExtractNumberForDoneAndDelete(String[] inputWords) throws DukeTaskInputException {","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        if (inputWords.length \u003d\u003d 2 \u0026\u0026 inputWords[1].matches(\"\\\\d+\")) { // to check whether the char is integer","lastModifiedDate":"2021-09-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            int taskIndex;","lastModifiedDate":"2021-09-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            taskIndex \u003d Integer.parseInt(inputWords[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return taskIndex;","lastModifiedDate":"2021-09-07"},{"lineNumber":197,"author":{"gitId":"YangShuogeng"},"content":"        } else {","lastModifiedDate":"2022-01-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throw new DukeTaskInputException(\"formatWrong\");","lastModifiedDate":"2021-09-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * The method to parse every input command","lastModifiedDate":"2021-09-19"},{"lineNumber":204,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * @param fullCommand the full input command by user","lastModifiedDate":"2021-09-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * @return return the Command created accordingly","lastModifiedDate":"2021-09-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @throws DukeTaskInputException handles all the errors about the user input","lastModifiedDate":"2021-09-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":209,"author":{"gitId":"YangShuogeng"},"content":"    public static Command parse(String fullCommand) throws DukeTaskInputException, DukeDateTimeError {","lastModifiedDate":"2022-02-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        String[] inputWords \u003d fullCommand.split(\" \");","lastModifiedDate":"2021-09-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        String firstWord \u003d inputWords[0].toLowerCase();","lastModifiedDate":"2021-09-17"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":214,"author":{"gitId":"YangShuogeng"},"content":"        Parser.inputLengthChecking(firstWord, inputWords);","lastModifiedDate":"2022-01-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-09-17"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-17"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-17"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return createDeleteCommand(inputWords);","lastModifiedDate":"2021-09-17"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        case \"done\":","lastModifiedDate":"2021-09-17"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return createMarkAsDoneCommand(inputWords);","lastModifiedDate":"2021-09-17"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        case \"list\":","lastModifiedDate":"2021-09-17"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-17"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-17"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        case \"event\":","lastModifiedDate":"2021-09-17"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return createAddCommand(firstWord, inputWords);","lastModifiedDate":"2021-09-17"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        case \"find\":","lastModifiedDate":"2021-09-17"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return new FindCommand(inputWords[1]);","lastModifiedDate":"2021-09-17"},{"lineNumber":231,"author":{"gitId":"YangShuogeng"},"content":"        case \"schedule\":","lastModifiedDate":"2022-02-11"},{"lineNumber":232,"author":{"gitId":"YangShuogeng"},"content":"            return new Schedule(inputWords[1]);","lastModifiedDate":"2022-02-10"},{"lineNumber":233,"author":{"gitId":"YangShuogeng"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":234,"author":{"gitId":"YangShuogeng"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        throw new DukeTaskInputException(\"commandCreateError\");","lastModifiedDate":"2021-09-17"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * The method to create deleteCommand","lastModifiedDate":"2021-09-19"},{"lineNumber":242,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * @param inputWords the user input in String[] format","lastModifiedDate":"2021-09-19"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     * @return return DeletedCommanded created according to the user input","lastModifiedDate":"2021-09-19"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * @throws DukeTaskInputException handles all errors about the user input","lastModifiedDate":"2021-09-19"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    private static DeleteCommand createDeleteCommand(String[] inputWords) throws DukeTaskInputException {","lastModifiedDate":"2021-09-17"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        int taskIndex \u003d toExtractNumberForDoneAndDelete(inputWords);","lastModifiedDate":"2021-09-17"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        return new DeleteCommand(taskIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * The method to create MarkAsDoneCommand","lastModifiedDate":"2021-09-19"},{"lineNumber":254,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     * @param inputWords the user input in String[] format","lastModifiedDate":"2021-09-19"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * @return return MarkAsDoneCommand created according to the user input","lastModifiedDate":"2021-09-19"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * @throws DukeTaskInputException handles all errors about the user input","lastModifiedDate":"2021-09-19"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    private static MarkAsDoneCommand createMarkAsDoneCommand(String[] inputWords) throws DukeTaskInputException {","lastModifiedDate":"2021-09-17"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        int taskIndex \u003d toExtractNumberForDoneAndDelete(inputWords);","lastModifiedDate":"2021-09-17"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        return new MarkAsDoneCommand(taskIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * The method to create AddCommand","lastModifiedDate":"2021-09-19"},{"lineNumber":267,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * @param inputWords the user input in String[] format","lastModifiedDate":"2021-09-19"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * @return return AddCommand created according to the user input","lastModifiedDate":"2021-09-19"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * @throws DukeTaskInputException handles all errors about the user input","lastModifiedDate":"2021-09-19"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    private static AddCommand createAddCommand(String firstWord, String[] inputWords) throws DukeTaskInputException {","lastModifiedDate":"2021-09-17"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        return new AddCommand(firstWord, inputWords);","lastModifiedDate":"2021-09-17"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     * The method to extract starting date time from user input","lastModifiedDate":"2021-09-19"},{"lineNumber":278,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     * @param input user input command in String format","lastModifiedDate":"2021-09-19"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     * @return starting date time in String format","lastModifiedDate":"2021-09-19"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * @throws DukeDateTimeError handles all errors about DukeDateTime creation","lastModifiedDate":"2021-09-19"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    public static String extractStartingDateTime(String input) throws DukeDateTimeError {","lastModifiedDate":"2021-09-19"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2021-09-19"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        ArrayList\u003cString\u003e buffer \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        for (int n \u003d words.length - 1; n \u003e 0; n--) {","lastModifiedDate":"2021-09-19"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            if (words[n].equals(\"-\u003e\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                if (n \u003d\u003d 1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    throw new DukeDateTimeError(\"dateFormatWrong\");","lastModifiedDate":"2021-09-19"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                buffer.addAll(Arrays.asList(words).subList(0, n));","lastModifiedDate":"2021-09-19"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                return convertStringArrayToString(buffer);","lastModifiedDate":"2021-09-19"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        throw new DateTimeException(\"dateFormatWrong\");","lastModifiedDate":"2021-09-19"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":304,"author":{"gitId":"-"},"content":"     * The method to extract ending date time from user input","lastModifiedDate":"2021-09-19"},{"lineNumber":305,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"     * @param input user input command in String format","lastModifiedDate":"2021-09-19"},{"lineNumber":307,"author":{"gitId":"-"},"content":"     * @return ending date time in String format","lastModifiedDate":"2021-09-19"},{"lineNumber":308,"author":{"gitId":"-"},"content":"     * @throws DukeDateTimeError handles all errors about DukeDateTime creation","lastModifiedDate":"2021-09-19"},{"lineNumber":309,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    public static String extractEndingDateTime(String input) throws DukeDateTimeError {","lastModifiedDate":"2021-09-19"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2021-09-19"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        ArrayList\u003cString\u003e buffer \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        for (int n \u003d words.length - 1; n \u003e 0; n--) {","lastModifiedDate":"2021-09-19"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            if (words[n].equals(\"-\u003e\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                if (n \u003d\u003d 1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                    throw new DukeDateTimeError(\"dateFormatWrong\");","lastModifiedDate":"2021-09-19"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                if (n \u003d\u003d words.length - 1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                    throw new DateTimeException(\"dateFormatWrong\");","lastModifiedDate":"2021-09-19"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                buffer.addAll(Arrays.asList(words).subList(n + 1, words.length));","lastModifiedDate":"2021-09-19"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                return convertStringArrayToString(buffer);","lastModifiedDate":"2021-09-19"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        throw new DateTimeException(\"dateFormatWrong\");","lastModifiedDate":"2021-09-19"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"-":270,"YangShuogeng":62}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import java.io.File;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Vector;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"import exceptions.DukeDateTimeError;","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"import exceptions.DukeStorageError;","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Storage {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * An default file path which is \"data/dukeTasks.txt\"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"YangShuogeng"},"content":"    private final String defaultStorageFilepath \u003d \"data/dukeTasks.txt\";","lastModifiedDate":"2022-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Path rootPath \u003d Paths.get(\"\").toAbsolutePath();","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String rootDir \u003d rootPath.normalize().toString();","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"    private Path path \u003d Paths.get(rootDir + \"/\" + defaultStorageFilepath);","lastModifiedDate":"2022-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs StorageFile with default file path","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Storage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"        path \u003d Paths.get(rootDir + \"/\" + defaultStorageFilepath);","lastModifiedDate":"2022-01-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * The method to initialize Storage","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param filePath","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Storage (String filePath) {","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        path \u003d Paths.get(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * To add all the Task which in String type in the list into txt file as local storage","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"     * @param lst all the task","lastModifiedDate":"2022-01-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws IOException to handle all errors for FileWriter","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"YangShuogeng"},"content":"    private void toSaveTaskListToLocal(Vector\u003cTask\u003e lst) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"YangShuogeng"},"content":"        if (lst.size() \u003d\u003d 0) {","lastModifiedDate":"2022-01-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"YangShuogeng"},"content":"        Vector\u003cString\u003e taskListInString \u003d TaskListEncoder.encodeTaskList(lst);","lastModifiedDate":"2022-01-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"YangShuogeng"},"content":"        String fileDirectory \u003d String.valueOf(defaultStorageFilepath);","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        //To clear content of existing txt file","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FileWriter fw \u003d new FileWriter(fileDirectory);","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        fw.write(\"\");","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        fw.close();","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        //Start writing Task(s) in Vector\u003cString\u003e list into the new txt file","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        FileWriter newFw \u003d new FileWriter(fileDirectory, true);","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (String task : taskListInString) {","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            newFw.write(task + System.lineSeparator());","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        newFw.close();","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * To check whether the default file path is exist","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @return return boolean whether the default file path is exist","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private boolean fileDoExist() {","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return (Files.exists(path));","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * To check whether the directory folder path is exist","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @return return boolean whether the directory folder path is exist","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private boolean dirDoExist() {","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Files.exists(Paths.get(rootDir + \"/data\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":93,"author":{"gitId":"YangShuogeng"},"content":"     * The function to transfer all the Task information","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"YangShuogeng"},"content":"     * by using Encoder function from Task type Vector List to String and store into txt file","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"YangShuogeng"},"content":"     * @param lst Task type Vector List","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws IOException If the FileWrite those kind of function got any error, an error will be thrown to user","lastModifiedDate":"2021-09-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":98,"author":{"gitId":"YangShuogeng"},"content":"    public void transferToFile(Vector\u003cTask\u003e lst) throws IOException {","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!fileDoExist()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            if (!dirDoExist()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Files.createDirectories(Paths.get(rootDir + \"/data\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Files.createFile(path);","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"YangShuogeng"},"content":"        toSaveTaskListToLocal(lst);","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * The method to extract date from local storage, txt file.","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"YangShuogeng"},"content":"     * @return the task list extracted in Task type Vector format","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws DukeStorageError handles all storage errors during data extraction and storing","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @throws IOException handles all input errors","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"YangShuogeng"},"content":"     * @throws DukeDateTimeError handles all date time error","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public Vector\u003cTask\u003e load() throws DukeStorageError, IOException, DukeDateTimeError {","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Vector\u003cString\u003e extractedTaskInfo \u003d extractTaskInfoFromTxt();","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Vector\u003cTask\u003e list \u003d new Vector\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (extractedTaskInfo.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return list;","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        list \u003d TaskListDecoder.decodeTaskList(extractedTaskInfo);","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return list;","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * The method to extract date from local storage, txt file.","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"YangShuogeng"},"content":"     * @return the task list extracted in String type Vector format","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @throws DukeStorageError handles all storage errors during data extraction and storing","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @throws IOException handles all input errors","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private Vector\u003cString\u003e extractTaskInfoFromTxt() throws IOException, DukeStorageError {","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!fileDoExist()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            if (!dirDoExist()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                Files.createDirectories(Paths.get(rootDir + \"/data\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            Files.createFile(path);","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new DukeStorageError();","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Vector\u003cString\u003e extractedInfo \u003d new Vector\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Scanner sc \u003d null;","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":152,"author":{"gitId":"YangShuogeng"},"content":"            File file \u003d new File(defaultStorageFilepath); // java.io.File","lastModifiedDate":"2022-01-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            sc \u003d new Scanner(file);","lastModifiedDate":"2021-09-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            String line;","lastModifiedDate":"2021-09-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                line \u003d sc.nextLine();","lastModifiedDate":"2021-09-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                extractedInfo.add(line);","lastModifiedDate":"2021-09-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":160,"author":{"gitId":"YangShuogeng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-13"},{"lineNumber":162,"author":{"gitId":"YangShuogeng"},"content":"        } finally {","lastModifiedDate":"2022-01-23"},{"lineNumber":163,"author":{"gitId":"YangShuogeng"},"content":"            if (sc !\u003d null) {","lastModifiedDate":"2022-01-23"},{"lineNumber":164,"author":{"gitId":"YangShuogeng"},"content":"                sc.close();","lastModifiedDate":"2022-01-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return extractedInfo;","lastModifiedDate":"2021-09-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"-":142,"YangShuogeng":29}},{"path":"src/main/java/storage/TaskListDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import java.util.Vector;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import exceptions.DukeDateTimeError;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import exceptions.DukeStorageError;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Event;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Todo;","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class TaskListDecoder {","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"     * The method to convert all the data extracted from local storage,","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"     * txt file, to task format and store in Task type Vector format","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"     * @param storageInformation All the data extracted from txt file in String type Vector format","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"     * @return all the extracted task in Task type Vector format","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws DukeStorageError handles all the errors about storage","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    static Vector\u003cTask\u003e decodeTaskList(Vector\u003cString\u003e storageInformation) throws DukeStorageError, DukeDateTimeError {","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Vector\u003cTask\u003e decodedTaskList \u003d new Vector\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        for (String singleTaskInfo : storageInformation) {","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            Task task \u003d decodeTask(singleTaskInfo);","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            decodedTaskList.add(task);","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return decodedTaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * The method to convert a single task String extracted to a single Task","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param taskString The single task String extracted from txt file","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return The task created based on the single task String","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws DukeStorageError handles all the errors about storage","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static Task decodeTask(String taskString) throws DukeStorageError, DukeDateTimeError {","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String[] parts \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String taskType \u003d parts[0];","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String taskDescription \u003d parts[2];","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        boolean taskStatus \u003d !parts[1].equals(\"0\");","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (parts.length \u003d\u003d 3) { //todo type with correct length","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return new Todo(taskDescription, taskStatus);","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } else if (parts.length \u003d\u003d 5 \u0026\u0026 taskType.equals(\"E\")) { // event with correct length","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            //  type [0] | status [1] | description [2] | starting [3] | ending [4]","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new Event(taskDescription, taskStatus, parts[3], parts[4]);","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } else if (parts.length \u003d\u003d 4 \u0026\u0026 taskType.equals(\"D\")) { // deadline with correct length","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            // type [0] | status [1] | description [2] | deadline date [3]","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new Deadline(taskDescription, taskStatus, parts[3]);","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DukeStorageError();","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"-":51,"YangShuogeng":10}},{"path":"src/main/java/storage/TaskListEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Vector;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import dukedatetime.DateTimeDuke;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"class TaskListEncoder {","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"     * The method to convert all the task(s) data to String format and store in String type Vector format","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"     * @param list the task list in Task type Vector format","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"     * @return all the converted task in String type Vector format","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    static Vector\u003cString\u003e encodeTaskList(Vector\u003cTask\u003e list) {","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Vector\u003cString\u003e encodedTaskList \u003d new Vector\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            String encodedTask \u003d encodeSingleTask(task);","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            encodedTaskList.add(encodedTask);","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return encodedTaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * The method to convert a single task to a single Task in String format","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param task the single Task in the task list","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return the converted task in String format","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static String encodeSingleTask(Task task) {","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String taskType \u003d task.getType();","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String taskDescription \u003d task.getDescription();","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String taskStatus \u003d task.getStatusIcon();","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (taskStatus.equals(\"X\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            taskStatus \u003d \"1\";","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            taskStatus \u003d \"0\";","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String encodedTask \u003d taskType + \" | \" + taskStatus + \" | \" + taskDescription;","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case \"E\":","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            DateTimeDuke starting \u003d task.getStartingTime();","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            DateTimeDuke ending \u003d task.getEndingTime();","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String startingLocalDateTime \u003d starting.convertToStringTypeII();","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            String endingLocalDateTime \u003d ending.convertToStringTypeII();","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            encodedTask \u003d encodedTask + \" | \" + startingLocalDateTime + \" | \" + endingLocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case \"D\":","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            DateTimeDuke deadlineDateTime \u003d task.getDeadlineTime();","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            String deadlineLocalDateTime \u003d deadlineDateTime.convertToStringTypeII();","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            encodedTask \u003d encodedTask + \" | \" + deadlineLocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"YangShuogeng"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":65,"author":{"gitId":"YangShuogeng"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return encodedTask;","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"-":62,"YangShuogeng":9}},{"path":"src/main/java/taskclasses/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"package taskclasses;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import dukedatetime.DateTimeDuke;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import exceptions.DukeDateTimeError;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * The method to initialize Deadline task","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * ss","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * @param description description String type","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * @param taskStatus task initial status in Boolean type","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param dateTime date time information in String type","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public Deadline (String description, Boolean taskStatus, String dateTime) throws DukeDateTimeError {","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super.isDone \u003d taskStatus;","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        super.type \u003d \"D\";","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super.deadlineTime \u003d new DateTimeDuke(dateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * To get the status icon of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return status icon of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * To get the description of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the description of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return this.description;","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * To get the status of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * To get the type of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @return the type of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String getType() {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this.type;","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * To get the deadline time in DateTimeDuke format","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @return deadline datetime","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public DateTimeDuke getDeadlineTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return super.deadlineTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * To get the starting time of event in DateTimeDuke format","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @return starting time","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public DateTimeDuke getStartingTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * To get the ending time of event in DateTimeDuke format","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @return ending time","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public DateTimeDuke getEndingTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * To get the /by time of the Deadline task","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @return the time/date of the Deadline task","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public String getDeadlineDateTimeString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        DateTimeDuke deadlineDateTime \u003d super.deadlineTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return deadlineDateTime.convertToStringTypeI();","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * To get staring date time in String format","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @return null","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String getStartingDateTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * To get ending date time in String format","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return null","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public String getEndingDateTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"-":111,"YangShuogeng":6}},{"path":"src/main/java/taskclasses/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"package taskclasses;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import dukedatetime.DateTimeDuke;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import exceptions.DukeDateTimeError;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * The method to initial Event task","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * @param description task description","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * @param taskStatus task initial status","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * @param startingDateTime task starting date time","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param endingDateTime task ending date time","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"    public Event (String description, Boolean taskStatus,","lastModifiedDate":"2022-01-23"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"                  String startingDateTime, String endingDateTime) throws DukeDateTimeError {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        super.isDone \u003d taskStatus;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super.type \u003d \"E\";","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super.startingTime \u003d new DateTimeDuke(startingDateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        super.endingTime \u003d new DateTimeDuke(endingDateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * To get the deadline time in DateTimeDuke format","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @return deadline datetime","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DateTimeDuke getDeadlineTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * To get the starting time of event in DateTimeDuke format","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return starting time","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public DateTimeDuke getStartingTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return super.startingTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * To get the ending time of event in DateTimeDuke format","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return ending time","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public DateTimeDuke getEndingTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return super.endingTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * To get the status icon of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return status icon of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * To get the description of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @return the description of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this.description;","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * To get the status of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * To get the type of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @return the type of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String getType() {","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this.type;","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * To get staring date time in String format","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @return staring date time","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String getStartingDateTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DateTimeDuke dateTimeDuke \u003d super.startingTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return dateTimeDuke.convertToStringTypeI();","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * To get ending date time in String format","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return ending date time","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public String getEndingDateTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        DateTimeDuke dateTimeDuke \u003d super.endingTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return dateTimeDuke.convertToStringTypeI();","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * To get the /by time of the Deadline task","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @return null","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String getDeadlineDateTimeString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"-":112,"YangShuogeng":4}},{"path":"src/main/java/taskclasses/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"package taskclasses;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import dukedatetime.DateTimeDuke;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    String description;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    boolean isDone;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    String type;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    //For deadline task;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    DateTimeDuke deadlineTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //For event task;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    DateTimeDuke startingTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    DateTimeDuke endingTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Task(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.type \u003d null;","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.deadlineTime \u003d null;","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.startingTime \u003d null;","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.endingTime \u003d null;","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * To get the status icon of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @return status icon of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public abstract String getStatusIcon(); //{ return (isDone ? \"X\" : \" \");}","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * To get the description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public abstract String getDescription(); //{ return this.description; }","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * To get the status of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public abstract void markAsDone(); //{ this.isDone \u003d true; }","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * To get the type of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return the type of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public abstract String getType(); //{ return this.type; }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * To get the date/Time of the deadline task","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return the type of the task","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public abstract DateTimeDuke getDeadlineTime();","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * To get the date/time of the event task","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the type of the task","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public abstract DateTimeDuke getStartingTime();","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * To get the date/time of the event task","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @return the type of the task","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public abstract DateTimeDuke getEndingTime();","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * To get the /by time of the Deadline task","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @return the time/date of the Deadline task","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public abstract String getDeadlineDateTimeString();","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * To get staring date time in String format","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @return starting date time","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public abstract String getStartingDateTime();","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * To get ending date time in String format","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @return ending date time","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public abstract String getEndingDateTime();","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":92,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":93,"author":{"gitId":"YangShuogeng"},"content":"     * The function to set up Task description","lastModifiedDate":"2022-01-23"},{"lineNumber":94,"author":{"gitId":"YangShuogeng"},"content":"     * @param description the Task\u0027s description","lastModifiedDate":"2022-01-23"},{"lineNumber":95,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":96,"author":{"gitId":"YangShuogeng"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-01-23"},{"lineNumber":97,"author":{"gitId":"YangShuogeng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-23"},{"lineNumber":98,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":99,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":100,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"YangShuogeng"},"content":"     * The function to set up whether the task has done","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"YangShuogeng"},"content":"     * @param isDone the task status","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"YangShuogeng"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2022-01-23"},{"lineNumber":105,"author":{"gitId":"YangShuogeng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-01-23"},{"lineNumber":106,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":107,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":108,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":109,"author":{"gitId":"YangShuogeng"},"content":"     * The function to set up the Task\u0027s type","lastModifiedDate":"2022-01-23"},{"lineNumber":110,"author":{"gitId":"YangShuogeng"},"content":"     * @param type Task type","lastModifiedDate":"2022-01-23"},{"lineNumber":111,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":112,"author":{"gitId":"YangShuogeng"},"content":"    public void setType(String type) {","lastModifiedDate":"2022-01-23"},{"lineNumber":113,"author":{"gitId":"YangShuogeng"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-01-23"},{"lineNumber":114,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":115,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":116,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":117,"author":{"gitId":"YangShuogeng"},"content":"     * The function to set up the Task\u0027s deadline Time;","lastModifiedDate":"2022-01-23"},{"lineNumber":118,"author":{"gitId":"YangShuogeng"},"content":"     * @param deadlineTime the function\u0027s deadline Time;","lastModifiedDate":"2022-01-23"},{"lineNumber":119,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":120,"author":{"gitId":"YangShuogeng"},"content":"    public void setDeadlineTime(DateTimeDuke deadlineTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":121,"author":{"gitId":"YangShuogeng"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":122,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":123,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":124,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":125,"author":{"gitId":"YangShuogeng"},"content":"     * The function to set up the Task\u0027s starting time","lastModifiedDate":"2022-01-23"},{"lineNumber":126,"author":{"gitId":"YangShuogeng"},"content":"     * @param startingTime the Task\u0027s starting time","lastModifiedDate":"2022-01-23"},{"lineNumber":127,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":128,"author":{"gitId":"YangShuogeng"},"content":"    public void setStartingTime(DateTimeDuke startingTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":129,"author":{"gitId":"YangShuogeng"},"content":"        this.startingTime \u003d startingTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":130,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":131,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":132,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":133,"author":{"gitId":"YangShuogeng"},"content":"     * The function to set up the Task\u0027s ending time","lastModifiedDate":"2022-01-23"},{"lineNumber":134,"author":{"gitId":"YangShuogeng"},"content":"     * @param endingTime The Task\u0027s ending time","lastModifiedDate":"2022-01-23"},{"lineNumber":135,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":136,"author":{"gitId":"YangShuogeng"},"content":"    public void setEndingTime(DateTimeDuke endingTime) {","lastModifiedDate":"2022-01-23"},{"lineNumber":137,"author":{"gitId":"YangShuogeng"},"content":"        this.endingTime \u003d endingTime;","lastModifiedDate":"2022-01-23"},{"lineNumber":138,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-01-23"},{"lineNumber":139,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"-":89,"YangShuogeng":51}},{"path":"src/main/java/taskclasses/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"package taskclasses;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import java.util.Vector;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import exceptions.DukeStorageError;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import exceptions.DukeTaskInputException;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TaskList {","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private Vector\u003cTask\u003e list;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * The method to initialize a TaskList","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param taskList Vector list contain all the task which in Task format","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public TaskList(Vector\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        list \u003d taskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The method to initialize a TaskList without any argument","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        list \u003d new Vector\u003c\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * The method to delete particular task from the task list","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param taskIndex the index number of the task which is going to be deleted in the task list, not index in Vector","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws DukeTaskInputException handles all the errors about user input","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void deleteTask(int taskIndex) throws DukeTaskInputException {","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new DukeTaskInputException(\"taskListEmpty\");","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        list.remove(taskIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The method to add task into the main task list","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param task task which is going to be added","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        list.add(task);","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * The method to get date time of the particular task in the main task list","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param taskIndex the index of the task in the list","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return date time","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DukeStorageError handles all errors about storage","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String getDateTime(int taskIndex) throws DukeStorageError {","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Task task \u003d list.get(taskIndex);","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String taskType \u003d task.getType();","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case \"E\":","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return task.getStartingDateTime();","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case \"D\":","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return task.getDeadlineDateTimeString();","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"YangShuogeng"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":69,"author":{"gitId":"YangShuogeng"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        throw new DukeStorageError();","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The method to get particular task from the main task list","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @param index the index of the task","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @return task","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return list.get(index);","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The method to print entire task list","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toPrintEntireTaskList() {","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            System.out.println(\"     Here is no task in your list.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        System.out.println(\"     Here are the task(s) in your list:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"YangShuogeng"},"content":"            System.out.print(\"     \" + j + \".\"","lastModifiedDate":"2022-01-23"},{"lineNumber":101,"author":{"gitId":"YangShuogeng"},"content":"                    + \"[\" + task.getType() + \"]\"","lastModifiedDate":"2022-01-23"},{"lineNumber":102,"author":{"gitId":"YangShuogeng"},"content":"                    + \"[\" + task.getStatusIcon() + \"] \"","lastModifiedDate":"2022-01-23"},{"lineNumber":103,"author":{"gitId":"YangShuogeng"},"content":"                    + task.getDescription());","lastModifiedDate":"2022-01-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String taskType \u003d task.getType();","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            case \"E\":","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                String eventStartingDateTime \u003d task.getStartingDateTime();","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                String eventEndingDateTime \u003d task.getEndingDateTime();","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                System.out.println(\" (at: \" + eventStartingDateTime + \" ---\u003e \" + eventEndingDateTime + \")\");","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            case \"D\":","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                String deadlineDateTime \u003d task.getDeadlineDateTimeString();","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                System.out.println(\" (by: \" + deadlineDateTime + \")\");","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                System.out.println(\"\");","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":126,"author":{"gitId":"YangShuogeng"},"content":"     * The method to print entire task list","lastModifiedDate":"2022-02-02"},{"lineNumber":127,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-02-02"},{"lineNumber":128,"author":{"gitId":"YangShuogeng"},"content":"     * @param taskList task list in TaskList type","lastModifiedDate":"2022-02-02"},{"lineNumber":129,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":130,"author":{"gitId":"YangShuogeng"},"content":"    public static String toPrintEntireTaskList(Vector\u003cTask\u003e taskList) {","lastModifiedDate":"2022-02-02"},{"lineNumber":131,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":132,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":133,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":134,"author":{"gitId":"YangShuogeng"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":135,"author":{"gitId":"YangShuogeng"},"content":"            //System.out.println(\"     Here is no task in your list.\");","lastModifiedDate":"2022-02-02"},{"lineNumber":136,"author":{"gitId":"YangShuogeng"},"content":"            return \"     Here is no task in your list.\";","lastModifiedDate":"2022-02-01"},{"lineNumber":137,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":138,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":139,"author":{"gitId":"YangShuogeng"},"content":"        //System.out.println(\"     Here are the task(s) in your list:\");","lastModifiedDate":"2022-02-02"},{"lineNumber":140,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":141,"author":{"gitId":"YangShuogeng"},"content":"        echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-02"},{"lineNumber":142,"author":{"gitId":"YangShuogeng"},"content":"                + \"     Here are the task(s) in your list:\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":143,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":144,"author":{"gitId":"YangShuogeng"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":145,"author":{"gitId":"YangShuogeng"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2022-02-02"},{"lineNumber":146,"author":{"gitId":"YangShuogeng"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2022-02-02"},{"lineNumber":147,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":148,"author":{"gitId":"YangShuogeng"},"content":"            echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-01"},{"lineNumber":149,"author":{"gitId":"YangShuogeng"},"content":"                    + \"     \" + j + \".\"","lastModifiedDate":"2022-02-01"},{"lineNumber":150,"author":{"gitId":"YangShuogeng"},"content":"                    + \"[\" + task.getType() + \"]\"","lastModifiedDate":"2022-02-01"},{"lineNumber":151,"author":{"gitId":"YangShuogeng"},"content":"                    + \"[\" + task.getStatusIcon() + \"] \"","lastModifiedDate":"2022-02-01"},{"lineNumber":152,"author":{"gitId":"YangShuogeng"},"content":"                    + task.getDescription() + \"\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":153,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":154,"author":{"gitId":"YangShuogeng"},"content":"            String taskType \u003d task.getType();","lastModifiedDate":"2022-02-01"},{"lineNumber":155,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":156,"author":{"gitId":"YangShuogeng"},"content":"            switch (taskType) {","lastModifiedDate":"2022-02-02"},{"lineNumber":157,"author":{"gitId":"YangShuogeng"},"content":"            case \"E\":","lastModifiedDate":"2022-02-01"},{"lineNumber":158,"author":{"gitId":"YangShuogeng"},"content":"                String eventStartingDateTime \u003d task.getStartingDateTime();","lastModifiedDate":"2022-02-01"},{"lineNumber":159,"author":{"gitId":"YangShuogeng"},"content":"                String eventEndingDateTime \u003d task.getStartingDateTime();","lastModifiedDate":"2022-02-02"},{"lineNumber":160,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":161,"author":{"gitId":"YangShuogeng"},"content":"                echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-01"},{"lineNumber":162,"author":{"gitId":"YangShuogeng"},"content":"                        + \" (at: \" + eventStartingDateTime","lastModifiedDate":"2022-02-01"},{"lineNumber":163,"author":{"gitId":"YangShuogeng"},"content":"                        + \" ---\u003e \" + eventEndingDateTime + \")\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":164,"author":{"gitId":"YangShuogeng"},"content":"                break;","lastModifiedDate":"2022-02-01"},{"lineNumber":165,"author":{"gitId":"YangShuogeng"},"content":"            case \"D\":","lastModifiedDate":"2022-02-01"},{"lineNumber":166,"author":{"gitId":"YangShuogeng"},"content":"                String deadlineDateTime \u003d task.getDeadlineDateTimeString();","lastModifiedDate":"2022-02-01"},{"lineNumber":167,"author":{"gitId":"YangShuogeng"},"content":"                System.out.println(\" (by: \" + deadlineDateTime + \")\");","lastModifiedDate":"2022-02-02"},{"lineNumber":168,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":169,"author":{"gitId":"YangShuogeng"},"content":"                echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-01"},{"lineNumber":170,"author":{"gitId":"YangShuogeng"},"content":"                        + \" (by: \" + deadlineDateTime + \")\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":171,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":172,"author":{"gitId":"YangShuogeng"},"content":"                break;","lastModifiedDate":"2022-02-01"},{"lineNumber":173,"author":{"gitId":"YangShuogeng"},"content":"            default:","lastModifiedDate":"2022-02-01"},{"lineNumber":174,"author":{"gitId":"YangShuogeng"},"content":"            }","lastModifiedDate":"2022-02-02"},{"lineNumber":175,"author":{"gitId":"YangShuogeng"},"content":"        }","lastModifiedDate":"2022-02-01"},{"lineNumber":176,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":177,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-01"},{"lineNumber":178,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":179,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"YangShuogeng"},"content":"     * The method to print entire task list for GUI type","lastModifiedDate":"2022-02-02"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"YangShuogeng"},"content":"    public String toPrintEntireTaskListGui() {","lastModifiedDate":"2022-02-02"},{"lineNumber":184,"author":{"gitId":"YangShuogeng"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2022-02-02"},{"lineNumber":185,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":186,"author":{"gitId":"YangShuogeng"},"content":"            return \"     Here is no task in your list.\";","lastModifiedDate":"2022-02-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"     Here are the task(s) in your list:\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"YangShuogeng"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-02-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"YangShuogeng"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2022-02-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"YangShuogeng"},"content":"            echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-02"},{"lineNumber":196,"author":{"gitId":"YangShuogeng"},"content":"                    + \"     \" + j + \".\"","lastModifiedDate":"2022-02-02"},{"lineNumber":197,"author":{"gitId":"YangShuogeng"},"content":"                    + \"[\" + task.getType() + \"]\"","lastModifiedDate":"2022-02-02"},{"lineNumber":198,"author":{"gitId":"YangShuogeng"},"content":"                    + \"[\" + task.getStatusIcon() + \"] \"","lastModifiedDate":"2022-02-02"},{"lineNumber":199,"author":{"gitId":"YangShuogeng"},"content":"                    + task.getDescription() + \"\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            String taskType \u003d task.getType();","lastModifiedDate":"2021-09-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            case \"E\":","lastModifiedDate":"2021-09-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                String eventStartingDateTime \u003d task.getStartingDateTime();","lastModifiedDate":"2021-09-19"},{"lineNumber":206,"author":{"gitId":"YangShuogeng"},"content":"                String eventEndingDateTime \u003d task.getEndingDateTime();","lastModifiedDate":"2022-02-02"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":208,"author":{"gitId":"YangShuogeng"},"content":"                echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-02"},{"lineNumber":209,"author":{"gitId":"YangShuogeng"},"content":"                        + \" (at: \" + eventStartingDateTime","lastModifiedDate":"2022-02-02"},{"lineNumber":210,"author":{"gitId":"YangShuogeng"},"content":"                        + \" ---\u003e \" + eventEndingDateTime + \")\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":211,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            case \"D\":","lastModifiedDate":"2021-09-17"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                String deadlineDateTime \u003d task.getDeadlineDateTimeString();","lastModifiedDate":"2021-09-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":216,"author":{"gitId":"YangShuogeng"},"content":"                echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-02"},{"lineNumber":217,"author":{"gitId":"YangShuogeng"},"content":"                        + \" (by: \" + deadlineDateTime + \")\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":218,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2021-09-17"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":223,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":224,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * The method to get the size of the task list","lastModifiedDate":"2021-09-19"},{"lineNumber":229,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @return size in integer","lastModifiedDate":"2021-09-19"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public int size() {","lastModifiedDate":"2021-09-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2021-09-17"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        return list.size();","lastModifiedDate":"2021-09-17"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * The method to check whether the task list is empty","lastModifiedDate":"2021-09-19"},{"lineNumber":242,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * @return true (empty) / false (not empty)","lastModifiedDate":"2021-09-19"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-09-17"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        return list.isEmpty();","lastModifiedDate":"2021-09-17"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * The method to geth Vector list in TaskList","lastModifiedDate":"2021-09-19"},{"lineNumber":251,"author":{"gitId":"YangShuogeng"},"content":"     *","lastModifiedDate":"2022-01-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * @return list","lastModifiedDate":"2021-09-19"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public Vector\u003cTask\u003e getVectorList() {","lastModifiedDate":"2021-09-19"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        return list;","lastModifiedDate":"2021-09-17"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"-":163,"YangShuogeng":94}},{"path":"src/main/java/taskclasses/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"package taskclasses;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import dukedatetime.DateTimeDuke;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"     * default function with only the Todo task description","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"     * @param description the description of the Todo Task","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public Todo (String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"        super.setType(\"T\");","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"     * default function with two parameter:","lastModifiedDate":"2022-01-23"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"     * 1. description of the Todo Task","lastModifiedDate":"2022-01-23"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"     * 2. taskStatus of the Todo Task","lastModifiedDate":"2022-01-23"},{"lineNumber":20,"author":{"gitId":"YangShuogeng"},"content":"     * @param description The Todo Task\u0027s description","lastModifiedDate":"2022-01-23"},{"lineNumber":21,"author":{"gitId":"YangShuogeng"},"content":"     * @param taskStatus The Todo Task\u0027s status","lastModifiedDate":"2022-01-23"},{"lineNumber":22,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-01-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Todo (String description, Boolean taskStatus) {","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"        super.setIsDone(taskStatus);","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"YangShuogeng"},"content":"        super.setType(\"T\");","lastModifiedDate":"2022-02-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * To get the status icon of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @return status icon of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * To get the description of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the description of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return this.description;","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"YangShuogeng"},"content":"     * To mark the status as done","lastModifiedDate":"2022-01-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * To get the type of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @return the type of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getType() {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this.type;","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * To get the /by time of the Deadline task","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @return null","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String getDeadlineDateTimeString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * To get staring date time in String format","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @return null","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String getStartingDateTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * To get ending date time in String format","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @return null","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public String getEndingDateTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * To get the deadline time in DateTimeDuke format","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @return null","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public DateTimeDuke getDeadlineTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * To get the starting time of event in DateTimeDuke format","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @return null","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public DateTimeDuke getStartingTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * To get the ending time of event in DateTimeDuke format","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return null","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public DateTimeDuke getEndingTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"-":100,"YangShuogeng":17}},{"path":"src/main/java/ui/TaskDeletedMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"class TaskDeletedMessage {","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    private String taskType;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private int remainingTaskListSize;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private String taskDescription;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private String taskStatus;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private Task deletedTask;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * The method to initialize TaskDeletedMessage","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param deletedTask deletedTask","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param remainingTaskListSize remaining task list size","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    TaskDeletedMessage(Task deletedTask, int remainingTaskListSize) {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.taskType \u003d deletedTask.getType();","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.remainingTaskListSize \u003d remainingTaskListSize;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.taskDescription \u003d deletedTask.getDescription();","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.taskStatus \u003d deletedTask.getStatusIcon();","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.deletedTask \u003d deletedTask;","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * To print deleted message after task deleted successfully","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"    String printTaskDeletedMessage() {","lastModifiedDate":"2022-02-02"},{"lineNumber":29,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":30,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        case \"E\":","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"            echoInfo \u003d printDeletedEvent();","lastModifiedDate":"2022-02-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        case \"D\":","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"            echoInfo \u003d printDeletedDeadline();","lastModifiedDate":"2022-02-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        case \"T\":","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"            echoInfo \u003d printDeletedTodo();","lastModifiedDate":"2022-02-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"        default:","lastModifiedDate":"2022-01-23"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"            break;","lastModifiedDate":"2022-01-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * To print message after user deleted a deadline task successfully","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"YangShuogeng"},"content":"    private String printDeletedDeadline() {","lastModifiedDate":"2022-02-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String dateTime \u003d deletedTask.getDeadlineDateTimeString();","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"YangShuogeng"},"content":"        System.out.println(\"       [\" + taskType + \"][\"","lastModifiedDate":"2022-01-23"},{"lineNumber":59,"author":{"gitId":"YangShuogeng"},"content":"                + taskStatus + \"] \"","lastModifiedDate":"2022-01-23"},{"lineNumber":60,"author":{"gitId":"YangShuogeng"},"content":"                + taskDescription + \"(by: \" + dateTime + \")\");","lastModifiedDate":"2022-01-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        System.out.println(\"     Now you have \" + remainingTaskListSize + \" task(s) in the list.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":63,"author":{"gitId":"YangShuogeng"},"content":"        echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-02"},{"lineNumber":64,"author":{"gitId":"YangShuogeng"},"content":"                + \"     Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":65,"author":{"gitId":"YangShuogeng"},"content":"                + \"       [\" + taskType + \"][\"","lastModifiedDate":"2022-02-02"},{"lineNumber":66,"author":{"gitId":"YangShuogeng"},"content":"                + taskStatus + \"] \"","lastModifiedDate":"2022-02-02"},{"lineNumber":67,"author":{"gitId":"YangShuogeng"},"content":"                + taskDescription + \"(by: \" + dateTime + \")\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":68,"author":{"gitId":"YangShuogeng"},"content":"                + \"     Now you have \"","lastModifiedDate":"2022-02-02"},{"lineNumber":69,"author":{"gitId":"YangShuogeng"},"content":"                + remainingTaskListSize","lastModifiedDate":"2022-02-02"},{"lineNumber":70,"author":{"gitId":"YangShuogeng"},"content":"                + \" task(s) in the list.\";","lastModifiedDate":"2022-02-02"},{"lineNumber":71,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":72,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * To print message after user deleted a event task successfully","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"YangShuogeng"},"content":"    private String printDeletedEvent() {","lastModifiedDate":"2022-02-02"},{"lineNumber":79,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String dateTime \u003d deletedTask.getStartingDateTime();","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"YangShuogeng"},"content":"        System.out.println(\"       [\" + taskType + \"][\"","lastModifiedDate":"2022-01-23"},{"lineNumber":84,"author":{"gitId":"YangShuogeng"},"content":"                + taskStatus + \"] \"","lastModifiedDate":"2022-01-23"},{"lineNumber":85,"author":{"gitId":"YangShuogeng"},"content":"                + taskDescription","lastModifiedDate":"2022-01-23"},{"lineNumber":86,"author":{"gitId":"YangShuogeng"},"content":"                + \"(at: \" + dateTime + \")\");","lastModifiedDate":"2022-01-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        System.out.println(\"     Now you have \" + remainingTaskListSize + \" task(s) in the list.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"YangShuogeng"},"content":"        echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-02"},{"lineNumber":90,"author":{"gitId":"YangShuogeng"},"content":"                + \"     Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":91,"author":{"gitId":"YangShuogeng"},"content":"                + \"       [\" + taskType + \"][\"","lastModifiedDate":"2022-02-02"},{"lineNumber":92,"author":{"gitId":"YangShuogeng"},"content":"                + taskStatus + \"] \"","lastModifiedDate":"2022-02-02"},{"lineNumber":93,"author":{"gitId":"YangShuogeng"},"content":"                + taskDescription","lastModifiedDate":"2022-02-02"},{"lineNumber":94,"author":{"gitId":"YangShuogeng"},"content":"                + \"(at: \" + dateTime + \")\" + \"\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":95,"author":{"gitId":"YangShuogeng"},"content":"                + \"     Now you have \"","lastModifiedDate":"2022-02-02"},{"lineNumber":96,"author":{"gitId":"YangShuogeng"},"content":"                + remainingTaskListSize","lastModifiedDate":"2022-02-02"},{"lineNumber":97,"author":{"gitId":"YangShuogeng"},"content":"                + \" task(s) in the list.\";","lastModifiedDate":"2022-02-02"},{"lineNumber":98,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":99,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * To print message after user deleted a todo task successfully","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"YangShuogeng"},"content":"    public String printDeletedTodo() {","lastModifiedDate":"2022-02-02"},{"lineNumber":106,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":107,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        System.out.println(\"       [\" + taskType + \"][\" + taskStatus + \"] \" + taskDescription);","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        System.out.println(\"     Now you have \" + remainingTaskListSize + \" task(s) in the list.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"YangShuogeng"},"content":"        echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-02"},{"lineNumber":114,"author":{"gitId":"YangShuogeng"},"content":"                + \"     Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":115,"author":{"gitId":"YangShuogeng"},"content":"                + \"       [\" + taskType + \"][\"","lastModifiedDate":"2022-02-02"},{"lineNumber":116,"author":{"gitId":"YangShuogeng"},"content":"                + taskStatus + \"] \"","lastModifiedDate":"2022-02-02"},{"lineNumber":117,"author":{"gitId":"YangShuogeng"},"content":"                + taskDescription + \"\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":118,"author":{"gitId":"YangShuogeng"},"content":"                + \"     Now you have \"","lastModifiedDate":"2022-02-02"},{"lineNumber":119,"author":{"gitId":"YangShuogeng"},"content":"                + remainingTaskListSize","lastModifiedDate":"2022-02-02"},{"lineNumber":120,"author":{"gitId":"YangShuogeng"},"content":"                + \" task(s) in the list.\";","lastModifiedDate":"2022-02-02"},{"lineNumber":121,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":122,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"-":65,"YangShuogeng":59}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Deadline;","lastModifiedDate":"2022-01-23"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Event;","lastModifiedDate":"2022-01-23"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Task;","lastModifiedDate":"2022-01-23"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.Todo;","lastModifiedDate":"2022-01-23"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Ui {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public Ui () {}","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The greeting with some instruction","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void showGreetingMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        toPrintSeparateLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        System.out.println(\"     Hello! I\u0027m Duke\");","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        System.out.println(\"     What can I do for you?\");","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        toPrintSeparateLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"    /**","lastModifiedDate":"2022-02-01"},{"lineNumber":33,"author":{"gitId":"YangShuogeng"},"content":"     * The greeting with some instruction in GUI","lastModifiedDate":"2022-02-01"},{"lineNumber":34,"author":{"gitId":"YangShuogeng"},"content":"     */","lastModifiedDate":"2022-02-01"},{"lineNumber":35,"author":{"gitId":"YangShuogeng"},"content":"    public static String showGreetingMessageGui() {","lastModifiedDate":"2022-02-02"},{"lineNumber":36,"author":{"gitId":"YangShuogeng"},"content":"        /*String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-02-01"},{"lineNumber":37,"author":{"gitId":"YangShuogeng"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-02-01"},{"lineNumber":38,"author":{"gitId":"YangShuogeng"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-02-01"},{"lineNumber":39,"author":{"gitId":"YangShuogeng"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-02-01"},{"lineNumber":40,"author":{"gitId":"YangShuogeng"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";*/","lastModifiedDate":"2022-02-01"},{"lineNumber":41,"author":{"gitId":"YangShuogeng"},"content":"        String logo \u003d \"\";","lastModifiedDate":"2022-02-01"},{"lineNumber":42,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":43,"author":{"gitId":"YangShuogeng"},"content":"        logo \u003d \" Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2022-02-01"},{"lineNumber":44,"author":{"gitId":"YangShuogeng"},"content":"                + \" What can I do for you?\";","lastModifiedDate":"2022-02-01"},{"lineNumber":45,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":46,"author":{"gitId":"YangShuogeng"},"content":"        return logo;","lastModifiedDate":"2022-02-01"},{"lineNumber":47,"author":{"gitId":"YangShuogeng"},"content":"    }","lastModifiedDate":"2022-02-01"},{"lineNumber":48,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * The method to print loading error message","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ErrorMessage.showLoadingError();","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Print out Separated_Line onto screen","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static void toPrintSeparateLine() {","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        System.out.print(\"    \");","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c 100; i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            System.out.print(\"_\");","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The method to read user input","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @return user input information in String type","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String input;","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return input \u003d in.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The method to print the message just after task be deleted successfully","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param deletedTask task be deleted","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param taskListRemainingSize the task list size after deletion","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"YangShuogeng"},"content":"    public static String toPrintTaskDeletedMessage(Task deletedTask, int taskListRemainingSize) {","lastModifiedDate":"2022-02-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        TaskDeletedMessage taskDeletedMessage \u003d new TaskDeletedMessage(deletedTask, taskListRemainingSize);","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d taskDeletedMessage.printTaskDeletedMessage();","lastModifiedDate":"2022-02-02"},{"lineNumber":85,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":86,"author":{"gitId":"YangShuogeng"},"content":"        //return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":87,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":88,"author":{"gitId":"YangShuogeng"},"content":"        return \"Deleted Task\";","lastModifiedDate":"2022-02-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Output after add Todo task into the list","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param newTask the new task detected from user input and needs to be added to List, type is Todo","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param listQty the total quantity of task in the List after added current new task","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"YangShuogeng"},"content":"    public static String printTodoAddedOutput(Todo newTask, int listQty) {","lastModifiedDate":"2022-02-02"},{"lineNumber":98,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":99,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":100,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":101,"author":{"gitId":"YangShuogeng"},"content":"        echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-02"},{"lineNumber":102,"author":{"gitId":"YangShuogeng"},"content":"                + \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":103,"author":{"gitId":"YangShuogeng"},"content":"                + \"        [\" + newTask.getType() + \"][\"","lastModifiedDate":"2022-02-02"},{"lineNumber":104,"author":{"gitId":"YangShuogeng"},"content":"                + newTask.getStatusIcon() + \"] \"","lastModifiedDate":"2022-02-02"},{"lineNumber":105,"author":{"gitId":"YangShuogeng"},"content":"                + newTask.getDescription() + \"\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":106,"author":{"gitId":"YangShuogeng"},"content":"                + \"     Now you have \" + listQty","lastModifiedDate":"2022-02-02"},{"lineNumber":107,"author":{"gitId":"YangShuogeng"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2022-02-02"},{"lineNumber":108,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":109,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Output after add Deadline task into the list","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @param newTask the new task detected from user input and needs to be added to List, type is Deadline","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @param listQty the total quantity of task in the List after added current new task","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"YangShuogeng"},"content":"    public static String printDeadlineAddedOutput(Deadline newTask, int listQty) {","lastModifiedDate":"2022-02-02"},{"lineNumber":119,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":120,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":121,"author":{"gitId":"YangShuogeng"},"content":"        echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-02"},{"lineNumber":122,"author":{"gitId":"YangShuogeng"},"content":"                + \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":123,"author":{"gitId":"YangShuogeng"},"content":"                + \"        [\" + newTask.getType() + \"][\"","lastModifiedDate":"2022-02-02"},{"lineNumber":124,"author":{"gitId":"YangShuogeng"},"content":"                + newTask.getStatusIcon() + \"] \"","lastModifiedDate":"2022-02-02"},{"lineNumber":125,"author":{"gitId":"YangShuogeng"},"content":"                + newTask.getDescription()","lastModifiedDate":"2022-02-02"},{"lineNumber":126,"author":{"gitId":"YangShuogeng"},"content":"                + \" (by: \" + newTask.getDeadlineDateTimeString() + \")\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":127,"author":{"gitId":"YangShuogeng"},"content":"                + \"     Now you have \" + listQty + \" tasks in the list.\";","lastModifiedDate":"2022-02-02"},{"lineNumber":128,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":129,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Output after add Event task into the list","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @param newTask the new task detected from user input and needs to be added to List, type is Event","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @param listQty the total quantity of task in the List after added current new task","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"YangShuogeng"},"content":"    public static String printEventAddedOutput(Event newTask, int listQty) {","lastModifiedDate":"2022-02-02"},{"lineNumber":139,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":140,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":141,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":142,"author":{"gitId":"YangShuogeng"},"content":"        echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-02"},{"lineNumber":143,"author":{"gitId":"YangShuogeng"},"content":"                + \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":144,"author":{"gitId":"YangShuogeng"},"content":"                + \"        [\" + newTask.getType() + \"][\"","lastModifiedDate":"2022-02-02"},{"lineNumber":145,"author":{"gitId":"YangShuogeng"},"content":"                + newTask.getStatusIcon() + \"] \"","lastModifiedDate":"2022-02-02"},{"lineNumber":146,"author":{"gitId":"YangShuogeng"},"content":"                + newTask.getDescription()","lastModifiedDate":"2022-02-02"},{"lineNumber":147,"author":{"gitId":"YangShuogeng"},"content":"                + \" (by: \" + newTask.getStartingDateTime() + \")\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":148,"author":{"gitId":"YangShuogeng"},"content":"                + \"     Now you have \" + listQty + \" tasks in the list.\";","lastModifiedDate":"2022-02-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":150,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Goodbye Output","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static void printGoodbyeOutput() {","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Output after mark particular task status as done","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * @param task the task which be marked as done","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"YangShuogeng"},"content":"    public static String printMarkAsDoneOutput(Task task) {","lastModifiedDate":"2022-02-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String taskType \u003d task.getType();","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"YangShuogeng"},"content":"        String echoInfo \u003d \"\";","lastModifiedDate":"2022-02-02"},{"lineNumber":170,"author":{"gitId":"YangShuogeng"},"content":"        /*System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-02-02"},{"lineNumber":171,"author":{"gitId":"YangShuogeng"},"content":"        System.out.print(\"       [\" + task.getType() + \"][\"","lastModifiedDate":"2022-01-23"},{"lineNumber":172,"author":{"gitId":"YangShuogeng"},"content":"                + task.getStatusIcon() + \"] \"","lastModifiedDate":"2022-01-23"},{"lineNumber":173,"author":{"gitId":"YangShuogeng"},"content":"                + task.getDescription());*/","lastModifiedDate":"2022-02-02"},{"lineNumber":174,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":175,"author":{"gitId":"YangShuogeng"},"content":"        echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-02"},{"lineNumber":176,"author":{"gitId":"YangShuogeng"},"content":"                + \"     Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2022-02-02"},{"lineNumber":177,"author":{"gitId":"YangShuogeng"},"content":"                + \"       [\" + task.getType() + \"][\"","lastModifiedDate":"2022-02-02"},{"lineNumber":178,"author":{"gitId":"YangShuogeng"},"content":"                + task.getStatusIcon() + \"] \"","lastModifiedDate":"2022-02-02"},{"lineNumber":179,"author":{"gitId":"YangShuogeng"},"content":"                + task.getDescription();","lastModifiedDate":"2022-02-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        case \"E\":","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            String eventDateTime \u003d task.getStartingDateTime();","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            System.out.println(\" (at: \" + eventDateTime + \")\");","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"YangShuogeng"},"content":"            echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-02"},{"lineNumber":187,"author":{"gitId":"YangShuogeng"},"content":"                    + \" (at: \" + eventDateTime + \")\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":188,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        case \"D\":","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            String deadlineDateTime \u003d task.getDeadlineDateTimeString();","lastModifiedDate":"2021-09-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            System.out.println(\" (by: \" + deadlineDateTime + \")\");","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"YangShuogeng"},"content":"            echoInfo \u003d echoInfo","lastModifiedDate":"2022-02-02"},{"lineNumber":195,"author":{"gitId":"YangShuogeng"},"content":"                    + \" (by: \" + deadlineDateTime + \")\\n\";","lastModifiedDate":"2022-02-02"},{"lineNumber":196,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2021-09-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":200,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-02"},{"lineNumber":201,"author":{"gitId":"YangShuogeng"},"content":"        return echoInfo;","lastModifiedDate":"2022-02-02"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"-":117,"YangShuogeng":86}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"YangShuogeng":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":5,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":6,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":7,"author":{"gitId":"YangShuogeng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":8,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-02-01"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":14,"author":{"gitId":"YangShuogeng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":15,"author":{"gitId":"YangShuogeng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":17,"author":{"gitId":"YangShuogeng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":18,"author":{"gitId":"YangShuogeng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-01"},{"lineNumber":19,"author":{"gitId":"YangShuogeng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-01"}],"authorContributionMap":{"YangShuogeng":19}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"/*","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import exceptions.DukeStorageError;","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"import taskclasses.*;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Vector;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TaskListTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getTaskTest(){","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Vector\u003cTask\u003e testingV \u003d new Vector\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        TaskList testingTaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        Event testingEvent \u003d new Event(\"project meeting\", false, \"2021-10-11 10:00 -\u003e 2021-10-11 12:00\");","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Deadline testingDeadline \u003d new Deadline(\"return book\", false, \"2022-01-05 12:00\");","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Todo testingTodo \u003d new Todo(\"morning\", false);","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        testingV.add(testingDeadline);","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        testingV.add(testingEvent);","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        testingV.add(testingTodo);","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        testingTaskList \u003d new TaskList(testingV);","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(testingDeadline, testingTaskList.getTask(0));","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void getDateTimeTest() throws DukeStorageError {","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Vector\u003cTask\u003e testingV \u003d new Vector\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        TaskList testingTaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Event testingEvent \u003d new Event(\"project meeting\", false, \"2021-10-11 10:00 -\u003e 2021-10-11 12:00\");","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Deadline testingDeadline \u003d new Deadline(\"return book\", false, \"2022-01-05 12:00\");","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Todo testingTodo \u003d new Todo(\"morning\", false);","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        testingV.add(testingDeadline);","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        testingV.add(testingEvent);","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        testingV.add(testingTodo);","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        testingTaskList \u003d new TaskList(testingV);","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedResult \u003d \"2021-10-11 10:00 -\u003e 2021-10-11 12:00\";","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expectedResult, testingTaskList.getDateTime(1));","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toPrintEntireTaskList() throws DukeTaskInputException {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Vector\u003cTask\u003e testingV \u003d new Vector\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        TaskList testingTaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Event testingEvent \u003d new Event(\"project meeting\", false, \"2021-10-11 10:00 -\u003e 2021-10-11 12:00\");","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Deadline testingDeadline \u003d new Deadline(\"return book\", false, \"2022-01-05 12:00\");","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Todo testingTodo \u003d new Todo(\"morning\", false);","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        testingV.add(testingDeadline);","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        testingV.add(testingEvent);","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        testingV.add(testingTodo);","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        testingTaskList \u003d new TaskList(testingV);","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        testingTaskList.deleteTask(1);","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        int expectedResult \u003d 2;","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(expectedResult, testingTaskList.size());","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"YangShuogeng"},"content":"*/","lastModifiedDate":"2022-01-23"}],"authorContributionMap":{"-":67,"YangShuogeng":3}},{"path":"src/test/java/parser/ParserTestNew.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YangShuogeng"},"content":"package parser;","lastModifiedDate":"2022-01-23"},{"lineNumber":2,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":3,"author":{"gitId":"YangShuogeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-23"},{"lineNumber":4,"author":{"gitId":"YangShuogeng"},"content":"import static parser.Parser.convertStringArrayToString;","lastModifiedDate":"2022-01-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"YangShuogeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-23"},{"lineNumber":10,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":11,"author":{"gitId":"YangShuogeng"},"content":"import exceptions.DukeTaskInputException;","lastModifiedDate":"2022-01-23"},{"lineNumber":12,"author":{"gitId":"YangShuogeng"},"content":"","lastModifiedDate":"2022-01-23"},{"lineNumber":13,"author":{"gitId":"YangShuogeng"},"content":"class ParserTestNew {","lastModifiedDate":"2022-01-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"YangShuogeng"},"content":"    void toExtractDescription() throws DukeTaskInputException {","lastModifiedDate":"2022-01-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Parser pp \u003d new Parser();","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String testingCommand \u003d \"event project meeting /at 2021-12-31 11:00 -\u003e 2021-12-31 12:00\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String expectedResult \u003d \"2021-12-31 11:00 -\u003e 2021-12-31 12:00\";","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(expectedResult, pp.toExtractDate(testingCommand.split(\" \")));","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"YangShuogeng"},"content":"    /*@Test","lastModifiedDate":"2022-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void toExtractDescriptionTest() throws DukeTaskInputException {","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String testingCommand \u003d \"event project meeting /at 2021-12-31 11:00 -\u003e 2021-12-31 12:00\";","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"YangShuogeng"},"content":"        String[] testingCommandString \u003d testingCommand.split(\" \");","lastModifiedDate":"2022-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String expectedResult \u003d \"project meeting\";","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"YangShuogeng"},"content":"        assertEquals(expectedResult, toExtractDescription(testingCommandString));","lastModifiedDate":"2022-01-23"},{"lineNumber":32,"author":{"gitId":"YangShuogeng"},"content":"    }*/","lastModifiedDate":"2022-01-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void convertStringArrayToStringTest() {","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String testStr \u003d \"I am going to sleep\";","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String[] strT \u003d testStr.split(\" \");","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArrayList\u003cString\u003e bufferA \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        bufferA.addAll(Arrays.asList(strT).subList(1, strT.length));","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String expectedResult \u003d \"am going to sleep\";","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedResult, convertStringArrayToString(bufferA));","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"-":32,"YangShuogeng":14}}]
