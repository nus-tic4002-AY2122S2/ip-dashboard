[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"plugins {","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"    id \u0027application\u0027","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"checkstyle {","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"    project.ext.checkstyleVersion \u003d \u00279.2.1\u0027","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"repositories {","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"    mavenCentral()","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"dependencies {","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"application {","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"shadowJar {","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"KaydenKhor":42}},{"path":"docs/DeveloperGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"# Developer Guide","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"## Acknowledgements","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"Thanks to NUS fundamental code for Duke as well as the idea and inspiration behind this project.","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"## Design \u0026 Implementation","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"### Sequence Diagram","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"\u003cimg src\u003d\"Duke_start_Sequence_Diagram.png\" width\u003d\"1080px\" alt\u003d\"sequence-diagram\" /\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"The **_Sequence Diagram_** given above explains the sequence when the app is started.","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"## Product scope","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"Duke is a task tracker specifically built for computing students that are comfortable with the CLI. ","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"Working on improving and adding features to the existing Duke project and making it useful for students to manage their schedule and work. ","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"Natural language will be implemented to avoid exceptions due to typing errors. ","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"### Target user profile","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"May - 23","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"Female","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"Working adult, project manager.","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"Having too many projects on hand, she needs to track the different project\u0027s mini task.","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"She would like to have a constant track of all the task she has on hand for all the projects that she is managing.","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"She also like to place in deadlines for all her task as well as being able to search the specific task.","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"This is to help her be more organised, improve her productivity and task prioritisation so that she can deliver and promote to a higher role.","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"As a working professional, she has a personal laptop with her all the time. ","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"And she prefers to use the GUI to track her task as that is what she interacts with the most throughout her day.","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"### User Flow","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"May powered up his laptop, and opened the software by double clicking on the jar file. ","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"She sees her todo list, by typing in \"list\", a list of unfinished tasks will be presented to her with the due date of each individual task. ","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"She started working on the task, upon finishing the tasks, she keyed in “done taskNumber” and that task is marked as done in the system. ","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"She keyed in “list” and saw the task he finished was marked as done.","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"### Value proposition","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"Duke is CLI + GUI software that helps individuals track the tasks that were keyed in by individual users. ","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"It allows users to add tasks, set due dates to a task, update tasks, and mark tasks as done. ","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"It also can list the tasks and let the user know how many tasks that user has finished and how many unfinished tasks, as well as the overdue tasks. ","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"## User Stories","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"| Version | As a ... | I want to ...                                              | So that I can ...                     |","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":"| ------- | -------- | ---------------------------------------------------------- | ------------------------------------- |","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"| v1.0    | user     |  add a task                                                | keep track of outstanding task       |","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"| v1.0    | user     | delete a task if that task is no longer needed anymore     | keep my tasklist clean              |","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"| v1.0    | user     | see and list  all tasks                                    | have an overview of the outstanding tasks   |","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"| v2.0    | user     | be able to see unfinished tasks only                       | focus on the unfinished tasks |","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"| v2.0    | user     | mark tasks as done                                         | track the progress accordingly             |","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"| v2.0    | user     | be able to have different task types                       | categorize them easily                    |","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"| v2.0    | user     | be able to add tag label                                  | tag labels to a task              |","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"| v2.0    | user     | be able to search task based on keywords                   | easily extract task with important keywords |","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"| v3.0    | user     | be able to rank upcoming assignment in difficulty level    | choose which task to work on first    |","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"| v3.0    | user     | be able to see how much assignment marks                   | choose which task to work on first    |","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"| v3.0    | user     | be able to track assignment due date and edit when needed  | complete assignment on time           |","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"| v3.0    | user     | be able to mark my progress of my assignments              | decide on which assignment needs to get started |","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"| v3.0    | user     | be able to view task list by task type                     | focus on specific task type when the list is too long |","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"| v3.0    | user     | be able to view tasks with certain category tag            | focus on specific category tag when the list is too long |","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"| v3.0    | user     | be able to view tasks with certain date                    | focus on upcoming appointments when the list is too long |","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"| v3.0    | user     | be able to view tasks that contains certain keywords       | filter my task list when it is too long|","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"## Non-Functional Requirements","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"Usability - System should be able to autocorrect some of the low-level typos in user\u0027s command inputs.  ","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"## Glossary","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"- _glossary item_ - Definition","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"## Instructions for manual testing","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"1. Download the jar file from Release v2.2","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"2. Run the application on your preferred terminal","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"3. To add a task, enter `todo homework 1`","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"4. To view your task, enter `list`","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"KaydenKhor":79}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"## User Guide","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Duke is an interactive desktop app for managing your day to day tasking list, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, duke can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"1. Quick start","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"1. Features","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\t1. Adding a to-do task: todo","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\t1. Adding an event task: event","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\t1. Adding a task with deadline: deadline ","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\t1. Listing all available task : list","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\t1. Marking/unmarking tasks as done: done","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\t1. Deleting a task: delete","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\t1. Finding a task: find","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"\t2. Tag a task: tag","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"\t3. Exiting duke: bye","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"\t4. Saving the data","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. FAQ","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Command summary","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"### CLI interface:","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":" ____        _        ","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\t________________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\tHello! I\u0027m Duke","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\tWhat can i do for you?","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\t________________________________________________________________","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\t","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"### GUI: ","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"1. Ensure you have Java 11 or above installed in your computer.","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"2. Download the latest DukeV2.2.jar from here.","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"3. Copy the file to the folder you want to use as the home folder for your Duke.","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"4. Double-click the file to start the app. The GUI will pop out.","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"\u003cimg src\u003d\"Ui.png\" width\u003d\"680px\" alt\u003d\"Ui\" /\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing list and pressing Enter will display all task that you have saved so far in the window.","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Some example commands you can try:","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\t1. list : Lists all tasks available in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\t1. todo homework1 : Adds a todo task named homework to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\t1. event Birthday party /at John’s house : Adds an event task named Birthday party  with the location at John\u0027s house","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\t1. deadline project task 1 /by Tuesday: Adds a deadline task named project task 1 with a deadline by the upcoming Tuesday.","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\t1. delete3 : Deletes the 3rd task shown in the current task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\t1. find work : Find a task by searching for the keyword work","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"  1. tag 2 #birthday : Tag task index 2 within the tasklist with a unique label.","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\t1. bye : Exits the application.","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"6. Duke has auto-save and auto-load function. The list is being save as a text file named \"Duke.txt\" which is auto created and overwritten in the root folder.","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"7. Refer to the Features below for details of each command.","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003cb\u003eNotes about the command format:\u003c/b\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\t1. This application is case INSENSITIVE. All commands are readable regardless upper or lower case.","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\t2. Date and time format are as shown: yyyy-mm-dd HHMM","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Adding a to-do task: todo","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Adds a todo task to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Format: [todo] [description]","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Example: ","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"todo homework","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"ToDo HomeWork 2","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"### Adding an event task: event","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Adds an event task to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Format: [event] [description] [/at] [Location]","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"event Birthday party /at John’s house","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"EvEnT Birthday Party 2 /at sam’s house","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Adding a task with deadline: deadline ","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Adds a task with deadline to the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM]","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Example: ","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"DeaDLine Project 3 /by Tuesday","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Listing all available task : list","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Format: [list]","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"list","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Marking/unmarking tasks as done: done","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Updates a selected task\u0027s status as done in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Format: [done] [Task’s index in list]","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"done 1","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"done 2","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Deleting a task: delete","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Deletes a task from the list. After deleting a task, all task list’s index will all be updated accordingly.","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Format: [delete] [Task’s index in list]","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"delete1","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"delete 2","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"### Finding a task: find","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"Finds a task by searching for the keyword. The keyword need not be word for word, duke is smart enough to find the closest result to add into the found result and display for the user.","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Format: [find] [keyword]","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"find work","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"find p","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"find party","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":169,"author":{"gitId":"KaydenKhor"},"content":"### Tagging a task: tag","lastModifiedDate":"2022-02-27"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":171,"author":{"gitId":"KaydenKhor"},"content":"Tags a selected task with a unique label as input by user.","lastModifiedDate":"2022-02-27"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":173,"author":{"gitId":"KaydenKhor"},"content":"Format: [done] [Task’s index in list] [#uniquelabel]","lastModifiedDate":"2022-02-27"},{"lineNumber":174,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":175,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-02-27"},{"lineNumber":176,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"tag 1 #birthday","lastModifiedDate":"2022-02-27"},{"lineNumber":178,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"tag 2 #homework","lastModifiedDate":"2022-02-27"},{"lineNumber":180,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":181,"author":{"gitId":"KaydenKhor"},"content":"tag 3 #project","lastModifiedDate":"2022-02-27"},{"lineNumber":182,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"### Exiting duke: bye","lastModifiedDate":"2021-09-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"This will exit the application.","lastModifiedDate":"2021-09-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Format: [bye]","lastModifiedDate":"2021-09-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"bye","lastModifiedDate":"2021-09-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Bye","lastModifiedDate":"2021-09-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":195,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":196,"author":{"gitId":"KaydenKhor"},"content":"## FAQ","lastModifiedDate":"2022-02-27"},{"lineNumber":197,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":198,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eQ\u003c/b\u003e: How do I save multiple trip?","lastModifiedDate":"2022-02-27"},{"lineNumber":199,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":200,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eA\u003c/b\u003e: You only can save one trip at a time.","lastModifiedDate":"2022-02-27"},{"lineNumber":201,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2021-09-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Duke\u0027s task list are saved in the root folder automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-09-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cb\u003eQ\u003c/b\u003e: How do I transfer my task list to another Computer?","lastModifiedDate":"2021-09-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cb\u003eA\u003c/b\u003e: Install the app in the other computer and copy the current \"Duke.txt\" that contains the data of your previous Duke root folder to the new computer\u0027s duke\u0027s root folder.","lastModifiedDate":"2021-09-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2021-09-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2021-09-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"------------ | -------------","lastModifiedDate":"2021-09-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cb\u003etodo\u003c/b\u003e | Format: [todo] [description] Example: todo homework","lastModifiedDate":"2021-09-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cb\u003eevent\u003c/b\u003e | Format: [event] [description] [/at] [Location] Example: event Birthday party /at John’s house","lastModifiedDate":"2021-09-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cb\u003edeadline\u003c/b\u003e | Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM] Example: Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2021-09-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cb\u003elist\u003c/b\u003e | Format: [list]","lastModifiedDate":"2021-09-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003cb\u003edone\u003c/b\u003e | Format: [done] [Task’s index in list] Example: delete1","lastModifiedDate":"2021-09-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cb\u003efind\u003c/b\u003e | Format: [find] [keyword] Example: find work","lastModifiedDate":"2021-09-25"},{"lineNumber":221,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003etag\u003c/b\u003e | Format: [tag] [Task’s index in list] [#uniquelabel] Example: tag 2 #homework","lastModifiedDate":"2022-02-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cb\u003ebye\u003c/b\u003e | Format: [bye]","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"-":184,"KaydenKhor":38}},{"path":"docs/UserGuide.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"## User Guide","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"Duke is an interactive desktop app for managing your day to day tasking list, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, duke can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"1. Quick start","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"1. Features","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a to-do task: todo","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding an event task: event","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a task with deadline: deadline ","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"\t1. Listing all available task : list","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"\t1. Marking/unmarking tasks as done: done","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"\t1. Deleting a task: delete","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"\t1. Finding a task: find","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"\t2. Tag a task: tag","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"\t3. Exiting duke: bye","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"\t4. Saving the data","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"1. FAQ","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"1. Command summary","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"## Quick Start","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"### CLI interface:","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"   1. Click `Open`.","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"```","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":" ____        _        ","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"\tHello! I\u0027m Duke","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"\tWhat can i do for you?","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"\t","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"   ```","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"### GUI: ","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"1. Ensure you have Java 11 or above installed in your computer.","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"2. Download the latest DukeV2.2.jar from here.","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"3. Copy the file to the folder you want to use as the home folder for your Duke.","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"4. Double-click the file to start the app. The GUI will pop out.","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"\u003cimg src\u003d\"Ui.png\" width\u003d\"680px\" alt\u003d\"Ui\" /\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing list and pressing Enter will display all task that you have saved so far in the window.","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"Some example commands you can try:","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"\t1. list : Lists all tasks available in the list.","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"\t1. todo homework1 : Adds a todo task named homework to the list.","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"\t1. event Birthday party /at John’s house : Adds an event task named Birthday party  with the location at John\u0027s house","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"\t1. deadline project task 1 /by Tuesday: Adds a deadline task named project task 1 with a deadline by the upcoming Tuesday.","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"\t1. delete3 : Deletes the 3rd task shown in the current task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"\t1. find work : Find a task by searching for the keyword work","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"  ","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"  1. tag 2 #birthday : Tag task index 2 within the tasklist with a unique label.","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"\t1. bye : Exits the application.","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"6. Duke has auto-save and auto-load function. The list is being save as a text file named \"Duke.txt\" which is auto created and overwritten in the root folder.","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"7. Refer to the Features below for details of each command.","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"## Features","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eNotes about the command format:\u003c/b\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"\t1. This application is case INSENSITIVE. All commands are readable regardless upper or lower case.","lastModifiedDate":"2022-02-27"},{"lineNumber":83,"author":{"gitId":"KaydenKhor"},"content":"\t2. Date and time format are as shown: yyyy-mm-dd HHMM","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"### Adding a to-do task: todo","lastModifiedDate":"2022-02-27"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":87,"author":{"gitId":"KaydenKhor"},"content":"Adds a todo task to the list.","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":89,"author":{"gitId":"KaydenKhor"},"content":"Format: [todo] [description]","lastModifiedDate":"2022-02-27"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":91,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2022-02-27"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":93,"author":{"gitId":"KaydenKhor"},"content":"todo homework","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":95,"author":{"gitId":"KaydenKhor"},"content":"ToDo HomeWork 2","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":97,"author":{"gitId":"KaydenKhor"},"content":"### Adding an event task: event","lastModifiedDate":"2022-02-27"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":99,"author":{"gitId":"KaydenKhor"},"content":"Adds an event task to the list.","lastModifiedDate":"2022-02-27"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":101,"author":{"gitId":"KaydenKhor"},"content":"Format: [event] [description] [/at] [Location]","lastModifiedDate":"2022-02-27"},{"lineNumber":102,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":103,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-02-27"},{"lineNumber":104,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":105,"author":{"gitId":"KaydenKhor"},"content":"event Birthday party /at John’s house","lastModifiedDate":"2022-02-27"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":107,"author":{"gitId":"KaydenKhor"},"content":"EvEnT Birthday Party 2 /at sam’s house","lastModifiedDate":"2022-02-27"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":109,"author":{"gitId":"KaydenKhor"},"content":"### Adding a task with deadline: deadline ","lastModifiedDate":"2022-02-27"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":111,"author":{"gitId":"KaydenKhor"},"content":"Adds a task with deadline to the list.","lastModifiedDate":"2022-02-27"},{"lineNumber":112,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":113,"author":{"gitId":"KaydenKhor"},"content":"Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM]","lastModifiedDate":"2022-02-27"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":115,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2022-02-27"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":117,"author":{"gitId":"KaydenKhor"},"content":"Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2022-02-27"},{"lineNumber":118,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":119,"author":{"gitId":"KaydenKhor"},"content":"DeaDLine Project 3 /by Tuesday","lastModifiedDate":"2022-02-27"},{"lineNumber":120,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":121,"author":{"gitId":"KaydenKhor"},"content":"### Listing all available task : list","lastModifiedDate":"2022-02-27"},{"lineNumber":122,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":123,"author":{"gitId":"KaydenKhor"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2022-02-27"},{"lineNumber":124,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":125,"author":{"gitId":"KaydenKhor"},"content":"Format: [list]","lastModifiedDate":"2022-02-27"},{"lineNumber":126,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":127,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-02-27"},{"lineNumber":128,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":129,"author":{"gitId":"KaydenKhor"},"content":"list","lastModifiedDate":"2022-02-27"},{"lineNumber":130,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":131,"author":{"gitId":"KaydenKhor"},"content":"### Marking/unmarking tasks as done: done","lastModifiedDate":"2022-02-27"},{"lineNumber":132,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":133,"author":{"gitId":"KaydenKhor"},"content":"Updates a selected task\u0027s status as done in the list.","lastModifiedDate":"2022-02-27"},{"lineNumber":134,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":135,"author":{"gitId":"KaydenKhor"},"content":"Format: [done] [Task’s index in list]","lastModifiedDate":"2022-02-27"},{"lineNumber":136,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":137,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-02-27"},{"lineNumber":138,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":139,"author":{"gitId":"KaydenKhor"},"content":"done 1","lastModifiedDate":"2022-02-27"},{"lineNumber":140,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":141,"author":{"gitId":"KaydenKhor"},"content":"done 2","lastModifiedDate":"2022-02-27"},{"lineNumber":142,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":143,"author":{"gitId":"KaydenKhor"},"content":"### Deleting a task: delete","lastModifiedDate":"2022-02-27"},{"lineNumber":144,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":145,"author":{"gitId":"KaydenKhor"},"content":"Deletes a task from the list. After deleting a task, all task list’s index will all be updated accordingly.","lastModifiedDate":"2022-02-27"},{"lineNumber":146,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":147,"author":{"gitId":"KaydenKhor"},"content":"Format: [delete] [Task’s index in list]","lastModifiedDate":"2022-02-27"},{"lineNumber":148,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":149,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-02-27"},{"lineNumber":150,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":151,"author":{"gitId":"KaydenKhor"},"content":"delete1","lastModifiedDate":"2022-02-27"},{"lineNumber":152,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":153,"author":{"gitId":"KaydenKhor"},"content":"delete 2","lastModifiedDate":"2022-02-27"},{"lineNumber":154,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":155,"author":{"gitId":"KaydenKhor"},"content":"### Finding a task: find","lastModifiedDate":"2022-02-27"},{"lineNumber":156,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":157,"author":{"gitId":"KaydenKhor"},"content":"Finds a task by searching for the keyword. The keyword need not be word for word, duke is smart enough to find the closest result to add into the found result and display for the user.","lastModifiedDate":"2022-02-27"},{"lineNumber":158,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":159,"author":{"gitId":"KaydenKhor"},"content":"Format: [find] [keyword]","lastModifiedDate":"2022-02-27"},{"lineNumber":160,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":161,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-02-27"},{"lineNumber":162,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":163,"author":{"gitId":"KaydenKhor"},"content":"find work","lastModifiedDate":"2022-02-27"},{"lineNumber":164,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":165,"author":{"gitId":"KaydenKhor"},"content":"find p","lastModifiedDate":"2022-02-27"},{"lineNumber":166,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":167,"author":{"gitId":"KaydenKhor"},"content":"find party","lastModifiedDate":"2022-02-27"},{"lineNumber":168,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":169,"author":{"gitId":"KaydenKhor"},"content":"### Tagging a task: tag","lastModifiedDate":"2022-02-27"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":171,"author":{"gitId":"KaydenKhor"},"content":"Tags a selected task with a unique label as input by user.","lastModifiedDate":"2022-02-27"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":173,"author":{"gitId":"KaydenKhor"},"content":"Format: [done] [Task’s index in list] [#uniquelabel]","lastModifiedDate":"2022-02-27"},{"lineNumber":174,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":175,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-02-27"},{"lineNumber":176,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"tag 1 #birthday","lastModifiedDate":"2022-02-27"},{"lineNumber":178,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"tag 2 #homework","lastModifiedDate":"2022-02-27"},{"lineNumber":180,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":181,"author":{"gitId":"KaydenKhor"},"content":"tag 3 #project","lastModifiedDate":"2022-02-27"},{"lineNumber":182,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":183,"author":{"gitId":"KaydenKhor"},"content":"### Exiting duke: bye","lastModifiedDate":"2022-02-27"},{"lineNumber":184,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":185,"author":{"gitId":"KaydenKhor"},"content":"This will exit the application.","lastModifiedDate":"2022-02-27"},{"lineNumber":186,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":187,"author":{"gitId":"KaydenKhor"},"content":"Format: [bye]","lastModifiedDate":"2022-02-27"},{"lineNumber":188,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":189,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-02-27"},{"lineNumber":190,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":191,"author":{"gitId":"KaydenKhor"},"content":"bye","lastModifiedDate":"2022-02-27"},{"lineNumber":192,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":193,"author":{"gitId":"KaydenKhor"},"content":"Bye","lastModifiedDate":"2022-02-27"},{"lineNumber":194,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":195,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":196,"author":{"gitId":"KaydenKhor"},"content":"## FAQ","lastModifiedDate":"2022-02-27"},{"lineNumber":197,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":198,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eQ\u003c/b\u003e: How do I save multiple trip?","lastModifiedDate":"2022-02-27"},{"lineNumber":199,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":200,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eA\u003c/b\u003e: You only can save one trip at a time.","lastModifiedDate":"2022-02-27"},{"lineNumber":201,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":202,"author":{"gitId":"KaydenKhor"},"content":"### Saving the data","lastModifiedDate":"2022-02-27"},{"lineNumber":203,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":204,"author":{"gitId":"KaydenKhor"},"content":"Duke\u0027s task list are saved in the root folder automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-02-27"},{"lineNumber":205,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":206,"author":{"gitId":"KaydenKhor"},"content":"## FAQ","lastModifiedDate":"2022-02-27"},{"lineNumber":207,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":208,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eQ\u003c/b\u003e: How do I transfer my task list to another Computer?","lastModifiedDate":"2022-02-27"},{"lineNumber":209,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eA\u003c/b\u003e: Install the app in the other computer and copy the current \"Duke.txt\" that contains the data of your previous Duke root folder to the new computer\u0027s duke\u0027s root folder.","lastModifiedDate":"2022-02-27"},{"lineNumber":210,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":211,"author":{"gitId":"KaydenKhor"},"content":"## Command summary","lastModifiedDate":"2022-02-27"},{"lineNumber":212,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":213,"author":{"gitId":"KaydenKhor"},"content":"Action | Format, Examples","lastModifiedDate":"2022-02-27"},{"lineNumber":214,"author":{"gitId":"KaydenKhor"},"content":"------------ | -------------","lastModifiedDate":"2022-02-27"},{"lineNumber":215,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003etodo\u003c/b\u003e | Format: [todo] [description] Example: todo homework","lastModifiedDate":"2022-02-27"},{"lineNumber":216,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eevent\u003c/b\u003e | Format: [event] [description] [/at] [Location] Example: event Birthday party /at John’s house","lastModifiedDate":"2022-02-27"},{"lineNumber":217,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edeadline\u003c/b\u003e | Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM] Example: Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2022-02-27"},{"lineNumber":218,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003elist\u003c/b\u003e | Format: [list]","lastModifiedDate":"2022-02-27"},{"lineNumber":219,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edone\u003c/b\u003e | Format: [done] [Task’s index in list] Example: delete1","lastModifiedDate":"2022-02-27"},{"lineNumber":220,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003efind\u003c/b\u003e | Format: [find] [keyword] Example: find work","lastModifiedDate":"2022-02-27"},{"lineNumber":221,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003etag\u003c/b\u003e | Format: [tag] [Task’s index in list] [#uniquelabel] Example: tag 2 #homework","lastModifiedDate":"2022-02-27"},{"lineNumber":222,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003ebye\u003c/b\u003e | Format: [bye]","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"KaydenKhor":222}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"E| 1 | john birthday | tampines #birthday","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"T| 1 | homework  #empty","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"D| 0 | john | 05 Mar 2022 1611 #home","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"T| 0 | homework 3  #homework","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"T| 0 | project alpha  #empty","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"D| 0 | project alpha - setup repo | 28 Feb 2022 1803 # project-alpha","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"KaydenKhor":6}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"@rem","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"@rem","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"@rem","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"@rem","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"@rem","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"@rem","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"@rem","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"@rem Find java.exe","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"echo.","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"echo.","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"goto fail","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"echo.","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"echo.","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"goto fail","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":":execute","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"@rem Setup the command line","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":":end","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":":fail","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"KaydenKhor"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"exit /b 1","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":":mainEnd","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"KaydenKhor"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"KaydenKhor"},"content":":omega","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"KaydenKhor":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"rootProject.name \u003d \u0027TIC4001 - Individual Project\u0027","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"KaydenKhor":1}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"import javafx.collections.*;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"import javafx.geometry.*;","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"import javafx.scene.*;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"import javafx.scene.control.*;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"import javafx.scene.image.*;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"    private Label text;","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"        text \u003d l;","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"        text.setWrapText(true);","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"    private void flip() {","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"        db.flip();","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"        return db;","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"KaydenKhor":42}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"import javafx.application.*;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"import javafx.scene.*;","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"import javafx.scene.control.*;","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"import javafx.scene.image.*;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"import javafx.stage.*;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"import java.io.*;","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"import java.time.format.*;","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"public class Duke extends Application {","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"    private Scene scene;","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"    public void start(Stage stage) throws IOException, DukeException, DukeExceptionFileInput {","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        TaskLists taskList \u003d new TaskLists();","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Storage textFile \u003d new Storage();","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            textFile.readFile(taskList);","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"        catch (FileNotFoundException | DukeExceptionInvalidTaskInputFormat e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"            textFile.saveToDB();","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            ui.showFileInputError();","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":"        stage.show();","lastModifiedDate":"2022-02-24"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2022-02-24"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"        stage.setResizable(false);","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2022-02-24"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"        stage.setMinWidth(600.0);","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"        mainLayout.setPrefSize(600.0, 600.0);","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"        scrollPane.setPrefSize(585, 535);","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2022-02-24"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2022-02-24"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2022-02-24"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2022-02-24"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"        userInput.setPrefWidth(525.0);","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-24"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2022-02-24"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-24"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2022-02-24"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-24"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-02-24"},{"lineNumber":83,"author":{"gitId":"KaydenKhor"},"content":"            userInput.clear();","lastModifiedDate":"2022-02-24"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"        });","lastModifiedDate":"2022-02-24"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-24"},{"lineNumber":87,"author":{"gitId":"KaydenKhor"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2022-02-24"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"            userInput.clear();","lastModifiedDate":"2022-02-24"},{"lineNumber":89,"author":{"gitId":"KaydenKhor"},"content":"        });","lastModifiedDate":"2022-02-24"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":91,"author":{"gitId":"KaydenKhor"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2022-02-24"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2022-02-24"},{"lineNumber":93,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":94,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":95,"author":{"gitId":"KaydenKhor"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2022-02-24"},{"lineNumber":96,"author":{"gitId":"KaydenKhor"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2022-02-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2022-02-24"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"                handleUserInput(taskList, textFile);","lastModifiedDate":"2022-02-26"},{"lineNumber":99,"author":{"gitId":"KaydenKhor"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"            catch (DukeException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":101,"author":{"gitId":"KaydenKhor"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-24"},{"lineNumber":102,"author":{"gitId":"KaydenKhor"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":103,"author":{"gitId":"KaydenKhor"},"content":"            catch (IOException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":104,"author":{"gitId":"KaydenKhor"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-24"},{"lineNumber":105,"author":{"gitId":"KaydenKhor"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"        });","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2022-02-24"},{"lineNumber":109,"author":{"gitId":"KaydenKhor"},"content":"            try {","lastModifiedDate":"2022-02-24"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"                handleUserInput(taskList, textFile);","lastModifiedDate":"2022-02-26"},{"lineNumber":111,"author":{"gitId":"KaydenKhor"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":112,"author":{"gitId":"KaydenKhor"},"content":"            catch (DukeException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":113,"author":{"gitId":"KaydenKhor"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-24"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":115,"author":{"gitId":"KaydenKhor"},"content":"            catch (IOException e) {","lastModifiedDate":"2022-02-24"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-02-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":118,"author":{"gitId":"KaydenKhor"},"content":"        });","lastModifiedDate":"2022-02-24"},{"lineNumber":119,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":120,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":121,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":122,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":123,"author":{"gitId":"KaydenKhor"},"content":"     * Iteration 1:","lastModifiedDate":"2022-02-24"},{"lineNumber":124,"author":{"gitId":"KaydenKhor"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2022-02-24"},{"lineNumber":125,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":126,"author":{"gitId":"KaydenKhor"},"content":"     * @param text String containing text to add","lastModifiedDate":"2022-02-24"},{"lineNumber":127,"author":{"gitId":"KaydenKhor"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2022-02-24"},{"lineNumber":128,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":129,"author":{"gitId":"KaydenKhor"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2022-02-24"},{"lineNumber":130,"author":{"gitId":"KaydenKhor"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2022-02-24"},{"lineNumber":131,"author":{"gitId":"KaydenKhor"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2022-02-24"},{"lineNumber":132,"author":{"gitId":"KaydenKhor"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2022-02-24"},{"lineNumber":133,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":134,"author":{"gitId":"KaydenKhor"},"content":"        return textToAdd;","lastModifiedDate":"2022-02-24"},{"lineNumber":135,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":136,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":137,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":138,"author":{"gitId":"KaydenKhor"},"content":"     * Iteration 2:","lastModifiedDate":"2022-02-24"},{"lineNumber":139,"author":{"gitId":"KaydenKhor"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2022-02-24"},{"lineNumber":140,"author":{"gitId":"KaydenKhor"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-24"},{"lineNumber":141,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":142,"author":{"gitId":"KaydenKhor"},"content":"    private void handleUserInput(TaskLists taskList, Storage textFile) throws DukeException, IOException {","lastModifiedDate":"2022-02-26"},{"lineNumber":143,"author":{"gitId":"KaydenKhor"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2022-02-24"},{"lineNumber":144,"author":{"gitId":"KaydenKhor"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText(), taskList, textFile));","lastModifiedDate":"2022-02-26"},{"lineNumber":145,"author":{"gitId":"KaydenKhor"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-24"},{"lineNumber":146,"author":{"gitId":"KaydenKhor"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2022-02-24"},{"lineNumber":147,"author":{"gitId":"KaydenKhor"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2022-02-24"},{"lineNumber":148,"author":{"gitId":"KaydenKhor"},"content":"        );","lastModifiedDate":"2022-02-24"},{"lineNumber":149,"author":{"gitId":"KaydenKhor"},"content":"        userInput.clear();","lastModifiedDate":"2022-02-24"},{"lineNumber":150,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":151,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":152,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2022-02-24"},{"lineNumber":153,"author":{"gitId":"KaydenKhor"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2022-02-24"},{"lineNumber":154,"author":{"gitId":"KaydenKhor"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2022-02-24"},{"lineNumber":155,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2022-02-24"},{"lineNumber":156,"author":{"gitId":"KaydenKhor"},"content":"    private String getResponse(String input, TaskLists taskList, Storage textFile) throws IOException, DukeException {","lastModifiedDate":"2022-02-26"},{"lineNumber":157,"author":{"gitId":"KaydenKhor"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2022-02-24"},{"lineNumber":158,"author":{"gitId":"KaydenKhor"},"content":"        String command \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":159,"author":{"gitId":"KaydenKhor"},"content":"        String message \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":160,"author":{"gitId":"KaydenKhor"},"content":"        String result \u003d null;","lastModifiedDate":"2022-02-24"},{"lineNumber":161,"author":{"gitId":"KaydenKhor"},"content":"        try {","lastModifiedDate":"2022-02-24"},{"lineNumber":162,"author":{"gitId":"KaydenKhor"},"content":"            message \u003d input.trim();","lastModifiedDate":"2022-02-24"},{"lineNumber":163,"author":{"gitId":"KaydenKhor"},"content":"            command \u003d new Parser().parseInput(message);","lastModifiedDate":"2022-02-24"},{"lineNumber":164,"author":{"gitId":"KaydenKhor"},"content":"            switch (command) {","lastModifiedDate":"2022-02-24"},{"lineNumber":165,"author":{"gitId":"KaydenKhor"},"content":"                case \"todo\":","lastModifiedDate":"2022-02-24"},{"lineNumber":166,"author":{"gitId":"KaydenKhor"},"content":"                    try {","lastModifiedDate":"2022-02-24"},{"lineNumber":167,"author":{"gitId":"KaydenKhor"},"content":"                        taskList.addToDo(message);","lastModifiedDate":"2022-02-24"},{"lineNumber":168,"author":{"gitId":"KaydenKhor"},"content":"                        textFile.saveFile(taskList.getList());","lastModifiedDate":"2022-02-24"},{"lineNumber":169,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-27"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"                    catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":171,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showToDoEmptyError();","lastModifiedDate":"2022-02-24"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-24"},{"lineNumber":173,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-24"},{"lineNumber":174,"author":{"gitId":"KaydenKhor"},"content":"                    result \u003d ui.showTaskAdded(taskList.displayLatestTask(), taskList.getSize());","lastModifiedDate":"2022-02-24"},{"lineNumber":175,"author":{"gitId":"KaydenKhor"},"content":"                    break;","lastModifiedDate":"2022-02-24"},{"lineNumber":176,"author":{"gitId":"KaydenKhor"},"content":"                case \"deadline\":","lastModifiedDate":"2022-02-24"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"                    try {","lastModifiedDate":"2022-02-24"},{"lineNumber":178,"author":{"gitId":"KaydenKhor"},"content":"                        taskList.addDeadline(message);","lastModifiedDate":"2022-02-24"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"                        textFile.saveFile(taskList.getList());","lastModifiedDate":"2022-02-24"},{"lineNumber":180,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-27"},{"lineNumber":181,"author":{"gitId":"KaydenKhor"},"content":"                    catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":182,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showDeadlineEmptyError();","lastModifiedDate":"2022-02-24"},{"lineNumber":183,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-24"},{"lineNumber":184,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-27"},{"lineNumber":185,"author":{"gitId":"KaydenKhor"},"content":"                    catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":186,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showDateTimeError();","lastModifiedDate":"2022-02-24"},{"lineNumber":187,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-24"},{"lineNumber":188,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-24"},{"lineNumber":189,"author":{"gitId":"KaydenKhor"},"content":"                    result \u003d ui.showTaskAdded(taskList.displayLatestTask(), taskList.getSize());","lastModifiedDate":"2022-02-24"},{"lineNumber":190,"author":{"gitId":"KaydenKhor"},"content":"                    break;","lastModifiedDate":"2022-02-24"},{"lineNumber":191,"author":{"gitId":"KaydenKhor"},"content":"                case \"event\":","lastModifiedDate":"2022-02-24"},{"lineNumber":192,"author":{"gitId":"KaydenKhor"},"content":"                    try {","lastModifiedDate":"2022-02-24"},{"lineNumber":193,"author":{"gitId":"KaydenKhor"},"content":"                        taskList.addEvent(message);","lastModifiedDate":"2022-02-24"},{"lineNumber":194,"author":{"gitId":"KaydenKhor"},"content":"                        textFile.saveFile(taskList.getList());","lastModifiedDate":"2022-02-24"},{"lineNumber":195,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-27"},{"lineNumber":196,"author":{"gitId":"KaydenKhor"},"content":"                    catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":197,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showEventEmptyError();","lastModifiedDate":"2022-02-24"},{"lineNumber":198,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-24"},{"lineNumber":199,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-24"},{"lineNumber":200,"author":{"gitId":"KaydenKhor"},"content":"                    result \u003d ui.showTaskAdded(taskList.displayLatestTask(), taskList.getSize());","lastModifiedDate":"2022-02-24"},{"lineNumber":201,"author":{"gitId":"KaydenKhor"},"content":"                    break;","lastModifiedDate":"2022-02-24"},{"lineNumber":202,"author":{"gitId":"KaydenKhor"},"content":"                case \"list\":","lastModifiedDate":"2022-02-24"},{"lineNumber":203,"author":{"gitId":"KaydenKhor"},"content":"                    try {","lastModifiedDate":"2022-02-24"},{"lineNumber":204,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showList(taskList.displayList());","lastModifiedDate":"2022-02-24"},{"lineNumber":205,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-27"},{"lineNumber":206,"author":{"gitId":"KaydenKhor"},"content":"                    catch (DukeExceptionEmptyList e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":207,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showListEmptyError();","lastModifiedDate":"2022-02-24"},{"lineNumber":208,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-24"},{"lineNumber":209,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-24"},{"lineNumber":210,"author":{"gitId":"KaydenKhor"},"content":"                    break;","lastModifiedDate":"2022-02-24"},{"lineNumber":211,"author":{"gitId":"KaydenKhor"},"content":"                case \"delete\":","lastModifiedDate":"2022-02-24"},{"lineNumber":212,"author":{"gitId":"KaydenKhor"},"content":"                    try {","lastModifiedDate":"2022-02-24"},{"lineNumber":213,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showDeletedTask(taskList.deleteTask(message), taskList);","lastModifiedDate":"2022-02-24"},{"lineNumber":214,"author":{"gitId":"KaydenKhor"},"content":"                        textFile.saveFile(taskList.getList());","lastModifiedDate":"2022-02-24"},{"lineNumber":215,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-27"},{"lineNumber":216,"author":{"gitId":"KaydenKhor"},"content":"                    catch (DukeExceptionInvalidTaskInputFormat e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":217,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showInvalidTaskFormatError();","lastModifiedDate":"2022-02-24"},{"lineNumber":218,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-24"},{"lineNumber":219,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-27"},{"lineNumber":220,"author":{"gitId":"KaydenKhor"},"content":"                    catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":221,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showInvalidTaskNumberError();","lastModifiedDate":"2022-02-24"},{"lineNumber":222,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-24"},{"lineNumber":223,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-24"},{"lineNumber":224,"author":{"gitId":"KaydenKhor"},"content":"                    break;","lastModifiedDate":"2022-02-24"},{"lineNumber":225,"author":{"gitId":"KaydenKhor"},"content":"                case \"done\":","lastModifiedDate":"2022-02-24"},{"lineNumber":226,"author":{"gitId":"KaydenKhor"},"content":"                    try {","lastModifiedDate":"2022-02-24"},{"lineNumber":227,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showDoneTask(taskList.doneTask(message));","lastModifiedDate":"2022-02-24"},{"lineNumber":228,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-24"},{"lineNumber":229,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-27"},{"lineNumber":230,"author":{"gitId":"KaydenKhor"},"content":"                    catch (DukeExceptionInvalidTaskInputFormat e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":231,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showInvalidTaskFormatError();","lastModifiedDate":"2022-02-24"},{"lineNumber":232,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-24"},{"lineNumber":233,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-27"},{"lineNumber":234,"author":{"gitId":"KaydenKhor"},"content":"                    catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":235,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showInvalidTaskNumberError();","lastModifiedDate":"2022-02-24"},{"lineNumber":236,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-24"},{"lineNumber":237,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-24"},{"lineNumber":238,"author":{"gitId":"KaydenKhor"},"content":"                case \"find\":","lastModifiedDate":"2022-02-24"},{"lineNumber":239,"author":{"gitId":"KaydenKhor"},"content":"                    try {","lastModifiedDate":"2022-02-24"},{"lineNumber":240,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showFindResult((taskList.findTask(message)));","lastModifiedDate":"2022-02-24"},{"lineNumber":241,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-24"},{"lineNumber":242,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-27"},{"lineNumber":243,"author":{"gitId":"KaydenKhor"},"content":"                    catch (DukeExceptionEmptyList e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":244,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showListEmptyError();","lastModifiedDate":"2022-02-24"},{"lineNumber":245,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-24"},{"lineNumber":246,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-27"},{"lineNumber":247,"author":{"gitId":"KaydenKhor"},"content":"                    catch (DukeExceptionFindNoResult e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":248,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showFindNoResult();","lastModifiedDate":"2022-02-24"},{"lineNumber":249,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-24"},{"lineNumber":250,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-24"},{"lineNumber":251,"author":{"gitId":"KaydenKhor"},"content":"                case \"tag\":","lastModifiedDate":"2022-02-27"},{"lineNumber":252,"author":{"gitId":"KaydenKhor"},"content":"                    try {","lastModifiedDate":"2022-02-27"},{"lineNumber":253,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showTagDone(taskList.tagTask(message));","lastModifiedDate":"2022-02-27"},{"lineNumber":254,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-27"},{"lineNumber":255,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-27"},{"lineNumber":256,"author":{"gitId":"KaydenKhor"},"content":"                    catch (DukeExceptionInvalidTaskInputFormat e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":257,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showInvalidTaskFormatError();","lastModifiedDate":"2022-02-27"},{"lineNumber":258,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-27"},{"lineNumber":259,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-27"},{"lineNumber":260,"author":{"gitId":"KaydenKhor"},"content":"                    catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":261,"author":{"gitId":"KaydenKhor"},"content":"                        result \u003d ui.showInvalidTaskNumberError();","lastModifiedDate":"2022-02-27"},{"lineNumber":262,"author":{"gitId":"KaydenKhor"},"content":"                        break;","lastModifiedDate":"2022-02-27"},{"lineNumber":263,"author":{"gitId":"KaydenKhor"},"content":"                    }","lastModifiedDate":"2022-02-27"},{"lineNumber":264,"author":{"gitId":"KaydenKhor"},"content":"                case \"bye\":","lastModifiedDate":"2022-02-24"},{"lineNumber":265,"author":{"gitId":"KaydenKhor"},"content":"                    result \u003d ui.showOffline();","lastModifiedDate":"2022-02-24"},{"lineNumber":266,"author":{"gitId":"KaydenKhor"},"content":"                    break;","lastModifiedDate":"2022-02-24"},{"lineNumber":267,"author":{"gitId":"KaydenKhor"},"content":"                default:","lastModifiedDate":"2022-02-24"},{"lineNumber":268,"author":{"gitId":"KaydenKhor"},"content":"                    result \u003d ui.showUnknownInputError();","lastModifiedDate":"2022-02-24"},{"lineNumber":269,"author":{"gitId":"KaydenKhor"},"content":"            }","lastModifiedDate":"2022-02-24"},{"lineNumber":270,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":271,"author":{"gitId":"KaydenKhor"},"content":"        catch (IOException e) {","lastModifiedDate":"2022-02-27"},{"lineNumber":272,"author":{"gitId":"KaydenKhor"},"content":"            ui.showFileError();","lastModifiedDate":"2022-02-24"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-24"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        textFile.saveFile(taskList.getList());","lastModifiedDate":"2022-02-27"},{"lineNumber":275,"author":{"gitId":"KaydenKhor"},"content":"        return result;","lastModifiedDate":"2022-02-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":277,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"KaydenKhor":262,"-":15}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"/**","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":" */","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"public class Launcher {","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"KaydenKhor":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"public class Main {","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"KaydenKhor":2}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Parser {","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"     * This parser will be able to parse the inputs from the user to a readable command","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"     * for duke to process the inputs accordingly by the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"     * @param userInput The string of words typed in by the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"     * @return A readable command for duke to process based on the command.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public String parseInput(String userInput) {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        userInput \u003d userInput.toLowerCase();","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String command \u003d \"unknown\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        if (userInput.contains(\"bye\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            command \u003d \"bye\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        if (userInput.contains(\"done\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            command \u003d \"done\";","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        if (userInput.contains(\"list\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            command \u003d \"list\";","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (userInput.contains(\"delete\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            command \u003d \"delete\";","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (userInput.contains(\"todo\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            command \u003d \"todo\";","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (userInput.contains(\"deadline\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            command \u003d \"deadline\";","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (userInput.contains(\"event\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            command \u003d \"event\";","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (userInput.contains(\"find\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            command \u003d \"find\";","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"        if (userInput.contains(\"tag\")) {","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"            command \u003d \"tag\";","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return command;","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"-":40,"KaydenKhor":3}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"import java.io.*;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Storage {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PATH \u003d \"duke.txt\";","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private String filePath;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Storage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.filePath \u003d DEFAULT_PATH;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Save the list of tasks into a text file in duke\u0027s root folder as duke.txt whenever user exits from duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param list The current list duke is handling.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws IOException If user defines their own file path, and the file path has some problem.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void saveFile(ArrayList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String s \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        for (int j \u003d 0; j \u003c list.size(); j++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            s \u003d s + list.get(j).getType() + \" \" + list.get(j).getTaskStatus() + \" \" + list.get(j).getTask() + \" \"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"                    + list.get(j).getDetails() + \" \" + list.get(j).getTag() + System.lineSeparator();","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            s \u003d s.replace(\"(by:\", \"|\").replace(\"(at:\", \"|\").","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    replace(\")\", \"\").replaceAll(\"\\\\[\", \"\").","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    replaceAll(\"]\", \"|\").replace(\"\\u2713\", \"1 \").","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    replace(\"\\u2718\", \"0 \").replace(\"after\", \"|\");","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        fw.write(s);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fw.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"    public static void saveToDB() throws IOException {","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"        FileWriter fileWriter \u003d new FileWriter(\"duke.txt\", true);","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"        PrintWriter printWriter \u003d new PrintWriter(fileWriter);","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"        fileWriter.close();","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"        printWriter.close();","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Read files from the default file path of duke, duke.txt whenever duke starts up.","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param tasks The new task list created for this duke session to be throw into this function from the start of the program.","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws IOException If the filepath has some problems.","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws DukeException If the file context is not in the duke\u0027s list format.","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"    public void readFile(TaskLists tasks) throws IOException, DukeExceptionFileInput, DukeExceptionInvalidTaskInputFormat {","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        BufferedReader s \u003d null;","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        s \u003d new BufferedReader(new FileReader(DEFAULT_PATH));","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String input \u003d null;","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"        String tag \u003d null;","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        while ((input \u003d s.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            if (input.charAt(0) \u003d\u003d \u0027T\u0027 || input.charAt(0) \u003d\u003d \u0027E\u0027 || input.charAt(0) \u003d\u003d \u0027D\u0027 || input.charAt(0) \u003d\u003d \u0027A\u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                char status \u003d input.charAt(3);","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                assert status \u003d\u003d \u00270\u0027 || status \u003d\u003d \u00271\u0027 : \"At this point in time, task status should be either \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                        \"done(1) or not done(0), please check your task status in Duke.txt again.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"                int tagNumber \u003d input.indexOf(\"#\");","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                switch (Character.toString(input.charAt(0))) {","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    case \"T\":","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"                        tag \u003d input.substring(tagNumber);","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"                        input \u003d input.substring(6, tagNumber-1);","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                        tasks.addToDo(\"task \" + input);","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"                        tasks.tagTask(\"tag \" + tasks.getSize() + \" \" + tag);","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                        if (status \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                            int index \u003d tasks.getSize() - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                            tasks.getList().get(index).setTaskDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                    case \"E\":","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"                        tag \u003d input.substring(tagNumber);","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"                        input \u003d input.substring(6, tagNumber-1);","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                        input \u003d input.replace(\"|\", \"/at\");","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                        tasks.addEvent(\"event\" + input);","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"                        tasks.tagTask(\"tag \" + tasks.getSize() + \" \" + tag);","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                        if (status \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                            int index \u003d tasks.getSize() - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                            tasks.getList().get(index).setTaskDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    case \"D\":","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"                        tag \u003d input.substring(tagNumber);","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"                        input \u003d input.substring(6, tagNumber-1);","lastModifiedDate":"2022-02-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                        input \u003d input.replace(\"|\", \"/by\");","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        tasks.addDeadline(\"_deadline\" + input);","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"                        tasks.tagTask(\"tag \" + tasks.getSize() + \" \" + tag);","lastModifiedDate":"2022-02-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                        if (status \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                            int index \u003d tasks.getSize() - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                            tasks.getList().get(index).setTaskDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    default:","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        break;","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                throw new DukeExceptionFileInput();","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"-":80,"KaydenKhor":21}},{"path":"src/main/java/TaskLists.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import task.*;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class TaskLists {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public TaskLists() {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Get the current list size.","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @return The current list size in integer","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return list.size();","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Get the current list.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @return The current list.","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this.list;","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Check whether the list is empty.","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return True if list is empty, false if list is not empty.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return this.list.isEmpty();","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Runs through the current list till the end of the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return A string of list.","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws DukeExceptionEmptyList If the list is empty","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String displayList() throws DukeExceptionEmptyList {","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new DukeExceptionEmptyList();","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String answer \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            answer \u003d (answer + index + \".\" + this.list.get(i).getType() + this.list.get(i).getTaskStatus() + \" \"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"                    + this.list.get(i).getTask() + \" \" + this.list.get(i).getDetails() + \" \" + this.list.get(i).getTag());","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            index++;","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (i \u003d\u003d getSize() - 1) {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                continue;","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            answer +\u003d \"\\n\\t\";","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return answer;","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Users to search a task from the current list in accordance with the keyword he typed in.","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param message The keyword user typed in to search","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @return The list of tasks which has the closest result from the searched keyword.","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @throws DukeExceptionEmptyList If the list is empty.","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String findTask(String message) throws DukeExceptionEmptyList, DukeExceptionFindNoResult {","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        TaskLists foundResult \u003d new TaskLists();","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new DukeExceptionEmptyList();","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        message \u003d message.substring(5);","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            if (this.list.get(i).getDescription().contains(message)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                foundResult.list.add(this.list.get(i));","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (foundResult.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new DukeExceptionFindNoResult();","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return foundResult.displayList();","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Displays the latest task of the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @return The latest task of the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public String displayLatestTask() {","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        int number \u003d getSize() - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return list.get(number).getType() + list.get(number).getTaskStatus() + \" \" + list.get(number).getTask() + \" \"","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                + list.get(number).getDetails();","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Selected task by users.","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param number The task number which is selected by user.","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @return The selected task.","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public String displaySelectedTask(int number) {","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assert number \u003e 1 : \"This selected number must be greater than 1 as the task\u0027s list index starts from 1 and \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \"there is no negative task number.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return list.get(number).getType() + list.get(number).getTaskStatus() + \" \" + list.get(number).getTask() + \" \"","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"                + list.get(number).getDetails() + \" \" + list.get(number).getTag() + \"\\n\";","lastModifiedDate":"2022-02-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Duke adds a ToDo task.","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @param message Details of the ToDo task.","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void addToDo(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        list.add(new ToDo((message.substring(5))));","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Duke adds a Deadlines task.","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @param message Details of the Deadlines task.","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void addDeadline(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        int index \u003d message.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        boolean readFromFile \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (message.charAt(0) \u003d\u003d \u0027_\u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            readFromFile \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            message \u003d message.substring(1);","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        message \u003d message.trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (message.charAt(9) \u003d\u003d \u0027 \u0027 \u0026\u0026 readFromFile \u003d\u003d false) {","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        list.add(new DeadLines(message.substring(9, index - 1), message.substring(index + 3), readFromFile));","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Duke adds a Events task.","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @param message Details of the Events task.","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void addEvent(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (message.charAt(7) \u003d\u003d \u0027 \u0027){","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new StringIndexOutOfBoundsException();","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        int index \u003d message.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        list.add(new Events(message.substring(6, index - 1), message.substring(index + 4)));","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Duke deletes a task as defined by users.","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @param message The selected task as defined by user to delete.","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @throws DukeExceptionInvalidTaskInputFormat when users\u0027 input is not readable by duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public String deleteTask(String message) throws DukeExceptionInvalidTaskInputFormat {","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (message.length() \u003c 7 || message.charAt(6) !\u003d \u0027 \u0027 || message.charAt(7) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new DukeExceptionInvalidTaskInputFormat();","lastModifiedDate":"2021-09-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String number \u003d message.substring(7).trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        int index \u003d Integer.parseInt(number);","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        index \u003d index - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String selectedTask \u003d displaySelectedTask(index);","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        list.remove(index);","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return selectedTask;","lastModifiedDate":"2021-09-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Duke sets a task done as defined by users.","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @param message The selected task defined by user to be set as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * @return The task that was set as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * @throws DukeExceptionInvalidTaskInputFormat when users\u0027 input is not readable by duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public String doneTask(String message) throws DukeExceptionInvalidTaskInputFormat {","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (message.length() \u003c 5 || message.charAt(4) !\u003d \u0027 \u0027 || message.charAt(5) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new DukeExceptionInvalidTaskInputFormat();","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        String number \u003d message.substring(5).trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        int index \u003d Integer.parseInt(number);","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        index \u003d index - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        this.list.get(index).setTaskDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String selectedTask \u003d displaySelectedTask(index);","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return selectedTask;","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":192,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":193,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":194,"author":{"gitId":"KaydenKhor"},"content":"     * Duke updates a task as defined by users.","lastModifiedDate":"2022-02-27"},{"lineNumber":195,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":196,"author":{"gitId":"KaydenKhor"},"content":"     * @param message The selected task defined by user to be edited according to the input.","lastModifiedDate":"2022-02-27"},{"lineNumber":197,"author":{"gitId":"KaydenKhor"},"content":"     * @return The task that was set as done.","lastModifiedDate":"2022-02-27"},{"lineNumber":198,"author":{"gitId":"KaydenKhor"},"content":"     * @throws DukeExceptionInvalidTaskInputFormat when users\u0027 input is not readable by duke.","lastModifiedDate":"2022-02-27"},{"lineNumber":199,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":200,"author":{"gitId":"KaydenKhor"},"content":"    public String tagTask(String message) throws DukeExceptionInvalidTaskInputFormat {","lastModifiedDate":"2022-02-27"},{"lineNumber":201,"author":{"gitId":"KaydenKhor"},"content":"        if (message.length() \u003c 4 || message.charAt(3) !\u003d \u0027 \u0027 || message.charAt(4) \u003d\u003d \u0027 \u0027 || !message.contains(\"#\") ) {","lastModifiedDate":"2022-02-27"},{"lineNumber":202,"author":{"gitId":"KaydenKhor"},"content":"            throw new DukeExceptionInvalidTaskInputFormat();","lastModifiedDate":"2022-02-27"},{"lineNumber":203,"author":{"gitId":"KaydenKhor"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":204,"author":{"gitId":"KaydenKhor"},"content":"        String number \u003d message.substring(4,message.indexOf(\u0027#\u0027)-1).trim();","lastModifiedDate":"2022-02-27"},{"lineNumber":205,"author":{"gitId":"KaydenKhor"},"content":"        String tag \u003d message.substring(message.indexOf(\u0027#\u0027));","lastModifiedDate":"2022-02-27"},{"lineNumber":206,"author":{"gitId":"KaydenKhor"},"content":"        int index \u003d Integer.parseInt(number);","lastModifiedDate":"2022-02-27"},{"lineNumber":207,"author":{"gitId":"KaydenKhor"},"content":"        index \u003d index - 1;","lastModifiedDate":"2022-02-27"},{"lineNumber":208,"author":{"gitId":"KaydenKhor"},"content":"        this.list.get(index).tagTask(tag);","lastModifiedDate":"2022-02-27"},{"lineNumber":209,"author":{"gitId":"KaydenKhor"},"content":"        String selectedTask \u003d displaySelectedTask(index);","lastModifiedDate":"2022-02-27"},{"lineNumber":210,"author":{"gitId":"KaydenKhor"},"content":"        return selectedTask;","lastModifiedDate":"2022-02-27"},{"lineNumber":211,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"-":191,"KaydenKhor":22}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Ui {","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    private Scanner in;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public Ui() {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public String readCommand() throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String input \u003d this.in.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return input;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Shows the line for the chatbot\u0027s box.","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return A straight line for the chatbox","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String showLine() {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return \"\\t________________________________________________________________\\n\\t\";","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Shows welcome message with logo.","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String welcome \u003d \"Hello! I\u0027m Duke\\n\\tWhat can i do for you?\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"        return logo + showLine() + welcome + showLine();","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Display the latest task added to the list along with the current Task list size.","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param taskDetails A String of details of the current task added.","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param listSize    The current size of the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"    public String showTaskAdded(String taskDetails, int listSize) {","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String currentTask \u003d \"Got it. I\u0027ve added this task:\\n\\t\\t\" + taskDetails;","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String numberOfTask \u003d \"\\n\\tNow you have \" + listSize + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"        return ( currentTask + numberOfTask );","lastModifiedDate":"2022-02-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Display the latest task deleted from the list along with the new updated Task List size after deleting.","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param deletedTask A String of details of the current deleted task.","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param tasklist    The current tasklist.","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"    public String showDeletedTask(String deletedTask, TaskLists tasklist) {","lastModifiedDate":"2022-02-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String deletedTaskMessage \u003d \"Noted. I\u0027ve removed this task: \\n\\t\\t\" + deletedTask;","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deletedTaskMessage2 \u003d \"\\tNow you have \" + tasklist.getSize() + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"        return ( deletedTaskMessage + deletedTaskMessage2 );","lastModifiedDate":"2022-02-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Display the current task set to done \u0026 update the status of the task.","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param doneTask A string of the description of the task.","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"    public String showDoneTask(String doneTask) {","lastModifiedDate":"2022-02-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String doneMessage \u003d \"Nice! I\u0027ve marked this task as done: \\n\\t\" + doneTask;","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"        return doneMessage;","lastModifiedDate":"2022-02-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Display the whole list to user.","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @param list String of current task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"    public String showList(String list) {","lastModifiedDate":"2022-02-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String listTask \u003d \"Here are the Tasks in your list:\\n\\t\" + list + \"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"        return listTask;","lastModifiedDate":"2022-02-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Displays the matching result from the keyword search by user.","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param list String of matching result list.","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"    public String showFindResult(String list) {","lastModifiedDate":"2022-02-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String listResult \u003d \"Here are the matching tasks in your list:\\n\\t\" + list + \"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"        return listResult;","lastModifiedDate":"2022-02-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Displays goodbye message to users when they type in \"bye\".","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"    public String showOffline() {","lastModifiedDate":"2022-02-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String goodbye \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"        return goodbye;","lastModifiedDate":"2022-02-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * When user inputs a file that is not in the correct format or erroneous file.","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"    public String showFileInputError() { //can be for files input","lastModifiedDate":"2022-02-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"There is something wrong with the previous file, please check the content\\n\\tof the file. I\u0027m unable to load the past task list.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"        return errorMessage;","lastModifiedDate":"2022-02-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * When user inputs a ToDO task yet not stating the description of the task.","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"    public String showToDoEmptyError() {","lastModifiedDate":"2022-02-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"\\u2639 OOPS!!! The description of a todo cannot be empty.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"        return errorMessage;","lastModifiedDate":"2022-02-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * When user inputs an unknown command for duke to understand and process.","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"KaydenKhor"},"content":"    public String showUnknownInputError() {","lastModifiedDate":"2022-02-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"KaydenKhor"},"content":"        return errorMessage;","lastModifiedDate":"2022-02-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * When user inputs a Deadlines task yet not stating the description of the task.","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"KaydenKhor"},"content":"    public String showDeadlineEmptyError() {","lastModifiedDate":"2022-02-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"\\u2639 OOPS!!! The description of the deadline cannot be empty.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"KaydenKhor"},"content":"        return errorMessage;","lastModifiedDate":"2022-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * When user inputs a Events task yet not stating the description of the task.","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"KaydenKhor"},"content":"    public String showEventEmptyError() {","lastModifiedDate":"2022-02-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"\\u2639 OOPS!!! The description of the event cannot be empty.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"KaydenKhor"},"content":"        return errorMessage;","lastModifiedDate":"2022-02-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * When duke access an empty list.","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"KaydenKhor"},"content":"    public String showListEmptyError() {","lastModifiedDate":"2022-02-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"\\u2639 You have an empty list.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"KaydenKhor"},"content":"        return errorMessage;","lastModifiedDate":"2022-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * When user inputs an invalid task format.","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"KaydenKhor"},"content":"    public String showInvalidTaskFormatError() {","lastModifiedDate":"2022-02-24"},{"lineNumber":155,"author":{"gitId":"KaydenKhor"},"content":"        String errorMessage \u003d \"You\u0027ve entered an invalid format of Task/Command, please check your input format again. You can refer to the user guide for the right input format. \\n\";","lastModifiedDate":"2022-02-27"},{"lineNumber":156,"author":{"gitId":"KaydenKhor"},"content":"        return errorMessage;","lastModifiedDate":"2022-02-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * When user inputs a task numnber which is not in the index of the current list size.","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"KaydenKhor"},"content":"    public String showInvalidTaskNumberError() {","lastModifiedDate":"2022-02-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"You\u0027ve entered an invalid value for Task, please key in valid task number.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"KaydenKhor"},"content":"        return errorMessage;","lastModifiedDate":"2022-02-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Error while duke is reading the file. Maybe the content of the file or the filepath error.","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"    public String showFileError() {","lastModifiedDate":"2022-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"Duke is unable to read your file, please check your input filepath again.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"        return errorMessage;","lastModifiedDate":"2022-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Error while duke is reading the file. Maybe the content of the file or the filepath error.","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"    public String showDateTimeError() {","lastModifiedDate":"2022-02-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"Please check your date and time format and re-enter it according to the stated format\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"        return errorMessage;","lastModifiedDate":"2022-02-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * When the find command is activated, duke is unable to find the relating task with the user\u0027s input.","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"KaydenKhor"},"content":"    public String showFindNoResult() {","lastModifiedDate":"2022-02-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"Sorry, I am unable to find any task like that.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"KaydenKhor"},"content":"        return errorMessage;","lastModifiedDate":"2022-02-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":191,"author":{"gitId":"KaydenKhor"},"content":"     * When the user enter an invlaid task number,  duke is unable to find the relating task with the user\u0027s input.","lastModifiedDate":"2022-02-27"},{"lineNumber":192,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":193,"author":{"gitId":"KaydenKhor"},"content":"    public static String showTagDone(String tagTask) {","lastModifiedDate":"2022-02-27"},{"lineNumber":194,"author":{"gitId":"KaydenKhor"},"content":"        String tagMessage \u003d \"Nice! I\u0027ve tagged this task: \\n\\t\" + tagTask;","lastModifiedDate":"2022-02-27"},{"lineNumber":195,"author":{"gitId":"KaydenKhor"},"content":"        return tagMessage;","lastModifiedDate":"2022-02-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"-":155,"KaydenKhor":43}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"    protected String tag;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    protected char type;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"        this.tag \u003d \"#empty\";","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the description of the task","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @return The description of the task in string.","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getTask() {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return description;","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Sets a task done.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setTaskDone() {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"     * Returns the tag of the current task","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"     * @return A string of the current task\u0027s tag.","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"    public String getTag() {","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":"        return this.tag;","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Get the task status, whether is the current task done or not.","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return a Tick Symbol if it is done, Cross symbol other wise.","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String getTaskStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"]\";","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Get the type of current Task, if it is a todo, event, deadline task.","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * todo \u003d \u0027T\u0027","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * event \u003d \u0027E\u0027","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * deadline \u003d \u0027D\u0027","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return [T/E/D]","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getType() {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return \"[\" + this.type + \"]\";","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getDetails() {","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns the description of the current task","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @return A string of the current task\u0027s description.","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this.description;","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"     * Tags the task","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"     *","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"    public void tagTask(String message) {","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"        this.tag \u003d message;","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"-":63,"KaydenKhor":19}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"KaydenKhor":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"KaydenKhor":19}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"# Duke project template","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"## User Guide","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"Duke is an interactive desktop app for managing your day to day tasking list, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, duke can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"1. Quick start","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"1. Features","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a to-do task: todo","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding an event task: event","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a task with deadline: deadline ","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"\t1. Listing all available task : list","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"\t1. Marking/unmarking tasks as done: done","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"\t1. Deleting a task: delete","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"\t1. Finding a task: find","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"\t1. Exiting duke: bye","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"\t1. Saving the data","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"1. FAQ","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"1. Command summary","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"## Quick Start","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"   1. Click `Open`.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"```","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":" ____        _        ","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"\tHello! I\u0027m Duke","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"\tWhat can i do for you?","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"\t","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"   ```","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":" 5. Type the command in the command box and press Enter to execute it. e.g. typing list and pressing Enter will display all task that you have saved so far in the window.","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"Some example commands you can try:","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"\t1. list : Lists all tasks available in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"\t1. todo homework1 : Adds a todo task named homework to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"\t1. event Birthday party /at John’s house : Adds an event task named Birthday party  with the location at John\u0027s house","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"\t1. deadline project task 1 /by Tuesday: Adds a deadline task named project task 1 with a deadline by the upcoming Tuesday.","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"\t1. delete3 : Deletes the 3rd task shown in the current task list.","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"\t1. find work : Find a task by searching for the keyword work","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"\t1. bye : Exits the application.","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"6. Duke has auto-save and auto-load function. The list is being save as a text file named \"Duke.txt\" which is auto created and overwritten in the root folder.","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"7. Refer to the Features below for details of each command.","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eNotes about the command format:\u003c/b\u003e","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"\t1. This application is case INSENSITIVE. All commands are readable regardless upper or lower case.","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"\t2. Date and time format are as shown: yyyy-mm-dd HHMM","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"### Adding a to-do task: todo","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"Adds a todo task to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"Format: [todo] [description]","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"todo homework","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"ToDo HomeWork 2","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"### Adding an event task: event","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"Adds an event task to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"Format: [event] [description] [/at] [Location]","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"KaydenKhor"},"content":"event Birthday party /at John’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"EvEnT Birthday Party 2 /at sam’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"### Adding a task with deadline: deadline ","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"KaydenKhor"},"content":"Adds a task with deadline to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"KaydenKhor"},"content":"Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM]","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"DeaDLine Project 3 /by Tuesday","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"KaydenKhor"},"content":"### Listing all available task : list","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"Format: [list]","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"KaydenKhor"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"KaydenKhor"},"content":"### Marking/unmarking tasks as done: done","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"KaydenKhor"},"content":"Updates a selected task\u0027s status as done in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"KaydenKhor"},"content":"Format: [done] [Task’s index in list]","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"KaydenKhor"},"content":"done 1","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"KaydenKhor"},"content":"done 2","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"KaydenKhor"},"content":"### Deleting a task: delete","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"KaydenKhor"},"content":"Deletes a task from the list. After deleting a task, all task list’s index will all be updated accordingly.","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"KaydenKhor"},"content":"Format: [delete] [Task’s index in list]","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"KaydenKhor"},"content":"delete1","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"KaydenKhor"},"content":"delete 2","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"KaydenKhor"},"content":"### Finding a task: find","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"KaydenKhor"},"content":"Finds a task by searching for the keyword. The keyword need not be word for word, duke is smart enough to find the closest result to add into the found result and display for the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"KaydenKhor"},"content":"Format: [find] [keyword]","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"KaydenKhor"},"content":"find work","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"KaydenKhor"},"content":"find p","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"KaydenKhor"},"content":"find party","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"KaydenKhor"},"content":"### Exiting duke: bye","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"KaydenKhor"},"content":"This will exit the application.","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"KaydenKhor"},"content":"Format: [bye]","lastModifiedDate":"2022-01-25"},{"lineNumber":165,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"KaydenKhor"},"content":"bye","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"Bye","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"### Saving the data","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"KaydenKhor"},"content":"Duke\u0027s task list are saved in the root folder automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"KaydenKhor"},"content":"## FAQ","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eQ\u003c/b\u003e: How do I transfer my task list to another Computer?","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eA\u003c/b\u003e: Install the app in the other computer and copy the current \"Duke.txt\" that contains the data of your previous Duke root folder to the new computer\u0027s duke\u0027s root folder.","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"KaydenKhor"},"content":"## Command summary","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"KaydenKhor"},"content":"Action | Format, Examples","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"KaydenKhor"},"content":"------------ | -------------","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003etodo\u003c/b\u003e | Format: [todo] [description] Example: todo homework","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eevent\u003c/b\u003e | Format: [event] [description] [/at] [Location] Example: event Birthday party /at John’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":187,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edeadline\u003c/b\u003e | Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM] Example: Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003elist\u003c/b\u003e | Format: [list]","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edone\u003c/b\u003e | Format: [done] [Task’s index in list] Example: delete1","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003efind\u003c/b\u003e | Format: [find] [keyword] Example: find work","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003ebye\u003c/b\u003e | Format: [bye]","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"KaydenKhor":164,"-":27}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"# Duke project template","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"## User Guide","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"Duke is an interactive desktop app for managing your day to day tasking list, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, duke can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"1. Quick start","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"1. Features","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a to-do task: todo","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding an event task: event","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a task with deadline: deadline ","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"\t1. Listing all available task : list","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"\t1. Marking/unmarking tasks as done: done","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"\t1. Deleting a task: delete","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"\t1. Finding a task: find","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"\t1. Exiting duke: bye","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"\t1. Saving the data","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"1. FAQ","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"1. Command summary","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"## Quick Start","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"   1. Click `Open`.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"```","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":" ____        _        ","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"\tHello! I\u0027m Duke","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"\tWhat can i do for you?","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"\t","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"   ```","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":" 5. Type the command in the command box and press Enter to execute it. e.g. typing list and pressing Enter will display all task that you have saved so far in the window.","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"Some example commands you can try:","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"\t1. list : Lists all tasks available in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"\t1. todo homework1 : Adds a todo task named homework to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"\t1. event Birthday party /at John’s house : Adds an event task named Birthday party  with the location at John\u0027s house","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"\t1. deadline project task 1 /by Tuesday: Adds a deadline task named project task 1 with a deadline by the upcoming Tuesday.","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"\t1. delete3 : Deletes the 3rd task shown in the current task list.","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"\t1. find work : Find a task by searching for the keyword work","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"\t1. bye : Exits the application.","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"6. Duke has auto-save and auto-load function. The list is being save as a text file named \"Duke.txt\" which is auto created and overwritten in the root folder.","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"7. Refer to the Features below for details of each command.","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eNotes about the command format:\u003c/b\u003e","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"\t1. This application is case INSENSITIVE. All commands are readable regardless upper or lower case.","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"\t2. Date and time format are as shown: yyyy-mm-dd HHMM","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"### Adding a to-do task: todo","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"Adds a todo task to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"Format: [todo] [description]","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"todo homework","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"ToDo HomeWork 2","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"### Adding an event task: event","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"Adds an event task to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"Format: [event] [description] [/at] [Location]","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"KaydenKhor"},"content":"event Birthday party /at John’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"EvEnT Birthday Party 2 /at sam’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"### Adding a task with deadline: deadline ","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"KaydenKhor"},"content":"Adds a task with deadline to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"KaydenKhor"},"content":"Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM]","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"DeaDLine Project 3 /by Tuesday","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"KaydenKhor"},"content":"### Listing all available task : list","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"Format: [list]","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"KaydenKhor"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"KaydenKhor"},"content":"### Marking/unmarking tasks as done: done","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"KaydenKhor"},"content":"Updates a selected task\u0027s status as done in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"KaydenKhor"},"content":"Format: [done] [Task’s index in list]","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"KaydenKhor"},"content":"done 1","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"KaydenKhor"},"content":"done 2","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"KaydenKhor"},"content":"### Deleting a task: delete","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"KaydenKhor"},"content":"Deletes a task from the list. After deleting a task, all task list’s index will all be updated accordingly.","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"KaydenKhor"},"content":"Format: [delete] [Task’s index in list]","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"KaydenKhor"},"content":"delete1","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"KaydenKhor"},"content":"delete 2","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"KaydenKhor"},"content":"### Finding a task: find","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"KaydenKhor"},"content":"Finds a task by searching for the keyword. The keyword need not be word for word, duke is smart enough to find the closest result to add into the found result and display for the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"KaydenKhor"},"content":"Format: [find] [keyword]","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"KaydenKhor"},"content":"find work","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"KaydenKhor"},"content":"find p","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"KaydenKhor"},"content":"find party","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"KaydenKhor"},"content":"### Exiting duke: bye","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"KaydenKhor"},"content":"This will exit the application.","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"KaydenKhor"},"content":"Format: [bye]","lastModifiedDate":"2022-01-25"},{"lineNumber":165,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"KaydenKhor"},"content":"bye","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"Bye","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"### Saving the data","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"KaydenKhor"},"content":"Duke\u0027s task list are saved in the root folder automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"KaydenKhor"},"content":"## FAQ","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eQ\u003c/b\u003e: How do I transfer my task list to another Computer?","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eA\u003c/b\u003e: Install the app in the other computer and copy the current \"Duke.txt\" that contains the data of your previous Duke root folder to the new computer\u0027s duke\u0027s root folder.","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"KaydenKhor"},"content":"## Command summary","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"KaydenKhor"},"content":"Action | Format, Examples","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"KaydenKhor"},"content":"------------ | -------------","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003etodo\u003c/b\u003e | Format: [todo] [description] Example: todo homework","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eevent\u003c/b\u003e | Format: [event] [description] [/at] [Location] Example: event Birthday party /at John’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":187,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edeadline\u003c/b\u003e | Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM] Example: Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003elist\u003c/b\u003e | Format: [list]","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edone\u003c/b\u003e | Format: [done] [Task’s index in list] Example: delete1","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003efind\u003c/b\u003e | Format: [find] [keyword] Example: find work","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003ebye\u003c/b\u003e | Format: [bye]","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"KaydenKhor":164,"-":27}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"# Duke project template","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"## User Guide","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"Duke is an interactive desktop app for managing your day to day tasking list, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, duke can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"1. Quick start","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"1. Features","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a to-do task: todo","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding an event task: event","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a task with deadline: deadline ","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"\t1. Listing all available task : list","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"\t1. Marking/unmarking tasks as done: done","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"\t1. Deleting a task: delete","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"\t1. Finding a task: find","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"\t1. Exiting duke: bye","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"\t1. Saving the data","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"1. FAQ","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"1. Command summary","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"## Quick Start","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"   1. Click `Open`.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"```","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":" ____        _        ","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"\tHello! I\u0027m Duke","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"\tWhat can i do for you?","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"\t","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"   ```","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":" 5. Type the command in the command box and press Enter to execute it. e.g. typing list and pressing Enter will display all task that you have saved so far in the window.","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"Some example commands you can try:","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"\t1. list : Lists all tasks available in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"\t1. todo homework1 : Adds a todo task named homework to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"\t1. event Birthday party /at John’s house : Adds an event task named Birthday party  with the location at John\u0027s house","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"\t1. deadline project task 1 /by Tuesday: Adds a deadline task named project task 1 with a deadline by the upcoming Tuesday.","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"\t1. delete3 : Deletes the 3rd task shown in the current task list.","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"\t1. find work : Find a task by searching for the keyword work","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"\t1. bye : Exits the application.","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"6. Duke has auto-save and auto-load function. The list is being save as a text file named \"Duke.txt\" which is auto created and overwritten in the root folder.","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"7. Refer to the Features below for details of each command.","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"## Features","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eNotes about the command format:\u003c/b\u003e","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"\t1. This application is case INSENSITIVE. All commands are readable regardless upper or lower case.","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"\t2. Date and time format are as shown: yyyy-mm-dd HHMM","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"### Adding a to-do task: todo","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"Adds a todo task to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"Format: [todo] [description]","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"todo homework","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"ToDo HomeWork 2","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"### Adding an event task: event","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"Adds an event task to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"Format: [event] [description] [/at] [Location]","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"KaydenKhor"},"content":"event Birthday party /at John’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"EvEnT Birthday Party 2 /at sam’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"### Adding a task with deadline: deadline ","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"KaydenKhor"},"content":"Adds a task with deadline to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"KaydenKhor"},"content":"Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM]","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"DeaDLine Project 3 /by Tuesday","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"KaydenKhor"},"content":"### Listing all available task : list","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"Format: [list]","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"KaydenKhor"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"KaydenKhor"},"content":"### Marking/unmarking tasks as done: done","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"KaydenKhor"},"content":"Updates a selected task\u0027s status as done in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"KaydenKhor"},"content":"Format: [done] [Task’s index in list]","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"KaydenKhor"},"content":"done 1","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"KaydenKhor"},"content":"done 2","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"KaydenKhor"},"content":"### Deleting a task: delete","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"KaydenKhor"},"content":"Deletes a task from the list. After deleting a task, all task list’s index will all be updated accordingly.","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"KaydenKhor"},"content":"Format: [delete] [Task’s index in list]","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"KaydenKhor"},"content":"delete1","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"KaydenKhor"},"content":"delete 2","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"KaydenKhor"},"content":"### Finding a task: find","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"KaydenKhor"},"content":"Finds a task by searching for the keyword. The keyword need not be word for word, duke is smart enough to find the closest result to add into the found result and display for the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"KaydenKhor"},"content":"Format: [find] [keyword]","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"KaydenKhor"},"content":"find work","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"KaydenKhor"},"content":"find p","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"KaydenKhor"},"content":"find party","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"KaydenKhor"},"content":"### Exiting duke: bye","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"KaydenKhor"},"content":"This will exit the application.","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"KaydenKhor"},"content":"Format: [bye]","lastModifiedDate":"2022-01-25"},{"lineNumber":165,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"KaydenKhor"},"content":"bye","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"Bye","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"### Saving the data","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"KaydenKhor"},"content":"Duke\u0027s task list are saved in the root folder automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"KaydenKhor"},"content":"## FAQ","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eQ\u003c/b\u003e: How do I transfer my task list to another Computer?","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eA\u003c/b\u003e: Install the app in the other computer and copy the current \"Duke.txt\" that contains the data of your previous Duke root folder to the new computer\u0027s duke\u0027s root folder.","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"KaydenKhor"},"content":"## Command summary","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"KaydenKhor"},"content":"Action | Format, Examples","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"KaydenKhor"},"content":"------------ | -------------","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003etodo\u003c/b\u003e | Format: [todo] [description] Example: todo homework","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eevent\u003c/b\u003e | Format: [event] [description] [/at] [Location] Example: event Birthday party /at John’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":187,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edeadline\u003c/b\u003e | Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM] Example: Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003elist\u003c/b\u003e | Format: [list]","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edone\u003c/b\u003e | Format: [done] [Task’s index in list] Example: delete1","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003efind\u003c/b\u003e | Format: [find] [keyword] Example: find work","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003ebye\u003c/b\u003e | Format: [bye]","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"KaydenKhor":191}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"# Duke project template","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"## User Guide","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"Duke is an interactive desktop app for managing your day to day tasking list, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, duke can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"1. Quick start","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"1. Features","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a to-do task: todo","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding an event task: event","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a task with deadline: deadline ","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"\t1. Listing all available task : list","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"\t1. Marking/unmarking tasks as done: done","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"\t1. Deleting a task: delete","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"\t1. Finding a task: find","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"\t1. Exiting duke: bye","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"\t1. Saving the data","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"1. FAQ","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"1. Command summary","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"## Quick Start","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"   1. Click `Open`.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"```","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":" ____        _        ","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"\tHello! I\u0027m Duke","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"\tWhat can i do for you?","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"\t","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"   ```","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":" 5. Type the command in the command box and press Enter to execute it. e.g. typing list and pressing Enter will display all task that you have saved so far in the window.","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"Some example commands you can try:","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"\t1. list : Lists all tasks available in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"\t1. todo homework1 : Adds a todo task named homework to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"\t1. event Birthday party /at John’s house : Adds an event task named Birthday party  with the location at John\u0027s house","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"\t1. deadline project task 1 /by Tuesday: Adds a deadline task named project task 1 with a deadline by the upcoming Tuesday.","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"\t1. delete3 : Deletes the 3rd task shown in the current task list.","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"\t1. find work : Find a task by searching for the keyword work","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"\t1. bye : Exits the application.","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"6. Duke has auto-save and auto-load function. The list is being save as a text file named \"Duke.txt\" which is auto created and overwritten in the root folder.","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"7. Refer to the Features below for details of each command.","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"## Features","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eNotes about the command format:\u003c/b\u003e","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"\t1. This application is case INSENSITIVE. All commands are readable regardless upper or lower case.","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"\t2. Date and time format are as shown: yyyy-mm-dd HHMM","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"### Adding a to-do task: todo","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"Adds a todo task to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"Format: [todo] [description]","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"todo homework","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"ToDo HomeWork 2","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"### Adding an event task: event","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"Adds an event task to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"Format: [event] [description] [/at] [Location]","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"KaydenKhor"},"content":"event Birthday party /at John’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"EvEnT Birthday Party 2 /at sam’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"### Adding a task with deadline: deadline ","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"KaydenKhor"},"content":"Adds a task with deadline to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"KaydenKhor"},"content":"Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM]","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"DeaDLine Project 3 /by Tuesday","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"KaydenKhor"},"content":"### Listing all available task : list","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"Format: [list]","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"KaydenKhor"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"KaydenKhor"},"content":"### Marking/unmarking tasks as done: done","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"KaydenKhor"},"content":"Updates a selected task\u0027s status as done in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"KaydenKhor"},"content":"Format: [done] [Task’s index in list]","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"KaydenKhor"},"content":"done 1","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"KaydenKhor"},"content":"done 2","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"KaydenKhor"},"content":"### Deleting a task: delete","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"KaydenKhor"},"content":"Deletes a task from the list. After deleting a task, all task list’s index will all be updated accordingly.","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"KaydenKhor"},"content":"Format: [delete] [Task’s index in list]","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"KaydenKhor"},"content":"delete1","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"KaydenKhor"},"content":"delete 2","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"KaydenKhor"},"content":"### Finding a task: find","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"KaydenKhor"},"content":"Finds a task by searching for the keyword. The keyword need not be word for word, duke is smart enough to find the closest result to add into the found result and display for the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"KaydenKhor"},"content":"Format: [find] [keyword]","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"KaydenKhor"},"content":"find work","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"KaydenKhor"},"content":"find p","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"KaydenKhor"},"content":"find party","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"KaydenKhor"},"content":"### Exiting duke: bye","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"KaydenKhor"},"content":"This will exit the application.","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"KaydenKhor"},"content":"Format: [bye]","lastModifiedDate":"2022-01-25"},{"lineNumber":165,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"KaydenKhor"},"content":"bye","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"Bye","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"### Saving the data","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"KaydenKhor"},"content":"Duke\u0027s task list are saved in the root folder automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"KaydenKhor"},"content":"## FAQ","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eQ\u003c/b\u003e: How do I transfer my task list to another Computer?","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eA\u003c/b\u003e: Install the app in the other computer and copy the current \"Duke.txt\" that contains the data of your previous Duke root folder to the new computer\u0027s duke\u0027s root folder.","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"KaydenKhor"},"content":"## Command summary","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"KaydenKhor"},"content":"Action | Format, Examples","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"KaydenKhor"},"content":"------------ | -------------","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003etodo\u003c/b\u003e | Format: [todo] [description] Example: todo homework","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eevent\u003c/b\u003e | Format: [event] [description] [/at] [Location] Example: event Birthday party /at John’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":187,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edeadline\u003c/b\u003e | Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM] Example: Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003elist\u003c/b\u003e | Format: [list]","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edone\u003c/b\u003e | Format: [done] [Task’s index in list] Example: delete1","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003efind\u003c/b\u003e | Format: [find] [keyword] Example: find work","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003ebye\u003c/b\u003e | Format: [bye]","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"KaydenKhor":191}},{"path":"src/production/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/TIC4001 - Individual Project/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KaydenKhor"},"content":"# Duke project template","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"KaydenKhor"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"KaydenKhor"},"content":"## User Guide","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"KaydenKhor"},"content":"Duke is an interactive desktop app for managing your day to day tasking list, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, duke can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"KaydenKhor"},"content":"1. Quick start","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"KaydenKhor"},"content":"1. Features","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a to-do task: todo","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding an event task: event","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"KaydenKhor"},"content":"\t1. Adding a task with deadline: deadline ","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"KaydenKhor"},"content":"\t1. Listing all available task : list","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"KaydenKhor"},"content":"\t1. Marking/unmarking tasks as done: done","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"KaydenKhor"},"content":"\t1. Deleting a task: delete","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"KaydenKhor"},"content":"\t1. Finding a task: find","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"KaydenKhor"},"content":"\t1. Exiting duke: bye","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"KaydenKhor"},"content":"\t1. Saving the data","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"KaydenKhor"},"content":"1. FAQ","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"KaydenKhor"},"content":"1. Command summary","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"KaydenKhor"},"content":"## Quick Start","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"KaydenKhor"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-01-25"},{"lineNumber":27,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":28,"author":{"gitId":"KaydenKhor"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"KaydenKhor"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"KaydenKhor"},"content":"   1. Click `Open`.","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"KaydenKhor"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"KaydenKhor"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"KaydenKhor"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"KaydenKhor"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"KaydenKhor"},"content":"4. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"KaydenKhor"},"content":"```","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"KaydenKhor"},"content":" ____        _        ","lastModifiedDate":"2022-01-25"},{"lineNumber":38,"author":{"gitId":"KaydenKhor"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2022-01-25"},{"lineNumber":39,"author":{"gitId":"KaydenKhor"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"KaydenKhor"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2022-01-25"},{"lineNumber":41,"author":{"gitId":"KaydenKhor"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"KaydenKhor"},"content":"\tHello! I\u0027m Duke","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"KaydenKhor"},"content":"\tWhat can i do for you?","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"KaydenKhor"},"content":"\t________________________________________________________________","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"KaydenKhor"},"content":"\t","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"KaydenKhor"},"content":"   ```","lastModifiedDate":"2022-01-25"},{"lineNumber":48,"author":{"gitId":"KaydenKhor"},"content":" 5. Type the command in the command box and press Enter to execute it. e.g. typing list and pressing Enter will display all task that you have saved so far in the window.","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"KaydenKhor"},"content":"Some example commands you can try:","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"KaydenKhor"},"content":"\t1. list : Lists all tasks available in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"KaydenKhor"},"content":"\t1. todo homework1 : Adds a todo task named homework to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":54,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":55,"author":{"gitId":"KaydenKhor"},"content":"\t1. event Birthday party /at John’s house : Adds an event task named Birthday party  with the location at John\u0027s house","lastModifiedDate":"2022-01-25"},{"lineNumber":56,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":57,"author":{"gitId":"KaydenKhor"},"content":"\t1. deadline project task 1 /by Tuesday: Adds a deadline task named project task 1 with a deadline by the upcoming Tuesday.","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"KaydenKhor"},"content":"\t1. delete3 : Deletes the 3rd task shown in the current task list.","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"KaydenKhor"},"content":"\t1. find work : Find a task by searching for the keyword work","lastModifiedDate":"2022-01-25"},{"lineNumber":62,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"KaydenKhor"},"content":"\t1. bye : Exits the application.","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"KaydenKhor"},"content":"6. Duke has auto-save and auto-load function. The list is being save as a text file named \"Duke.txt\" which is auto created and overwritten in the root folder.","lastModifiedDate":"2022-01-25"},{"lineNumber":66,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"KaydenKhor"},"content":"7. Refer to the Features below for details of each command.","lastModifiedDate":"2022-01-25"},{"lineNumber":68,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"KaydenKhor"},"content":"## Features","lastModifiedDate":"2022-01-25"},{"lineNumber":70,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eNotes about the command format:\u003c/b\u003e","lastModifiedDate":"2022-01-25"},{"lineNumber":72,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"KaydenKhor"},"content":"\t1. This application is case INSENSITIVE. All commands are readable regardless upper or lower case.","lastModifiedDate":"2022-01-25"},{"lineNumber":74,"author":{"gitId":"KaydenKhor"},"content":"\t2. Date and time format are as shown: yyyy-mm-dd HHMM","lastModifiedDate":"2022-01-25"},{"lineNumber":75,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":76,"author":{"gitId":"KaydenKhor"},"content":"### Adding a to-do task: todo","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":78,"author":{"gitId":"KaydenKhor"},"content":"Adds a todo task to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":79,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":80,"author":{"gitId":"KaydenKhor"},"content":"Format: [todo] [description]","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":82,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2022-01-25"},{"lineNumber":83,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"KaydenKhor"},"content":"todo homework","lastModifiedDate":"2022-01-25"},{"lineNumber":85,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":86,"author":{"gitId":"KaydenKhor"},"content":"ToDo HomeWork 2","lastModifiedDate":"2022-01-25"},{"lineNumber":87,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":88,"author":{"gitId":"KaydenKhor"},"content":"### Adding an event task: event","lastModifiedDate":"2022-01-25"},{"lineNumber":89,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"KaydenKhor"},"content":"Adds an event task to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":91,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"KaydenKhor"},"content":"Format: [event] [description] [/at] [Location]","lastModifiedDate":"2022-01-25"},{"lineNumber":93,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":94,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":95,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":96,"author":{"gitId":"KaydenKhor"},"content":"event Birthday party /at John’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":97,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":98,"author":{"gitId":"KaydenKhor"},"content":"EvEnT Birthday Party 2 /at sam’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":99,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":100,"author":{"gitId":"KaydenKhor"},"content":"### Adding a task with deadline: deadline ","lastModifiedDate":"2022-01-25"},{"lineNumber":101,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":102,"author":{"gitId":"KaydenKhor"},"content":"Adds a task with deadline to the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":103,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":104,"author":{"gitId":"KaydenKhor"},"content":"Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM]","lastModifiedDate":"2022-01-25"},{"lineNumber":105,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"KaydenKhor"},"content":"Example: ","lastModifiedDate":"2022-01-25"},{"lineNumber":107,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":108,"author":{"gitId":"KaydenKhor"},"content":"Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2022-01-25"},{"lineNumber":109,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":110,"author":{"gitId":"KaydenKhor"},"content":"DeaDLine Project 3 /by Tuesday","lastModifiedDate":"2022-01-25"},{"lineNumber":111,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"KaydenKhor"},"content":"### Listing all available task : list","lastModifiedDate":"2022-01-25"},{"lineNumber":113,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":114,"author":{"gitId":"KaydenKhor"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2022-01-25"},{"lineNumber":115,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":116,"author":{"gitId":"KaydenKhor"},"content":"Format: [list]","lastModifiedDate":"2022-01-25"},{"lineNumber":117,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":118,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":119,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":120,"author":{"gitId":"KaydenKhor"},"content":"list","lastModifiedDate":"2022-01-25"},{"lineNumber":121,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":122,"author":{"gitId":"KaydenKhor"},"content":"### Marking/unmarking tasks as done: done","lastModifiedDate":"2022-01-25"},{"lineNumber":123,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":124,"author":{"gitId":"KaydenKhor"},"content":"Updates a selected task\u0027s status as done in the list.","lastModifiedDate":"2022-01-25"},{"lineNumber":125,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":126,"author":{"gitId":"KaydenKhor"},"content":"Format: [done] [Task’s index in list]","lastModifiedDate":"2022-01-25"},{"lineNumber":127,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":128,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":129,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":130,"author":{"gitId":"KaydenKhor"},"content":"done 1","lastModifiedDate":"2022-01-25"},{"lineNumber":131,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":132,"author":{"gitId":"KaydenKhor"},"content":"done 2","lastModifiedDate":"2022-01-25"},{"lineNumber":133,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":134,"author":{"gitId":"KaydenKhor"},"content":"### Deleting a task: delete","lastModifiedDate":"2022-01-25"},{"lineNumber":135,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":136,"author":{"gitId":"KaydenKhor"},"content":"Deletes a task from the list. After deleting a task, all task list’s index will all be updated accordingly.","lastModifiedDate":"2022-01-25"},{"lineNumber":137,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":138,"author":{"gitId":"KaydenKhor"},"content":"Format: [delete] [Task’s index in list]","lastModifiedDate":"2022-01-25"},{"lineNumber":139,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":140,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":141,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":142,"author":{"gitId":"KaydenKhor"},"content":"delete1","lastModifiedDate":"2022-01-25"},{"lineNumber":143,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":144,"author":{"gitId":"KaydenKhor"},"content":"delete 2","lastModifiedDate":"2022-01-25"},{"lineNumber":145,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":146,"author":{"gitId":"KaydenKhor"},"content":"### Finding a task: find","lastModifiedDate":"2022-01-25"},{"lineNumber":147,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":148,"author":{"gitId":"KaydenKhor"},"content":"Finds a task by searching for the keyword. The keyword need not be word for word, duke is smart enough to find the closest result to add into the found result and display for the user.","lastModifiedDate":"2022-01-25"},{"lineNumber":149,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"KaydenKhor"},"content":"Format: [find] [keyword]","lastModifiedDate":"2022-01-25"},{"lineNumber":151,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":152,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":153,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":154,"author":{"gitId":"KaydenKhor"},"content":"find work","lastModifiedDate":"2022-01-25"},{"lineNumber":155,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":156,"author":{"gitId":"KaydenKhor"},"content":"find p","lastModifiedDate":"2022-01-25"},{"lineNumber":157,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":158,"author":{"gitId":"KaydenKhor"},"content":"find party","lastModifiedDate":"2022-01-25"},{"lineNumber":159,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":160,"author":{"gitId":"KaydenKhor"},"content":"### Exiting duke: bye","lastModifiedDate":"2022-01-25"},{"lineNumber":161,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":162,"author":{"gitId":"KaydenKhor"},"content":"This will exit the application.","lastModifiedDate":"2022-01-25"},{"lineNumber":163,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":164,"author":{"gitId":"KaydenKhor"},"content":"Format: [bye]","lastModifiedDate":"2022-01-25"},{"lineNumber":165,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":166,"author":{"gitId":"KaydenKhor"},"content":"Example:","lastModifiedDate":"2022-01-25"},{"lineNumber":167,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":168,"author":{"gitId":"KaydenKhor"},"content":"bye","lastModifiedDate":"2022-01-25"},{"lineNumber":169,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":170,"author":{"gitId":"KaydenKhor"},"content":"Bye","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":172,"author":{"gitId":"KaydenKhor"},"content":"### Saving the data","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":174,"author":{"gitId":"KaydenKhor"},"content":"Duke\u0027s task list are saved in the root folder automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-01-25"},{"lineNumber":175,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":176,"author":{"gitId":"KaydenKhor"},"content":"## FAQ","lastModifiedDate":"2022-01-25"},{"lineNumber":177,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":178,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eQ\u003c/b\u003e: How do I transfer my task list to another Computer?","lastModifiedDate":"2022-01-25"},{"lineNumber":179,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eA\u003c/b\u003e: Install the app in the other computer and copy the current \"Duke.txt\" that contains the data of your previous Duke root folder to the new computer\u0027s duke\u0027s root folder.","lastModifiedDate":"2022-01-25"},{"lineNumber":180,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"KaydenKhor"},"content":"## Command summary","lastModifiedDate":"2022-01-25"},{"lineNumber":182,"author":{"gitId":"KaydenKhor"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":183,"author":{"gitId":"KaydenKhor"},"content":"Action | Format, Examples","lastModifiedDate":"2022-01-25"},{"lineNumber":184,"author":{"gitId":"KaydenKhor"},"content":"------------ | -------------","lastModifiedDate":"2022-01-25"},{"lineNumber":185,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003etodo\u003c/b\u003e | Format: [todo] [description] Example: todo homework","lastModifiedDate":"2022-01-25"},{"lineNumber":186,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003eevent\u003c/b\u003e | Format: [event] [description] [/at] [Location] Example: event Birthday party /at John’s house","lastModifiedDate":"2022-01-25"},{"lineNumber":187,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edeadline\u003c/b\u003e | Format: [deadline] [description] [/by] [yyyy-mm-dd HHMM] Example: Deadline Project 2 /by 2019-12-12 0900","lastModifiedDate":"2022-01-25"},{"lineNumber":188,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003elist\u003c/b\u003e | Format: [list]","lastModifiedDate":"2022-01-25"},{"lineNumber":189,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003edone\u003c/b\u003e | Format: [done] [Task’s index in list] Example: delete1","lastModifiedDate":"2022-01-25"},{"lineNumber":190,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003efind\u003c/b\u003e | Format: [find] [keyword] Example: find work","lastModifiedDate":"2022-01-25"},{"lineNumber":191,"author":{"gitId":"KaydenKhor"},"content":"\u003cb\u003ebye\u003c/b\u003e | Format: [bye]","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"KaydenKhor":191}}]
